/* This file is automatially generated by mkpat. Do not
edit it directly. Instead, edit the pattern database. */

#include <stdio.h> /* for NULL */
#include "liberty.h"
#include "patterns.h"
static int assist_params0[] = {15,1};

static struct patval pat0[]={
   {0,0,1},
   {1,1,2},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {2,-1,0},
   {2,-2,0},
   {0,-2,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params1[] = {5,1,0,0};

static struct patval pat1[]={
   {0,1,1},
   {0,0,1},
   {1,2,2},
   {1,-1,0},
   {0,4,0},
   {1,1,0},
   {0,3,0},
   {1,0,0},
   {1,3,0},
   {1,4,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params2[] = {5,1,0,0};

static struct patval pat2[]={
   {0,0,1},
   {1,2,2},
   {0,4,0},
   {1,-1,0},
   {0,3,0},
   {1,1,0},
   {0,1,0},
   {1,0,0},
   {1,3,0},
   {1,4,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params3[] = {10,1,0,0};

static struct patval pat3[]={
   {0,0,1},
   {1,2,2},
   {1,0,0},
   {1,1,0},
   {1,-1,0},
   {1,3,0},
   {2,-1,0},
   {0,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat4[]={
   {0,0,1},
   {1,-3,2},
   {2,-3,4},
   {1,-4,4},
   {2,-4,4},
   {3,-3,4},
   {3,-4,4},
   {1,1,0},
   {1,0,0},
   {1,-2,0},
   {1,-1,0},
   {2,-2,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-2,0},
   {2,-1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params5[] = {15,2};

static struct patval pat5[]={
   {0,3,1},
   {0,0,2},
   {1,0,4},
   {0,-1,4},
   {-1,-1,4},
   {2,0,4},
   {1,-1,4},
   {2,-1,4},
   {0,1,0},
   {1,1,0},
   {-1,1,0},
   {1,3,0},
   {-1,0,0},
   {0,2,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat6[]={
   {0,3,1},
   {0,0,2},
   {1,0,4},
   {0,-1,4},
   {-1,-1,4},
   {2,0,4},
   {1,-1,4},
   {2,-1,4},
   {0,1,0},
   {1,1,0},
   {-1,1,0},
   {1,3,0},
   {-1,0,0},
   {0,2,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat7[]={
   {0,3,1},
   {0,0,2},
   {1,0,4},
   {0,-1,4},
   {-1,-1,4},
   {2,0,4},
   {1,-1,4},
   {2,-1,4},
   {0,1,0},
   {1,1,0},
   {-1,1,0},
   {1,3,0},
   {-1,0,0},
   {0,2,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat8[]={
   {0,1,1},
   {1,3,1},
   {0,0,1},
   {1,-1,2},
   {1,0,2},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {0,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat9[]={
   {2,-1,1},
   {0,0,1},
   {3,0,2},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,2,0},
   {1,2,0},
   {0,-1,0},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {2,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params10[] = {10,1,0,0};

static struct patval pat10[]={
   {0,0,1},
   {1,2,2},
   {1,3,2},
   {1,0,0},
   {1,1,0},
   {1,-1,0},
   {0,1,0},
   {2,0,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat11[]={
   {0,0,1},
   {1,-3,2},
   {2,-4,2},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-2,0},
   {2,-3,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static int assist_params12[] = {5,1,0,0};

static struct patval pat12[]={
   {3,-1,1},
   {0,0,2},
   {0,2,0},
   {0,3,0},
   {1,-1,0},
   {1,0,0},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,-1,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,1,0},
   {5,2,0},
   {5,3,0}};

static struct patval pat13[]={
   {0,1,1},
   {0,0,1},
   {0,2,1},
   {2,2,2},
   {1,1,2},
   {1,-1,0},
   {1,-2,0},
   {0,-1,0},
   {1,0,0},
   {1,2,0},
   {0,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat14[]={
   {1,2,1},
   {2,2,1},
   {0,0,2},
   {1,1,2},
   {0,1,4},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {0,-1,0},
   {1,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat15[]={
   {2,-2,1},
   {0,0,2},
   {1,0,2},
   {2,0,2},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {-1,0,0},
   {-1,-1,0},
   {0,-1,0},
   {-1,-2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,-4,0},
   {2,-4,0},
   {2,-3,0},
   {-1,-3,0},
   {2,-1,0},
   {1,-4,0}};

static struct patval pat16[]={
   {2,-2,1},
   {0,0,2},
   {1,0,4},
   {-1,0,4},
   {2,0,4},
   {0,-3,0},
   {0,-2,0},
   {0,-4,0},
   {-1,-4,0},
   {-1,-1,0},
   {0,-1,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,-2,0},
   {2,-3,0},
   {-1,-3,0},
   {2,-1,0},
   {1,-4,0}};

static struct patval pat17[]={
   {1,2,1},
   {0,0,2},
   {0,1,0},
   {0,2,0},
   {0,-1,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,1,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat18[]={
   {0,2,1},
   {0,0,2},
   {-1,1,0},
   {-1,2,0},
   {-1,0,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,3,0},
   {0,1,0},
   {2,0,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {-1,-2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0}};

static struct patval pat19[]={
   {0,0,1},
   {2,-1,2},
   {2,0,0},
   {0,2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,-1,0},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params20[] = {5,1,0,0};

static struct patval pat20[]={
   {0,0,1},
   {0,1,2},
   {1,0,2},
   {-1,0,0},
   {0,-3,0},
   {-1,-1,0},
   {0,-1,0},
   {-1,-2,0},
   {-1,1,0},
   {0,-2,0},
   {-1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,-3,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static struct patval pat21[]={
   {0,0,1},
   {2,-2,2},
   {1,-2,2},
   {0,2,0},
   {2,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,-1,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params22[] = {10,1,0,0};

static struct patval pat22[]={
   {0,0,1},
   {1,-1,2},
   {2,-1,2},
   {3,-1,4},
   {1,2,0},
   {1,1,0},
   {1,0,0},
   {0,2,0},
   {1,3,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat23[]={
   {0,0,1},
   {1,-1,2},
   {2,-1,2},
   {1,3,4},
   {1,2,4},
   {3,-1,4},
   {1,0,0},
   {0,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,1,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params24[] = {10,1};

static struct patval pat24[]={
   {0,0,1},
   {1,-1,2},
   {2,-1,2},
   {3,-1,4},
   {1,2,0},
   {1,1,0},
   {1,0,0},
   {0,2,0},
   {1,3,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params25[] = {5,1,5,1};

static struct patval pat25[]={
   {1,2,1},
   {0,2,1},
   {0,1,2},
   {0,0,2},
   {3,1,4},
   {2,0,0},
   {1,1,0},
   {1,-1,0},
   {0,-1,0},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {2,-1,0},
   {3,2,0}};

static struct patval pat26[]={
   {0,0,1},
   {1,-2,2},
   {2,-2,2},
   {1,-1,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat27[]={
   {0,0,1},
   {2,-2,2},
   {1,-1,0},
   {1,-2,0},
   {1,1,0},
   {0,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat28[]={
   {0,2,1},
   {0,0,2},
   {-3,2,0},
   {-3,1,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-3,0,0},
   {-3,3,0},
   {-2,2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-3,-1,0},
   {-2,3,0},
   {0,1,0},
   {0,-1,0},
   {0,3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat29[]={
   {4,0,1},
   {0,0,1},
   {2,0,2},
   {0,2,0},
   {0,3,0},
   {0,1,0},
   {0,-1,0},
   {1,-2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {1,-1,0},
   {2,-1,0},
   {0,-2,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {2,1,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat30[]={
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {-1,-1,0},
   {0,-3,0},
   {0,-2,0},
   {-1,-2,0},
   {-1,-3,0},
   {0,-4,0},
   {0,-1,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,-4,0},
   {1,-4,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat31[]={
   {0,2,1},
   {0,0,1},
   {2,0,2},
   {0,1,0},
   {0,3,0},
   {1,-2,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,-2,0},
   {2,-1,0},
   {2,-2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params32[] = {8,1};

static struct patval pat32[]={
   {0,0,1},
   {2,0,2},
   {1,-2,2},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {-1,-2,0},
   {-1,-1,0},
   {1,-3,0},
   {-1,-3,0},
   {1,0,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat33[]={
   {0,0,1},
   {1,4,1},
   {1,2,2},
   {-1,3,0},
   {-1,2,0},
   {-1,1,0},
   {0,1,0},
   {0,3,0},
   {1,0,0},
   {1,1,0},
   {0,2,0},
   {-2,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat34[]={
   {6,1,1},
   {6,0,1},
   {0,0,1},
   {4,0,1},
   {4,-1,1},
   {3,0,2},
   {4,1,2},
   {5,1,2},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,-1,0},
   {2,-3,0},
   {1,-2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,-2,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {2,2,0},
   {0,1,0},
   {0,-2,0},
   {1,-3,0},
   {3,3,0},
   {4,-3,0},
   {4,-2,0},
   {0,3,0},
   {0,2,0},
   {0,-1,0},
   {4,2,0},
   {4,3,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {3,2,0},
   {5,2,0},
   {5,3,0},
   {6,-3,0},
   {6,-2,0},
   {6,-1,0},
   {3,-1,0},
   {3,1,0},
   {6,2,0},
   {6,3,0}};

static struct patval pat35[]={
   {2,1,1},
   {0,0,2},
   {2,-1,2},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {0,-1,0},
   {0,-2,0},
   {1,-2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-2,0},
   {1,-1,0},
   {0,-3,0},
   {2,0,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat36[]={
   {4,-1,1},
   {2,0,2},
   {0,0,2},
   {-1,0,0},
   {0,-3,0},
   {-1,-1,0},
   {0,-1,0},
   {-1,-2,0},
   {-1,1,0},
   {0,-2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {-1,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-3,0},
   {4,-2,0},
   {2,-3,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat37[]={
   {0,2,1},
   {0,0,2},
   {1,-1,2},
   {0,1,0},
   {2,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat38[]={
   {0,4,1},
   {0,0,2},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0},
   {0,-1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,0,0},
   {1,-1,0},
   {-1,-1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat39[]={
   {1,4,1},
   {0,0,2},
   {0,3,0},
   {0,2,0},
   {0,1,0},
   {0,4,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat40[]={
   {0,0,1},
   {1,4,2},
   {0,3,0},
   {0,2,0},
   {0,1,0},
   {0,4,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat41[]={
   {0,0,1},
   {0,3,2},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {1,0,0},
   {-1,2,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat42[]={
   {1,-2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {2,-2,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params43[] = {10,2};

static struct patval pat43[]={
   {3,-1,1},
   {0,0,2},
   {0,-1,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-2,0},
   {1,0,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {3,-3,0},
   {3,-2,0},
   {2,-3,0},
   {3,0,0}};

static int assist_params44[] = {10,1,0,0};

static struct patval pat44[]={
   {2,-1,1},
   {0,0,2},
   {-1,-3,0},
   {-1,0,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {-1,-1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {2,-3,0},
   {2,-2,0},
   {1,-3,0},
   {2,0,0}};

static int assist_params45[] = {10,1,0,0};

static struct patval pat45[]={
   {0,0,1},
   {0,3,2},
   {1,4,2},
   {0,2,0},
   {0,1,0},
   {0,4,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params46[] = {5,1,0,0};

static struct patval pat46[]={
   {1,6,1},
   {0,0,2},
   {1,-1,2},
   {-1,2,0},
   {-1,1,0},
   {-1,5,0},
   {-1,6,0},
   {-1,0,0},
   {-1,3,0},
   {-1,4,0},
   {0,1,0},
   {0,-1,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-1,-1,0},
   {1,4,0},
   {1,5,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0}};

static int assist_params47[] = {5,1,5,1};

static struct patval pat47[]={
   {1,4,1},
   {0,0,2},
   {-1,3,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-1,0,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat48[]={
   {2,0,1},
   {0,0,2},
   {1,0,0},
   {0,2,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat49[]={
   {0,0,1},
   {0,3,2},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params50[] = {5,1,5,1};

static struct patval pat50[]={
   {1,4,1},
   {0,0,2},
   {0,3,0},
   {0,2,0},
   {0,1,0},
   {0,4,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat51[]={
   {1,4,1},
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {1,0,2},
   {0,4,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {1,5,0},
   {0,5,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat52[]={
   {1,0,1},
   {0,0,1},
   {0,4,4},
   {-1,3,4},
   {-1,4,4},
   {3,4,4},
   {2,4,4},
   {0,3,4},
   {1,4,4},
   {-1,1,0},
   {1,1,0},
   {0,1,0},
   {1,3,0},
   {0,2,0},
   {-1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {-1,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {1,2,0}};

static int assist_params53[] = {10,3};

static struct patval pat53[]={
   {0,0,2},
   {0,2,0},
   {0,3,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params54[] = {10,3};

static struct patval pat54[]={
   {0,4,1},
   {0,0,2},
   {-1,0,4},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-1,2,0},
   {-1,1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params55[] = {15,2};

static struct patval pat55[]={
   {0,0,1},
   {1,-3,2},
   {0,1,3},
   {0,-1,0},
   {2,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,-2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params56[] = {10,1};

static struct patval pat56[]={
   {0,0,2},
   {1,-1,2},
   {0,-1,4},
   {0,3,0},
   {0,2,0},
   {1,0,0},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params57[] = {10,3};

static struct patval pat57[]={
   {0,1,2},
   {0,0,2},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {0,2,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static int assist_params58[] = {10,3};

static struct patval pat58[]={
   {0,0,2},
   {0,1,2},
   {1,2,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {-1,3,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static int assist_params59[] = {15,2};

static struct patval pat59[]={
   {0,0,1},
   {1,-3,2},
   {2,-4,2},
   {1,-4,4},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,-2,0},
   {2,-2,0},
   {2,-3,0},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params60[] = {15,2};

static struct patval pat60[]={
   {0,0,2},
   {-1,0,4},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {0,2,0},
   {0,3,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat61[]={
   {0,0,2},
   {-1,0,4},
   {-1,3,0},
   {-1,4,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat62[]={
   {0,0,1},
   {1,-2,2},
   {1,-1,2},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat63[]={
   {0,1,1},
   {2,1,1},
   {0,0,2},
   {-1,1,0},
   {-1,2,0},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {-1,-1,0},
   {-2,0,0},
   {-1,-2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {0,2,0},
   {2,2,0}};

static struct patval pat64[]={
   {0,1,1},
   {2,0,1},
   {0,0,2},
   {-2,0,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {-2,2,0},
   {-1,-1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {0,2,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat65[]={
   {3,-1,1},
   {2,0,1},
   {1,0,1},
   {1,-1,2},
   {0,0,2},
   {0,-2,0},
   {0,-1,0},
   {0,-3,0},
   {1,1,0},
   {0,1,0},
   {1,-3,0},
   {1,-2,0},
   {-2,-1,0},
   {-1,0,0},
   {-1,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {-1,-1,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {-2,0,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat66[]={
   {1,2,1},
   {0,0,1},
   {1,0,2},
   {-2,2,0},
   {-2,-1,0},
   {-1,-2,0},
   {-2,0,0},
   {-1,0,0},
   {-1,1,0},
   {-2,1,0},
   {-2,3,0},
   {-1,-1,0},
   {-2,-2,0},
   {0,-1,0},
   {-1,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,3,0},
   {1,1,0},
   {0,-2,0},
   {1,3,0}};

static struct patval pat67[]={
   {1,3,1},
   {0,0,1},
   {1,0,2},
   {-2,2,0},
   {-2,-1,0},
   {-1,-2,0},
   {-2,0,0},
   {-1,0,0},
   {-1,1,0},
   {-2,1,0},
   {-2,3,0},
   {-1,-1,0},
   {-2,-2,0},
   {0,-1,0},
   {-1,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,3,0},
   {1,1,0},
   {1,2,0},
   {0,-2,0}};

static struct patval pat68[]={
   {1,-1,1},
   {0,0,2},
   {1,-2,3},
   {0,2,4},
   {1,2,4},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {2,-2,0},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params69[] = {15,1,0,0};

static struct patval pat69[]={
   {0,0,1},
   {1,1,2},
   {1,-2,2},
   {1,0,2},
   {0,2,0},
   {0,1,0},
   {1,-1,0},
   {0,-2,0},
   {1,2,0},
   {-1,0,0},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params70[] = {15,1,0,0};

static struct patval pat70[]={
   {0,0,1},
   {1,1,2},
   {1,0,2},
   {1,-2,3},
   {0,2,0},
   {0,1,0},
   {1,-1,0},
   {0,-2,0},
   {1,2,0},
   {-1,0,0},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat71[]={
   {1,-1,1},
   {0,0,2},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat72[]={
   {0,0,1},
   {2,-1,2},
   {-2,0,0},
   {-1,-3,0},
   {-2,-1,0},
   {-1,-1,0},
   {0,-3,0},
   {-2,-2,0},
   {-1,-2,0},
   {-2,-3,0},
   {0,-2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {2,-3,0},
   {2,-2,0},
   {0,-1,0},
   {2,0,0}};

static int assist_params73[] = {5,1,5,1};

static struct patval pat73[]={
   {3,0,1},
   {3,1,1},
   {2,0,2},
   {0,0,2},
   {0,3,0},
   {1,0,0},
   {0,2,0},
   {0,1,0},
   {1,-1,0},
   {0,-1,0},
   {2,-1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,2,0},
   {1,3,0},
   {3,2,0},
   {3,3,0}};

static int assist_params74[] = {5,1,5,1};

static struct patval pat74[]={
   {1,-1,1},
   {0,2,2},
   {0,0,2},
   {0,1,0},
   {2,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat75[]={
   {1,2,1},
   {1,-1,2},
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {2,-1,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params76[] = {5,1,5,1};

static struct patval pat76[]={
   {0,0,1},
   {2,3,1},
   {1,1,2},
   {0,3,0},
   {0,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,2,0},
   {1,2,0}};

static struct patval pat77[]={
   {1,1,1},
   {0,2,1},
   {0,0,1},
   {1,3,2},
   {1,2,2},
   {-1,3,0},
   {0,1,0},
   {-1,2,0},
   {-1,5,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {1,0,0},
   {-1,1,0},
   {1,5,0},
   {-1,0,0},
   {1,4,0},
   {-1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat78[]={
   {1,1,1},
   {0,0,2},
   {0,2,2},
   {-1,-1,3},
   {-2,4,0},
   {-1,2,0},
   {-2,3,0},
   {-1,0,0},
   {-2,1,0},
   {-1,1,0},
   {0,1,0},
   {-1,3,0},
   {0,3,0},
   {0,4,0},
   {-1,4,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat79[]={
   {2,3,1},
   {0,0,2},
   {0,1,2},
   {1,2,0},
   {1,1,0},
   {1,0,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat80[]={
   {1,3,1},
   {0,0,2},
   {1,5,2},
   {0,6,4},
   {-1,6,4},
   {-1,0,4},
   {-1,2,0},
   {-1,4,0},
   {-1,5,0},
   {0,1,0},
   {-1,3,0},
   {0,4,0},
   {0,5,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,3,0},
   {-1,1,0},
   {1,4,0},
   {1,6,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0}};

static int assist_params81[] = {10,1};

static struct patval pat81[]={
   {3,-1,1},
   {2,-1,1},
   {0,0,2},
   {2,0,2},
   {0,-1,0},
   {-1,-1,0},
   {0,-2,0},
   {-1,-2,0},
   {0,-3,0},
   {-1,-3,0},
   {1,0,0},
   {2,-3,0},
   {2,-2,0},
   {1,-3,0},
   {1,-2,0},
   {3,-3,0},
   {3,-2,0},
   {1,-1,0}};

static struct patval pat82[]={
   {0,0,1},
   {1,0,1},
   {0,1,2},
   {-1,0,3},
   {-2,2,4},
   {-2,0,4},
   {-1,2,0},
   {0,2,0},
   {-1,1,0},
   {1,1,0},
   {1,2,0},
   {-2,1,0}};

static struct patval pat83[]={
   {2,0,1},
   {0,0,2},
   {0,-1,0},
   {1,-3,0},
   {0,-2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,-3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat84[]={
   {0,0,1},
   {1,3,2},
   {1,0,2},
   {-1,3,0},
   {-1,2,0},
   {-1,0,0},
   {0,3,0},
   {-1,1,0},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {0,2,0}};

static int assist_params85[] = {10,3};

static struct patval pat85[]={
   {0,0,1},
   {0,1,2},
   {-1,3,0},
   {-1,4,0},
   {-1,2,0},
   {-1,1,0},
   {1,2,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {-1,0,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat86[]={
   {0,2,1},
   {1,2,1},
   {0,1,2},
   {0,0,2},
   {2,1,2},
   {3,-1,0},
   {1,0,0},
   {1,1,0},
   {0,3,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {0,-1,0},
   {2,2,0},
   {2,3,0},
   {1,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat87[]={
   {1,-1,1},
   {1,0,2},
   {0,0,2},
   {0,-3,0},
   {-1,-2,0},
   {-1,-3,0},
   {-1,0,0},
   {1,-3,0},
   {1,-2,0},
   {-1,-1,0},
   {0,-2,0},
   {0,-1,0}};

static struct patval pat88[]={
   {1,-1,1},
   {0,0,1},
   {1,1,2},
   {1,0,2},
   {2,1,4},
   {3,-1,4},
   {1,-2,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {0,-1,0},
   {2,-2,0}};

static struct patval pat89[]={
   {1,-2,1},
   {0,0,1},
   {1,1,2},
   {1,0,2},
   {2,1,4},
   {3,-1,4},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {1,-1,0},
   {2,-2,0}};

static int assist_params90[] = {7,4};

static struct patval pat90[]={
   {0,0,1},
   {0,1,2},
   {-1,1,0},
   {0,-1,0},
   {-1,0,0},
   {-1,-1,0},
   {-2,0,0}};

static int assist_params91[] = {7,4};

static struct patval pat91[]={
   {2,0,1},
   {2,1,2},
   {0,0,2},
   {2,-1,0},
   {1,1,0},
   {1,0,0},
   {1,-1,0}};

static int assist_params92[] = {7,4};

static struct patval pat92[]={
   {2,0,1},
   {0,0,1},
   {2,1,2},
   {2,-1,0},
   {1,1,0},
   {1,0,0},
   {1,-1,0}};

static struct patval pat93[]={
   {1,-1,1},
   {0,2,2},
   {0,1,2},
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat94[]={
   {1,-1,1},
   {0,2,2},
   {0,1,2},
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat95[]={
   {1,2,1},
   {0,1,2},
   {0,0,2},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static int assist_params96[] = {10,1,0,0};

static struct patval pat96[]={
   {1,1,1},
   {0,0,1},
   {0,2,2},
   {1,0,0},
   {0,3,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params97[] = {5,2,0,0};

static struct patval pat97[]={
   {1,4,1},
   {1,0,2},
   {0,3,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {0,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static int assist_params98[] = {10,2,0,0};

static struct patval pat98[]={
   {0,3,1},
   {0,2,1},
   {1,1,1},
   {0,1,2},
   {0,0,2},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params99[] = {15,2};

static struct patval pat99[]={
   {1,0,1},
   {1,-1,1},
   {0,0,2},
   {1,1,2},
   {0,2,0},
   {0,1,0},
   {2,-1,0},
   {1,2,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params100[] = {5,1,5,1};

static struct patval pat100[]={
   {1,1,1},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0}};

static int assist_params101[] = {5,1,5,1};

static struct patval pat101[]={
   {1,1,1},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0}};

static struct patval pat102[]={
   {1,1,1},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0}};

static int assist_params103[] = {5,1,5,1};

static struct patval pat103[]={
   {1,1,1},
   {2,1,1},
   {0,0,2},
   {0,-2,4},
   {2,-3,4},
   {0,-1,0},
   {1,0,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {1,-2,0},
   {1,-1,0}};

static int assist_params104[] = {10,2};

static struct patval pat104[]={
   {1,2,1},
   {0,0,2},
   {0,-1,4},
   {1,0,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params105[] = {5,1,5,1};

static struct patval pat105[]={
   {1,2,1},
   {2,2,1},
   {0,0,2},
   {0,-1,4},
   {1,-1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0},
   {1,1,0}};

static int assist_params106[] = {5,1,5,1};

static struct patval pat106[]={
   {1,2,1},
   {2,2,1},
   {0,0,2},
   {0,-1,4},
   {1,-1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0},
   {1,1,0}};

static int assist_params107[] = {12,1};

static struct patval pat107[]={
   {1,1,1},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0}};

static int assist_params108[] = {12,1};

static struct patval pat108[]={
   {1,1,1},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0}};

static int assist_params109[] = {10,1,0,0};

static struct patval pat109[]={
   {1,1,1},
   {2,1,1},
   {0,0,2},
   {0,-2,4},
   {2,-3,4},
   {0,-1,0},
   {1,0,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {1,-2,0},
   {1,-1,0}};

static int assist_params110[] = {10,2};

static struct patval pat110[]={
   {1,2,1},
   {0,0,2},
   {0,-1,4},
   {1,0,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params111[] = {5,1,0,0};

static struct patval pat111[]={
   {0,0,1},
   {1,1,1},
   {2,-1,2},
   {1,0,2},
   {0,-1,0},
   {-1,0,0},
   {-1,-1,0},
   {1,-2,0},
   {1,-1,0},
   {0,-2,0},
   {-1,1,0},
   {-1,-2,0},
   {0,1,0}};

static int assist_params112[] = {5,1,0,0};

static struct patval pat112[]={
   {1,-1,1},
   {0,0,1},
   {1,0,2},
   {2,1,2},
   {1,-2,0},
   {-1,-1,0},
   {-1,-2,0},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {2,-2,0},
   {3,-2,0},
   {3,-1,0}};

static struct patval pat113[]={
   {2,2,1},
   {0,0,1},
   {1,0,1},
   {1,2,2},
   {0,2,2},
   {2,0,0},
   {2,1,0},
   {1,3,0},
   {2,3,0},
   {1,1,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params114[] = {5,1,0,0};

static struct patval pat114[]={
   {2,-1,1},
   {1,2,1},
   {1,-1,1},
   {1,0,2},
   {0,0,2},
   {0,3,0},
   {1,1,0},
   {0,2,0},
   {1,3,0},
   {1,4,0},
   {0,4,0},
   {2,0,0},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params115[] = {10,1,10,1};

static struct patval pat115[]={
   {0,0,1},
   {2,-2,2},
   {-1,0,0},
   {0,-3,0},
   {0,-2,0},
   {-1,-1,0},
   {-1,-2,0},
   {0,-1,0},
   {-1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {2,-3,0},
   {1,-3,0},
   {2,-1,0},
   {2,0,0}};

static struct patval pat116[]={
   {2,-1,1},
   {1,0,1},
   {0,0,2},
   {1,-2,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {0,1,0},
   {-1,1,0},
   {1,-1,0},
   {-1,0,0},
   {2,-2,0},
   {-1,-1,0}};

static struct patval pat117[]={
   {2,3,1},
   {0,0,1},
   {1,3,1},
   {0,2,1},
   {2,2,2},
   {1,2,2},
   {2,0,2},
   {0,-1,0},
   {0,-2,0},
   {0,3,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {0,1,0},
   {2,1,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat118[]={
   {0,0,1},
   {1,1,1},
   {2,0,1},
   {1,0,2},
   {3,-2,2},
   {1,-1,2},
   {4,1,4},
   {4,-1,4},
   {4,-2,4},
   {4,0,4},
   {2,-1,0},
   {3,1,0},
   {3,-1,0},
   {2,-2,0},
   {0,1,0},
   {3,0,0},
   {2,1,0}};

static struct patval pat119[]={
   {2,0,1},
   {0,0,1},
   {1,-1,1},
   {4,1,1},
   {1,1,2},
   {2,2,2},
   {1,0,2},
   {1,2,4},
   {0,-1,0},
   {3,-1,0},
   {2,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-1,0},
   {4,0,0},
   {2,1,0}};

static struct patval pat120[]={
   {1,-3,1},
   {1,-2,1},
   {1,-1,2},
   {0,0,2},
   {2,0,2},
   {2,-3,0},
   {2,-1,0},
   {1,0,0},
   {2,-2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static int assist_params121[] = {0,0,20,1};

static struct patval pat121[]={
   {2,-2,1},
   {2,-3,1},
   {1,-1,2},
   {0,0,2},
   {2,-4,3},
   {1,0,4},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-1,-4,0},
   {-1,-3,0},
   {-1,-2,0},
   {-2,-3,0},
   {-3,-2,0},
   {-2,-4,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-3,0,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {-3,-1,0},
   {-3,-3,0},
   {-3,-4,0},
   {-1,-1,0},
   {-1,0,0}};

static struct patval pat122[]={
   {0,3,1},
   {1,-1,1},
   {0,2,2},
   {0,1,2},
   {1,3,2},
   {0,0,2},
   {1,4,2},
   {1,2,0},
   {1,1,0},
   {2,-1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat123[]={
   {1,2,1},
   {0,1,2},
   {0,0,2},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat124[]={
   {0,1,1},
   {1,1,1},
   {0,0,2},
   {1,0,2},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0}};

static struct patval pat125[]={
   {0,0,1},
   {1,1,1},
   {0,1,2},
   {-1,1,4},
   {1,0,0},
   {0,2,0},
   {1,-1,0},
   {1,2,0},
   {1,3,0}};

static int assist_params126[] = {10,2,0,0};

static struct patval pat126[]={
   {2,-1,1},
   {1,-1,2},
   {1,1,2},
   {0,0,2},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat127[]={
   {1,-2,1},
   {2,-1,1},
   {1,-1,2},
   {0,0,2},
   {0,-1,4},
   {2,-2,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat128[]={
   {1,-1,1},
   {0,0,2},
   {0,3,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0}};

static struct patval pat129[]={
   {2,0,1},
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,1,4},
   {1,2,0},
   {1,3,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {1,4,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat130[]={
   {2,0,1},
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,1,4},
   {1,2,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {1,3,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat131[]={
   {2,1,1},
   {1,1,2},
   {0,0,2},
   {2,0,0},
   {1,0,0}};

static struct patval pat132[]={
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,2,0}};

static struct patval pat133[]={
   {1,1,1},
   {1,3,1},
   {0,2,1},
   {1,0,1},
   {0,1,2},
   {0,0,2},
   {0,-2,4},
   {0,-1,0},
   {1,2,0},
   {1,-1,0},
   {1,-2,0}};

static struct patval pat134[]={
   {1,-1,1},
   {2,-1,1},
   {1,0,2},
   {0,0,2},
   {0,2,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat135[]={
   {0,0,1},
   {1,-1,1},
   {3,0,1},
   {1,0,2},
   {2,0,0},
   {3,-1,0},
   {2,-1,0},
   {0,-1,0}};

static struct patval pat136[]={
   {0,2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {0,3,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params137[] = {0,0,5,1};

static struct patval pat137[]={
   {0,0,1},
   {1,-2,2},
   {0,2,3},
   {0,1,3},
   {1,0,0},
   {1,-1,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params138[] = {0,0,5,1};

static struct patval pat138[]={
   {0,0,1},
   {1,-2,2},
   {2,-2,2},
   {0,-1,3},
   {1,-1,0},
   {1,0,0},
   {0,2,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params139[] = {0,0,5,1};

static struct patval pat139[]={
   {0,0,1},
   {1,-1,2},
   {2,-1,2},
   {0,1,3},
   {1,0,0},
   {1,1,0},
   {0,3,0},
   {1,3,0},
   {0,2,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params140[] = {0,0,5,1};

static struct patval pat140[]={
   {0,0,1},
   {1,-2,2},
   {2,-1,2},
   {2,-2,4},
   {1,1,0},
   {1,0,0},
   {1,-1,0},
   {0,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params141[] = {0,0,5,1};

static struct patval pat141[]={
   {0,0,1},
   {1,-2,2},
   {2,-1,2},
   {2,-2,4},
   {0,2,0},
   {1,1,0},
   {0,1,0},
   {1,-1,0},
   {1,3,0},
   {1,0,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params142[] = {0,0,5,1};

static struct patval pat142[]={
   {0,0,1},
   {1,-3,2},
   {2,-3,4},
   {1,-1,0},
   {1,0,0},
   {1,-2,0},
   {0,1,0},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static int assist_params143[] = {10,1,10,1};

static struct patval pat143[]={
   {0,1,1},
   {0,0,2},
   {1,-1,2},
   {1,1,2},
   {-1,3,3},
   {-1,1,3},
   {-1,2,3},
   {-1,0,3},
   {0,-1,4},
   {1,0,0},
   {0,3,0},
   {0,2,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat144[]={
   {0,0,1},
   {1,-4,1},
   {1,-2,2},
   {2,0,2},
   {1,-3,0},
   {1,-5,0},
   {0,1,0},
   {1,-1,0},
   {1,1,0},
   {1,2,0},
   {2,-5,0},
   {2,-4,0},
   {2,-3,0},
   {1,0,0},
   {2,-1,0},
   {2,-2,0},
   {2,1,0},
   {2,2,0},
   {3,-5,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params145[] = {10,1,0,0};

static struct patval pat145[]={
   {0,0,1},
   {2,0,2},
   {1,2,2},
   {1,-2,3},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {1,-1,0},
   {0,-1,0},
   {2,-1,0},
   {2,-2,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat146[]={
   {0,3,1},
   {0,2,1},
   {0,0,1},
   {2,3,2},
   {1,5,2},
   {1,2,2},
   {0,4,0},
   {0,1,0},
   {0,5,0},
   {1,3,0},
   {1,4,0},
   {1,0,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {2,0,0},
   {2,4,0},
   {2,5,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat147[]={
   {0,1,1},
   {0,0,1},
   {1,1,2},
   {2,-1,2},
   {1,2,0},
   {1,0,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params148[] = {10,1,0,0};

static struct patval pat148[]={
   {0,0,1},
   {1,-1,2},
   {1,0,0},
   {1,1,0},
   {2,-2,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat149[]={
   {0,0,1},
   {1,-1,2},
   {2,-2,2},
   {1,1,0},
   {1,0,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat150[]={
   {0,0,1},
   {1,0,1},
   {2,0,2},
   {1,-1,2},
   {2,-2,2},
   {2,-1,4},
   {1,3,0},
   {1,4,0},
   {1,2,0},
   {1,1,0},
   {2,2,0},
   {0,1,0},
   {2,1,0},
   {0,2,0},
   {2,3,0},
   {2,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat151[]={
   {2,2,1},
   {1,2,1},
   {0,1,1},
   {2,1,2},
   {0,0,2},
   {1,1,2},
   {-1,0,0},
   {-1,-1,0},
   {0,-1,0},
   {-1,2,0},
   {1,0,0},
   {-1,1,0},
   {2,-1,0},
   {2,0,0},
   {0,2,0},
   {1,-1,0}};

static struct patval pat152[]={
   {2,-2,1},
   {1,-2,1},
   {1,-1,1},
   {1,0,2},
   {0,0,2},
   {2,-1,2},
   {0,1,0},
   {2,0,0},
   {1,1,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat153[]={
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {1,-1,2},
   {2,1,2},
   {0,-1,0},
   {0,-4,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {0,-2,0},
   {0,-3,0},
   {1,-2,0},
   {-1,0,0},
   {-1,-1,0},
   {0,-5,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,-5,0},
   {3,-5,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat154[]={
   {0,0,1},
   {1,1,1},
   {2,2,2},
   {2,1,2},
   {0,-3,4},
   {0,-1,4},
   {0,-2,4},
   {1,-3,0},
   {1,-2,0},
   {2,-3,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {1,0,0},
   {2,-2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat155[]={
   {0,0,1},
   {1,-2,1},
   {1,-1,1},
   {2,-1,2},
   {1,0,2},
   {2,-2,2},
   {0,1,3},
   {1,2,0},
   {2,2,0},
   {2,0,0},
   {2,1,0},
   {1,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params156[] = {10,2,0,0};

static struct patval pat156[]={
   {0,0,1},
   {0,2,2},
   {1,0,2},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {0,-1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params157[] = {6,1,0,0};

static struct patval pat157[]={
   {0,0,1},
   {1,0,1},
   {2,0,2},
   {1,2,2},
   {0,3,0},
   {1,1,0},
   {1,-1,0},
   {2,1,0},
   {1,3,0},
   {1,4,0},
   {2,-1,0},
   {0,1,0},
   {0,4,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params158[] = {5,1,0,0};

static struct patval pat158[]={
   {0,1,1},
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {1,-1,0},
   {2,-1,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat159[]={
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {0,1,2},
   {0,3,0},
   {1,2,0},
   {1,3,0},
   {0,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,3,0}};

static struct patval pat160[]={
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {0,1,2},
   {3,0,4},
   {2,-1,4},
   {1,3,0},
   {0,3,0},
   {0,2,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,3,0}};

static struct patval pat161[]={
   {3,0,1},
   {2,0,1},
   {1,-1,1},
   {2,1,2},
   {1,0,2},
   {0,0,2},
   {2,-1,0},
   {0,2,0},
   {1,2,0},
   {3,-1,0},
   {2,2,0},
   {1,1,0},
   {0,1,0},
   {3,1,0},
   {3,2,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat162[]={
   {0,1,1},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {0,-1,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static int assist_params163[] = {10,1,0,0};

static struct patval pat163[]={
   {1,1,1},
   {0,0,2},
   {0,-1,0},
   {-1,1,0},
   {0,1,0},
   {-1,-1,0},
   {1,0,0},
   {-1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static struct patval pat164[]={
   {0,1,1},
   {1,0,2},
   {0,0,2},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params165[] = {5,1,5,1};

static struct patval pat165[]={
   {0,0,1},
   {1,0,2},
   {0,3,0},
   {0,2,0},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat166[]={
   {0,0,1},
   {1,-2,2},
   {1,0,2},
   {0,3,0},
   {0,2,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {0,-1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat167[]={
   {1,1,1},
   {0,1,1},
   {0,0,1},
   {1,0,2},
   {2,1,2},
   {1,-1,2},
   {1,3,0},
   {1,4,0},
   {2,-1,0},
   {0,2,0},
   {1,2,0},
   {2,0,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params168[] = {5,1,5,1};

static struct patval pat168[]={
   {0,3,1},
   {0,0,1},
   {1,0,2},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params169[] = {5,1,5,1};

static struct patval pat169[]={
   {1,3,1},
   {0,0,1},
   {1,0,2},
   {1,2,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,1,0}};

static int assist_params170[] = {5,1,5,1};

static struct patval pat170[]={
   {0,2,1},
   {0,0,1},
   {1,0,2},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params171[] = {5,1,5,1};

static struct patval pat171[]={
   {0,2,1},
   {0,0,1},
   {1,0,2},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat172[]={
   {0,1,1},
   {0,2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,-1,0}};

static int assist_params173[] = {5,1,0,0};

static struct patval pat173[]={
   {0,1,1},
   {1,0,1},
   {1,1,2},
   {1,-1,2},
   {0,0,2},
   {0,3,0},
   {0,2,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat174[]={
   {0,0,1},
   {3,-1,1},
   {1,0,1},
   {1,1,2},
   {3,1,2},
   {3,2,4},
   {0,2,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,1,0},
   {3,0,0},
   {1,-1,0},
   {1,2,0},
   {2,-1,0}};

static int assist_params175[] = {10,1,0,0};

static struct patval pat175[]={
   {0,2,1},
   {1,-2,1},
   {1,1,2},
   {0,0,2},
   {1,-1,2},
   {1,0,4},
   {2,1,4},
   {2,-1,4},
   {2,-2,4},
   {2,0,4},
   {1,3,0},
   {0,1,0},
   {0,3,0},
   {1,2,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat176[]={
   {0,0,1},
   {1,4,1},
   {2,4,1},
   {2,3,1},
   {0,3,2},
   {1,1,2},
   {2,2,2},
   {1,3,2},
   {0,1,3},
   {0,2,4},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {1,2,0}};

static int assist_params177[] = {10,2,-10,-1};

static struct patval pat177[]={
   {1,1,1},
   {0,2,1},
   {0,0,2},
   {0,-1,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {-1,-1,0},
   {1,-1,0},
   {1,0,0},
   {-1,0,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat178[]={
   {0,1,1},
   {0,0,1},
   {1,-1,2},
   {1,0,2},
   {2,-1,2},
   {1,2,0},
   {0,2,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat179[]={
   {0,3,1},
   {0,2,1},
   {1,1,1},
   {0,1,2},
   {0,0,2},
   {1,2,2},
   {2,-2,4},
   {1,-1,4},
   {1,-2,4},
   {0,-1,4},
   {2,-1,4},
   {1,0,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,3,0}};

static struct patval pat180[]={
   {0,1,1},
   {0,0,1},
   {0,3,2},
   {1,0,2},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat181[]={
   {0,1,1},
   {0,0,2},
   {1,0,2},
   {-1,1,3},
   {0,2,0},
   {0,3,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat182[]={
   {0,1,1},
   {0,0,2},
   {1,0,2},
   {-1,1,3},
   {0,2,0},
   {0,3,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat183[]={
   {0,0,1},
   {0,1,2},
   {1,2,2},
   {1,-1,0},
   {0,4,0},
   {1,1,0},
   {0,3,0},
   {1,0,0},
   {1,3,0},
   {1,4,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat184[]={
   {1,0,1},
   {0,0,1},
   {2,1,1},
   {1,1,2},
   {0,1,2},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {0,2,0},
   {2,0,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat185[]={
   {0,2,1},
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat186[]={
   {0,1,1},
   {0,0,1},
   {1,1,1},
   {2,-1,2},
   {1,0,2},
   {0,-1,0},
   {-1,-1,0},
   {1,-1,0},
   {0,-2,0},
   {-1,0,0},
   {-1,-2,0},
   {2,-2,0},
   {1,-2,0}};

static struct patval pat187[]={
   {0,1,1},
   {0,0,1},
   {1,2,1},
   {2,0,2},
   {1,-2,2},
   {1,1,2},
   {1,0,0},
   {0,-1,0},
   {0,2,0},
   {1,-1,0},
   {0,-2,0},
   {2,-1,0},
   {2,-2,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat188[]={
   {1,-2,1},
   {2,0,1},
   {2,-1,1},
   {0,0,2},
   {1,-1,2},
   {1,2,2},
   {0,-2,0},
   {0,-1,0},
   {0,-3,0},
   {-1,2,0},
   {-1,0,0},
   {-1,1,0},
   {1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {1,0,0},
   {1,1,0},
   {-1,-3,0},
   {2,-2,0},
   {0,1,0},
   {0,2,0},
   {2,1,0},
   {2,2,0}};

static int assist_params189[] = {10,1,10,1};

static struct patval pat189[]={
   {1,-2,1},
   {1,-1,2},
   {0,0,2},
   {-1,0,0},
   {-1,-3,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,-2,0},
   {0,-3,0},
   {0,-2,0}};

static int assist_params190[] = {10,1,0,0};

static struct patval pat190[]={
   {0,0,1},
   {0,1,2},
   {0,2,4},
   {1,2,4},
   {2,2,4},
   {0,-2,0},
   {1,-2,0},
   {-1,0,0},
   {1,0,0},
   {1,1,0},
   {0,-1,0},
   {-1,-1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0}};

static int assist_params191[] = {10,1,0,0};

static struct patval pat191[]={
   {0,1,1},
   {0,0,1},
   {1,1,2},
   {1,0,2},
   {-3,3,0},
   {-2,-2,0},
   {-3,2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-1,0},
   {-3,1,0},
   {-3,-2,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-2,0},
   {0,-1,0},
   {-3,0,0},
   {-3,-1,0},
   {0,2,0},
   {0,3,0},
   {-1,-2,0},
   {-1,0,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat192[]={
   {0,0,1},
   {0,1,2},
   {0,-1,3},
   {0,2,4},
   {1,0,0},
   {1,-1,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat193[]={
   {0,0,1},
   {0,1,2},
   {0,2,2},
   {0,-1,3},
   {1,0,0},
   {1,-1,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat194[]={
   {0,0,1},
   {1,-1,1},
   {0,2,2},
   {0,1,2},
   {1,0,2},
   {0,-1,3},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat195[]={
   {1,2,1},
   {0,0,1},
   {1,-1,1},
   {2,1,2},
   {0,1,2},
   {0,2,2},
   {1,0,2},
   {0,-1,3},
   {2,4,4},
   {0,4,4},
   {0,3,4},
   {1,1,0},
   {2,0,0},
   {1,4,0},
   {2,-1,0},
   {2,2,0},
   {2,3,0},
   {1,3,0}};

static struct patval pat196[]={
   {1,1,1},
   {1,0,1},
   {0,0,2},
   {0,1,2},
   {-1,2,4},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,2,0}};

static struct patval pat197[]={
   {1,-1,1},
   {1,0,1},
   {0,0,2},
   {0,1,4},
   {-1,1,4},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,0,0}};

static struct patval pat198[]={
   {1,-1,1},
   {2,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,2},
   {-1,1,4},
   {2,0,0},
   {0,1,0},
   {3,0,0},
   {2,-1,0}};

static int assist_params199[] = {5,1,0,0};

static struct patval pat199[]={
   {0,0,1},
   {1,0,2},
   {0,2,4},
   {-1,-2,0},
   {-1,-1,0},
   {-2,1,0},
   {-1,1,0},
   {-2,0,0},
   {-1,0,0},
   {0,-1,0},
   {-2,-2,0},
   {-2,-1,0},
   {0,-2,0},
   {1,-2,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static struct patval pat200[]={
   {1,1,1},
   {0,1,1},
   {1,0,2},
   {0,0,2},
   {-1,0,4},
   {-1,-1,4},
   {1,3,4},
   {-2,0,4},
   {-2,2,4},
   {-2,1,4},
   {0,3,4},
   {-2,-1,4},
   {0,2,0},
   {-1,1,0},
   {-1,2,0},
   {0,-1,0},
   {1,2,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat201[]={
   {1,1,1},
   {0,1,1},
   {1,0,2},
   {0,0,2},
   {-1,-1,3},
   {-2,0,0},
   {-1,1,0},
   {-1,0,0},
   {0,-1,0},
   {-2,1,0},
   {0,2,0},
   {-2,-1,0},
   {-1,2,0},
   {1,-1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params202[] = {15,1,0,0};

static struct patval pat202[]={
   {0,0,1},
   {0,2,2},
   {-1,2,0},
   {-1,3,0},
   {0,-1,0},
   {-1,1,0},
   {0,1,0},
   {-1,0,0},
   {1,-1,0},
   {0,3,0},
   {-1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params203[] = {15,1,0,0};

static struct patval pat203[]={
   {0,0,1},
   {0,2,2},
   {0,5,2},
   {-1,2,0},
   {-1,1,0},
   {-1,5,0},
   {-1,0,0},
   {-1,3,0},
   {0,-1,0},
   {-1,4,0},
   {0,1,0},
   {-1,6,0},
   {0,3,0},
   {0,4,0},
   {1,-1,0},
   {0,6,0},
   {-1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0}};

static int assist_params204[] = {15,1};

static struct patval pat204[]={
   {2,-1,1},
   {0,0,2},
   {-1,0,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,-2,0},
   {0,1,0},
   {1,-3,0},
   {1,-2,0},
   {-1,-3,0},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat205[]={
   {0,2,1},
   {0,0,2},
   {0,4,4},
   {1,0,0},
   {-1,3,0},
   {-1,1,0},
   {0,1,0},
   {-1,0,0},
   {0,3,0},
   {-2,3,0},
   {-1,2,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat206[]={
   {3,0,1},
   {2,-2,1},
   {2,0,2},
   {0,0,2},
   {2,2,4},
   {3,-1,0},
   {1,0,0},
   {2,-1,0},
   {1,-1,0},
   {2,1,0},
   {1,-2,0},
   {3,-2,0},
   {1,1,0},
   {0,1,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat207[]={
   {0,2,1},
   {0,0,2},
   {0,4,4},
   {1,0,0},
   {-1,3,0},
   {-1,1,0},
   {0,1,0},
   {-1,0,0},
   {0,3,0},
   {-2,3,0},
   {-1,2,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params208[] = {15,1,0,0};

static struct patval pat208[]={
   {1,3,1},
   {0,2,1},
   {1,2,2},
   {0,0,2},
   {0,4,4},
   {1,1,0},
   {0,1,0},
   {-1,2,0},
   {0,3,0},
   {-2,3,0},
   {1,0,0},
   {-1,3,0},
   {-1,1,0},
   {-1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat209[]={
   {2,-1,1},
   {0,0,1},
   {2,1,2},
   {0,-1,0},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0},
   {0,1,0},
   {-1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {2,0,0},
   {1,-1,0},
   {2,2,0}};

static int assist_params210[] = {5,1,0,0};

static struct patval pat210[]={
   {0,3,1},
   {1,1,2},
   {0,0,2},
   {1,0,4},
   {2,0,4},
   {0,2,0},
   {0,1,0},
   {1,3,0},
   {1,4,0},
   {0,4,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat211[]={
   {0,1,1},
   {1,1,1},
   {0,0,2},
   {-2,2,0},
   {-2,1,0},
   {-1,1,0},
   {-2,0,0},
   {-1,-1,0},
   {0,-1,0},
   {-1,0,0},
   {-2,-1,0},
   {0,2,0},
   {1,-1,0},
   {1,0,0},
   {-1,2,0}};

static struct patval pat212[]={
   {0,1,1},
   {1,2,1},
   {0,0,2},
   {-2,2,0},
   {-2,1,0},
   {-1,1,0},
   {-2,0,0},
   {-1,-1,0},
   {-2,-1,0},
   {-1,0,0},
   {-1,2,0},
   {0,2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,-1,0}};

static struct patval pat213[]={
   {1,3,1},
   {0,3,1},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params214[] = {0,0,10,1};

static struct patval pat214[]={
   {0,0,1},
   {0,1,2},
   {-1,2,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-1,1,0}};

static struct patval pat215[]={
   {1,3,1},
   {0,3,1},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params216[] = {10,1,0,0};

static struct patval pat216[]={
   {1,0,1},
   {0,0,1},
   {2,0,2},
   {1,-1,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {0,-1,0},
   {0,1,0},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat217[]={
   {1,0,1},
   {1,-1,1},
   {1,1,2},
   {0,0,2},
   {-1,1,4},
   {0,2,0},
   {1,2,0},
   {0,1,0}};

static int assist_params218[] = {5,1,-20,-1};

static struct patval pat218[]={
   {1,1,1},
   {2,0,1},
   {2,1,1},
   {1,0,2},
   {0,0,2},
   {2,-1,2},
   {2,-2,0},
   {1,-1,0},
   {1,-2,0},
   {0,-1,0}};

static struct patval pat219[]={
   {2,4,1},
   {2,3,1},
   {1,4,1},
   {0,0,1},
   {1,1,2},
   {0,3,2},
   {1,3,2},
   {2,2,2},
   {1,0,3},
   {2,1,0},
   {2,0,0},
   {0,2,0},
   {0,1,0},
   {1,2,0}};

static struct patval pat220[]={
   {0,4,2},
   {0,0,2},
   {-1,3,0},
   {-1,2,0},
   {-1,1,0},
   {-1,4,0},
   {0,1,0},
   {-1,0,0},
   {0,3,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat221[]={
   {0,0,1},
   {1,2,2},
   {1,-2,2},
   {0,1,0},
   {0,-1,0},
   {0,2,0},
   {1,-1,0},
   {0,-2,0},
   {1,1,0},
   {1,0,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params222[] = {10,1,0,0};

static struct patval pat222[]={
   {0,0,1},
   {1,-3,2},
   {2,1,2},
   {0,1,3},
   {0,-3,4},
   {0,-1,0},
   {0,-2,0},
   {1,-2,0},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {1,-1,0},
   {2,0,0},
   {2,-1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat223[]={
   {1,4,2},
   {0,0,2},
   {2,0,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {-1,2,0},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat224[]={
   {0,0,2},
   {0,4,2},
   {0,2,0},
   {0,3,0},
   {0,1,0},
   {1,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {-1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat225[]={
   {0,0,1},
   {2,-2,2},
   {2,3,2},
   {1,-2,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {1,-1,0},
   {1,3,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat226[]={
   {0,0,1},
   {1,-1,2},
   {0,1,2},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat227[]={
   {0,0,2},
   {0,4,2},
   {0,2,0},
   {0,3,0},
   {0,1,0},
   {1,2,0},
   {1,0,0},
   {1,1,0},
   {-1,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat228[]={
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {1,2,2},
   {1,-1,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat229[]={
   {0,2,1},
   {0,0,2},
   {1,4,2},
   {-1,3,4},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {2,1,0},
   {2,0,0},
   {0,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat230[]={
   {1,1,1},
   {0,2,1},
   {0,0,2},
   {1,4,2},
   {1,2,2},
   {0,3,0},
   {0,1,0},
   {0,4,0},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat231[]={
   {0,0,1},
   {3,0,1},
   {1,-1,1},
   {2,-1,1},
   {2,0,2},
   {2,2,2},
   {1,0,2},
   {2,1,0},
   {0,2,0},
   {1,1,0},
   {1,2,0}};

static int assist_params232[] = {10,1,5,1};

static struct patval pat232[]={
   {1,-1,1},
   {1,0,1},
   {0,0,2},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {0,-1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params233[] = {10,1,0,0};

static struct patval pat233[]={
   {0,0,1},
   {1,1,1},
   {1,0,2},
   {1,-1,0},
   {0,2,0},
   {0,1,0},
   {2,-1,0},
   {1,2,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params234[] = {10,1,0,0};

static struct patval pat234[]={
   {0,1,1},
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {1,-1,0},
   {0,2,0},
   {2,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {0,-1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat235[]={
   {2,2,1},
   {2,0,1},
   {1,1,1},
   {0,0,2},
   {1,0,2},
   {2,-3,4},
   {0,-3,4},
   {1,-3,4},
   {0,-2,4},
   {1,-2,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {1,-1,0},
   {2,-2,0}};

static struct patval pat236[]={
   {2,3,1},
   {2,1,1},
   {3,2,1},
   {0,0,2},
   {2,2,2},
   {1,2,2},
   {3,3,3},
   {1,0,0},
   {0,3,0},
   {0,2,0},
   {0,1,0},
   {3,0,0},
   {3,1,0},
   {1,1,0},
   {1,3,0},
   {2,0,0}};

static struct patval pat237[]={
   {3,-2,1},
   {0,0,1},
   {1,-1,1},
   {1,0,2},
   {3,0,2},
   {3,1,4},
   {0,1,0},
   {0,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {3,-1,0},
   {1,-2,0},
   {1,1,0},
   {2,-2,0}};

static struct patval pat238[]={
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {2,0,4},
   {2,1,4},
   {3,1,4},
   {1,1,0}};

static struct patval pat239[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {2,0,3},
   {2,1,3},
   {3,1,3},
   {1,1,0}};

static int assist_params240[] = {10,3};

static struct patval pat240[]={
   {0,2,2},
   {0,0,2},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {0,-1,0},
   {-1,1,0},
   {0,3,0},
   {0,1,0},
   {-1,-1,0},
   {-1,0,0},
   {0,4,0},
   {0,5,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0}};

static int assist_params241[] = {10,4};

static struct patval pat241[]={
   {0,0,2},
   {0,1,2},
   {-1,1,3},
   {1,1,3},
   {0,-3,0},
   {0,-2,0},
   {-1,-1,0},
   {-1,-2,0},
   {-1,0,0},
   {-1,-3,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0}};

static int assist_params242[] = {15,3};

static struct patval pat242[]={
   {0,0,2},
   {0,1,2},
   {2,1,0},
   {0,2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {0,-1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static int assist_params243[] = {10,4};

static struct patval pat243[]={
   {0,1,2},
   {0,0,2},
   {-2,-1,0},
   {-2,0,0},
   {-3,0,0},
   {-3,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,-1,0},
   {-3,1,0},
   {-2,1,0},
   {-1,-1,0}};

static int assist_params244[] = {10,3};

static struct patval pat244[]={
   {0,0,2},
   {1,0,2},
   {0,-1,0},
   {1,-3,0},
   {0,-3,0},
   {1,-1,0},
   {0,-2,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0}};

static int assist_params245[] = {10,3};

static struct patval pat245[]={
   {2,0,2},
   {0,0,2},
   {2,1,4},
   {0,1,4},
   {1,1,4},
   {0,-2,0},
   {0,-1,0},
   {1,0,0},
   {1,-3,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,-2,0},
   {1,-1,0}};

static int assist_params246[] = {15,2};

static struct patval pat246[]={
   {1,0,2},
   {0,0,2},
   {-1,-1,4},
   {0,-2,0},
   {0,-3,0},
   {0,-4,0},
   {0,-1,0},
   {-1,-2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0}};

static int assist_params247[] = {15,2};

static struct patval pat247[]={
   {2,0,2},
   {0,0,2},
   {2,1,4},
   {0,1,4},
   {1,1,4},
   {0,-3,0},
   {0,-1,0},
   {1,-4,0},
   {0,-4,0},
   {0,-2,0},
   {1,-1,0},
   {1,0,0},
   {-1,-2,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,-3,0},
   {1,-2,0}};

static int assist_params248[] = {10,3};

static struct patval pat248[]={
   {1,3,2},
   {0,0,2},
   {0,3,2},
   {2,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {0,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0}};

static int assist_params249[] = {10,3};

static struct patval pat249[]={
   {3,0,2},
   {0,2,2},
   {0,0,2},
   {0,3,4},
   {0,1,4},
   {1,2,0},
   {2,0,0},
   {1,0,0},
   {1,1,0},
   {2,2,0},
   {2,3,0},
   {2,1,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,2,0}};

static int assist_params250[] = {20,2};

static struct patval pat250[]={
   {0,0,2},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0}};

static int assist_params251[] = {20,2};

static struct patval pat251[]={
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {1,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0}};

static int assist_params252[] = {15,2};

static struct patval pat252[]={
   {0,0,2},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static int assist_params253[] = {15,2};

static struct patval pat253[]={
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static int assist_params254[] = {10,3};

static struct patval pat254[]={
   {0,0,2},
   {0,2,0},
   {0,3,0},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params255[] = {10,3};

static struct patval pat255[]={
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {2,-1,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat256[]={
   {1,2,1},
   {3,2,1},
   {2,0,1},
   {1,1,1},
   {0,0,2},
   {2,1,2},
   {2,-1,2},
   {4,1,2},
   {0,-1,0},
   {2,2,0},
   {1,-1,0},
   {3,-1,0},
   {1,0,0},
   {3,1,0},
   {0,1,0},
   {4,-1,0},
   {4,0,0},
   {3,0,0}};

static int assist_params257[] = {5,1,0,0};

static struct patval pat257[]={
   {0,1,1},
   {2,1,1},
   {0,0,2},
   {-2,0,4},
   {1,-1,0},
   {-1,2,0},
   {0,-1,0},
   {-1,0,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {0,2,0},
   {2,2,0}};

static struct patval pat258[]={
   {1,1,1},
   {3,0,1},
   {1,0,1},
   {1,-1,2},
   {0,0,2},
   {1,-2,0},
   {0,-1,0},
   {0,1,0},
   {0,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {2,-2,0},
   {3,1,0}};

static int assist_params259[] = {15,2};

static struct patval pat259[]={
   {1,1,1},
   {0,0,2},
   {-3,3,0},
   {-3,4,0},
   {-3,2,0},
   {-2,1,0},
   {-3,1,0},
   {-2,0,0},
   {-2,3,0},
   {-2,4,0},
   {-2,2,0},
   {-1,1,0},
   {-3,0,0},
   {-1,3,0},
   {-1,4,0},
   {-1,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-1,2,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static int assist_params260[] = {15,2};

static struct patval pat260[]={
   {1,1,1},
   {0,0,2},
   {-3,3,0},
   {-3,4,0},
   {-3,2,0},
   {-2,1,0},
   {-3,1,0},
   {-2,0,0},
   {-2,3,0},
   {-2,4,0},
   {-2,2,0},
   {-1,1,0},
   {-3,0,0},
   {-1,3,0},
   {-1,4,0},
   {-1,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-1,2,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static int assist_params261[] = {15,2};

static struct patval pat261[]={
   {1,1,1},
   {0,0,2},
   {-3,3,0},
   {-3,4,0},
   {-3,2,0},
   {-2,1,0},
   {-3,1,0},
   {-2,0,0},
   {-2,3,0},
   {-2,4,0},
   {-2,2,0},
   {-1,1,0},
   {-3,0,0},
   {-1,3,0},
   {-1,4,0},
   {-1,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-1,2,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat262[]={
   {2,-1,1},
   {2,0,2},
   {1,-2,2},
   {0,0,2},
   {2,-2,0},
   {1,0,0},
   {1,-1,0}};

static struct patval pat263[]={
   {1,1,1},
   {0,0,2},
   {0,3,2},
   {1,2,2},
   {0,2,0},
   {0,1,0},
   {-1,2,0}};

static struct patval pat264[]={
   {1,2,1},
   {0,4,2},
   {0,0,2},
   {-1,3,0},
   {-1,2,0},
   {-1,1,0},
   {-1,4,0},
   {-1,0,0},
   {0,3,0},
   {0,1,0},
   {1,0,0},
   {1,1,0},
   {0,2,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat265[]={
   {0,0,1},
   {1,2,1},
   {0,2,2},
   {0,3,0},
   {0,-1,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {1,-1,0},
   {1,3,0},
   {1,4,0}};

static int assist_params266[] = {10,1,0,0};

static struct patval pat266[]={
   {0,2,1},
   {1,4,2},
   {0,0,2},
   {0,3,0},
   {1,0,0},
   {0,1,0},
   {0,4,0},
   {1,2,0},
   {1,3,0},
   {1,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat267[]={
   {0,1,1},
   {0,0,2},
   {1,3,2},
   {1,0,0},
   {0,3,0},
   {1,2,0},
   {0,2,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat268[]={
   {1,0,1},
   {2,0,1},
   {2,-1,2},
   {0,0,2},
   {1,-1,0},
   {1,-2,0},
   {0,-1,0}};

static struct patval pat269[]={
   {2,0,1},
   {1,0,1},
   {0,1,1},
   {0,0,2},
   {1,-1,2},
   {2,-1,2},
   {-1,1,0},
   {-1,0,0},
   {-2,0,0},
   {-1,-1,0},
   {0,-1,0}};

static struct patval pat270[]={
   {2,-2,1},
   {2,0,1},
   {1,-2,2},
   {0,0,2},
   {1,-1,0},
   {1,-4,0},
   {1,-3,0},
   {0,-2,0},
   {0,-1,0},
   {1,0,0},
   {0,-4,0},
   {2,-3,0},
   {0,-3,0},
   {2,-1,0},
   {2,-4,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static int assist_params271[] = {10,1};

static struct patval pat271[]={
   {1,1,1},
   {1,2,1},
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {-1,2,3},
   {-1,3,3},
   {1,-1,0},
   {1,0,0},
   {0,3,0},
   {0,-1,0},
   {0,4,0},
   {1,3,0},
   {2,1,0},
   {2,2,0}};

static int assist_params272[] = {10,1};

static struct patval pat272[]={
   {2,-1,1},
   {1,-3,1},
   {2,-2,1},
   {1,-2,2},
   {1,-1,2},
   {0,0,2},
   {1,1,0},
   {2,-3,0},
   {1,-4,0},
   {1,0,0},
   {2,-4,0},
   {2,0,0},
   {3,-2,0},
   {3,-1,0}};

static struct patval pat273[]={
   {1,2,1},
   {0,2,2},
   {0,0,2},
   {2,1,4},
   {-1,0,4},
   {-1,1,4},
   {-1,2,4},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat274[]={
   {2,1,1},
   {0,0,2},
   {1,1,2},
   {1,-1,2},
   {0,-1,4},
   {0,1,4},
   {3,0,4},
   {2,0,0},
   {2,-1,0},
   {1,0,0}};

static struct patval pat275[]={
   {1,2,1},
   {0,0,2},
   {0,2,2},
   {-1,0,4},
   {-1,2,4},
   {-1,1,4},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static int assist_params276[] = {20,1};

static struct patval pat276[]={
   {0,2,1},
   {0,0,2},
   {-3,2,0},
   {-3,1,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-3,0,0},
   {-3,3,0},
   {-2,2,0},
   {-3,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-1,0},
   {-2,3,0},
   {0,1,0},
   {-1,-1,0},
   {0,3,0}};

static int assist_params277[] = {20,1};

static struct patval pat277[]={
   {0,2,1},
   {0,0,2},
   {-3,2,0},
   {-3,1,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-3,0,0},
   {-3,3,0},
   {-2,2,0},
   {-1,-1,0},
   {-1,0,0},
   {-3,-1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-1,0},
   {-2,3,0},
   {0,1,0},
   {-1,1,0},
   {0,3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static int assist_params278[] = {20,1};

static struct patval pat278[]={
   {0,2,1},
   {0,0,2},
   {-3,2,0},
   {-3,1,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-3,0,0},
   {-3,3,0},
   {-2,2,0},
   {-1,-1,0},
   {-1,0,0},
   {-3,-1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-1,0},
   {-2,3,0},
   {0,1,0},
   {-1,1,0},
   {0,3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat279[]={
   {1,0,1},
   {1,-1,1},
   {0,1,2},
   {0,0,2},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat280[]={
   {0,1,1},
   {0,0,1},
   {1,-1,2},
   {1,0,2},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params281[] = {10,0,0,0};

static struct patval pat281[]={
   {0,1,1},
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {0,2,2},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat282[]={
   {0,1,1},
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {0,2,2},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat283[]={
   {0,0,1},
   {1,-1,1},
   {0,1,2},
   {1,0,2},
   {2,-1,0},
   {1,1,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params284[] = {15,3};

static struct patval pat284[]={
   {2,-1,1},
   {2,-2,1},
   {0,0,2},
   {1,-1,2},
   {2,0,2},
   {0,-2,0},
   {0,-3,0},
   {-1,-3,0},
   {0,-4,0},
   {0,-1,0},
   {-1,0,0},
   {1,-2,0},
   {1,-4,0},
   {1,0,0},
   {-1,-1,0},
   {-1,-2,0},
   {1,-3,0}};

static struct patval pat285[]={
   {1,2,1},
   {0,0,2},
   {1,1,2},
   {-1,0,4},
   {-1,2,4},
   {-1,1,4},
   {1,0,0},
   {0,2,0},
   {0,1,0}};

static int assist_params286[] = {15,3};

static struct patval pat286[]={
   {2,2,1},
   {1,2,1},
   {2,1,1},
   {0,0,2},
   {2,0,2},
   {1,1,2},
   {-1,0,4},
   {-1,2,4},
   {-1,1,4},
   {1,-1,4},
   {0,2,0},
   {0,1,0},
   {1,0,0}};

static int assist_params287[] = {15,3};

static struct patval pat287[]={
   {0,0,1},
   {1,-2,2},
   {0,1,0},
   {0,-1,0},
   {1,1,0},
   {1,-1,0},
   {1,0,0},
   {0,-2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params288[] = {15,3};

static struct patval pat288[]={
   {0,0,1},
   {1,-2,2},
   {2,-2,2},
   {0,1,0},
   {1,-1,0},
   {1,0,0},
   {0,-2,0},
   {0,-1,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params289[] = {15,3};

static struct patval pat289[]={
   {0,0,1},
   {1,-2,2},
   {0,1,0},
   {0,-1,0},
   {1,1,0},
   {1,-1,0},
   {1,0,0},
   {0,-2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params290[] = {10,1,0,0};

static struct patval pat290[]={
   {0,1,1},
   {0,0,1},
   {1,3,2},
   {1,1,2},
   {2,2,2},
   {1,2,0},
   {0,3,0},
   {0,2,0}};

static struct patval pat291[]={
   {0,1,1},
   {0,0,1},
   {2,2,1},
   {1,0,2},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {0,2,0},
   {1,1,0}};

static struct patval pat292[]={
   {0,1,1},
   {1,2,1},
   {0,0,1},
   {2,2,1},
   {1,0,2},
   {0,2,2},
   {2,1,0},
   {2,0,0},
   {1,1,0}};

static struct patval pat293[]={
   {0,1,1},
   {0,0,1},
   {2,2,1},
   {1,0,2},
   {0,2,2},
   {2,0,0},
   {2,1,0},
   {1,2,0},
   {1,1,0}};

static struct patval pat294[]={
   {0,3,1},
   {0,0,2},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0}};

static struct patval pat295[]={
   {1,1,1},
   {0,0,2},
   {0,2,4},
   {0,1,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat296[]={
   {1,1,1},
   {0,0,2},
   {0,2,2},
   {0,1,0},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0}};

static int assist_params297[] = {0,0,10,1};

static struct patval pat297[]={
   {0,1,1},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {-2,1,0},
   {-2,0,0}};

static int assist_params298[] = {0,0,10,1};

static struct patval pat298[]={
   {0,1,1},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {-2,1,0},
   {-2,0,0}};

static int assist_params299[] = {0,0,10,1};

static struct patval pat299[]={
   {0,1,1},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {-2,1,0},
   {-2,0,0}};

static int assist_params300[] = {10,4};

static struct patval pat300[]={
   {0,1,1},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {-2,1,0},
   {-2,0,0}};

static struct patval pat301[]={
   {0,3,1},
   {0,2,1},
   {0,1,1},
   {0,0,2},
   {1,3,2},
   {1,1,2},
   {1,2,2},
   {0,4,0},
   {-1,2,0},
   {-1,3,0},
   {-1,1,0},
   {1,4,0}};

static struct patval pat302[]={
   {0,2,1},
   {0,1,1},
   {0,0,2},
   {1,1,2},
   {1,2,2},
   {0,3,0},
   {-1,1,0},
   {1,3,0},
   {-1,2,0}};

static int assist_params303[] = {15,3};

static struct patval pat303[]={
   {2,1,1},
   {0,2,2},
   {0,0,2},
   {0,3,0},
   {1,-1,0},
   {0,1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,-1,0},
   {2,0,0},
   {2,-1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat304[]={
   {1,-1,1},
   {2,0,1},
   {1,0,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {0,1,0},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat305[]={
   {0,0,1},
   {0,1,1},
   {2,2,1},
   {1,2,1},
   {1,1,2},
   {1,0,2},
   {1,-1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-2,0},
   {0,-1,0}};

static struct patval pat306[]={
   {0,0,1},
   {1,-1,1},
   {0,1,2},
   {1,0,2},
   {0,-1,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,2,0}};

static struct patval pat307[]={
   {2,-1,1},
   {1,-2,2},
   {0,0,2},
   {0,-1,0},
   {2,-2,0},
   {1,-1,0},
   {2,-3,0},
   {3,-2,0},
   {3,-1,0}};

static struct patval pat308[]={
   {2,-1,1},
   {1,-2,2},
   {0,0,2},
   {0,-1,0},
   {2,-2,0},
   {1,-1,0},
   {2,-3,0},
   {3,-2,0},
   {3,-1,0}};

static int assist_params309[] = {10,1,0,0};

static struct patval pat309[]={
   {2,1,1},
   {3,1,1},
   {0,0,2},
   {1,-1,0},
   {1,-2,0},
   {1,1,0},
   {0,-1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {2,-2,0}};

static int assist_params310[] = {10,1,0,0};

static struct patval pat310[]={
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {1,2,4},
   {0,2,0},
   {-1,0,0},
   {-1,2,0},
   {-1,1,0},
   {0,1,0}};

static int assist_params311[] = {10,1,0,0};

static struct patval pat311[]={
   {1,1,1},
   {1,2,1},
   {0,0,2},
   {1,0,2},
   {0,2,0},
   {-1,0,0},
   {-1,2,0},
   {-1,1,0},
   {0,1,0}};

static struct patval pat312[]={
   {1,0,1},
   {0,0,2},
   {2,0,2},
   {1,-2,4},
   {0,-2,0},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {1,-1,0}};

static int assist_params313[] = {5,1,0,0};

static struct patval pat313[]={
   {0,2,1},
   {1,3,2},
   {0,3,2},
   {0,0,2},
   {2,2,3},
   {1,2,0},
   {1,1,0},
   {0,1,0},
   {1,0,0}};

static int assist_params314[] = {10,1};

static struct patval pat314[]={
   {2,0,1},
   {0,0,2},
   {1,-2,0},
   {0,-2,0},
   {1,0,0},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {1,-1,0}};

static struct patval pat315[]={
   {2,3,1},
   {0,0,1},
   {0,3,2},
   {1,0,0},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static int assist_params316[] = {15,2};

static struct patval pat316[]={
   {2,0,1},
   {0,0,2},
   {-1,3,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {0,2,0},
   {0,3,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params317[] = {15,2};

static struct patval pat317[]={
   {2,0,1},
   {2,2,1},
   {0,0,2},
   {-1,3,0},
   {0,1,0},
   {-1,2,0},
   {-1,1,0},
   {0,2,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {2,1,0},
   {1,0,0},
   {2,3,0}};

static struct patval pat318[]={
   {0,0,1},
   {4,1,1},
   {4,-1,1},
   {2,-1,2},
   {1,-1,4},
   {1,2,0},
   {1,1,0},
   {0,1,0},
   {0,2,0},
   {1,0,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {2,0,0},
   {4,0,0},
   {2,1,0},
   {4,2,0}};

static int assist_params319[] = {10,1,10,1};

static struct patval pat319[]={
   {1,0,1},
   {2,0,1},
   {0,0,2},
   {2,3,2},
   {0,1,0},
   {-1,3,0},
   {0,3,0},
   {-1,2,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {-1,1,0},
   {2,1,0},
   {2,2,0},
   {-1,0,0}};

static int assist_params320[] = {5,1,10,1};

static struct patval pat320[]={
   {2,-1,1},
   {1,-1,1},
   {3,-1,1},
   {1,0,2},
   {0,0,2},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params321[] = {5,1,5,1};

static struct patval pat321[]={
   {1,1,1},
   {0,0,1},
   {0,1,2},
   {0,2,2},
   {1,2,2},
   {-1,-1,0},
   {-1,2,0},
   {1,-1,0},
   {1,0,0},
   {-1,0,0},
   {-1,1,0},
   {0,-1,0}};

static int assist_params322[] = {10,1,10,1};

static struct patval pat322[]={
   {2,-2,1},
   {0,0,2},
   {1,0,2},
   {-1,-2,3},
   {0,-1,0},
   {0,-3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-2,0},
   {1,-3,0},
   {-1,-1,0}};

static int assist_params323[] = {12,2};

static struct patval pat323[]={
   {1,1,1},
   {2,-1,2},
   {0,0,2},
   {2,1,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {2,-2,0},
   {0,-2,0},
   {2,0,0},
   {1,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,1,0}};

static int assist_params324[] = {0,0,10,1};

static struct patval pat324[]={
   {1,2,1},
   {3,4,2},
   {0,0,2},
   {1,1,0},
   {2,0,0},
   {1,0,0},
   {0,1,0},
   {2,1,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {2,2,0}};

static int assist_params325[] = {5,1,5,1};

static struct patval pat325[]={
   {2,-1,1},
   {0,0,2},
   {2,-4,2},
   {1,0,2},
   {2,0,2},
   {0,-3,0},
   {0,-1,0},
   {1,-1,0},
   {0,-2,0},
   {1,-4,0},
   {1,-3,0},
   {2,-3,0},
   {2,-2,0},
   {0,-4,0},
   {1,-2,0}};

static int assist_params326[] = {5,1,5,1};

static struct patval pat326[]={
   {0,1,1},
   {1,0,1},
   {0,3,1},
   {2,0,1},
   {1,1,2},
   {0,0,2},
   {0,2,2},
   {1,3,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params327[] = {5,1,5,1};

static struct patval pat327[]={
   {0,0,2},
   {3,4,2},
   {1,4,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {0,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,2,0},
   {3,3,0},
   {1,3,0}};

static int assist_params328[] = {5,1,5,1};

static struct patval pat328[]={
   {2,1,1},
   {3,3,2},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,2,0},
   {0,1,0},
   {1,2,0},
   {2,2,0},
   {2,3,0},
   {3,2,0},
   {1,3,0}};

static int assist_params329[] = {10,1,0,0};

static struct patval pat329[]={
   {4,0,1},
   {3,1,1},
   {2,2,1},
   {0,0,2},
   {2,0,2},
   {3,0,2},
   {0,2,0},
   {0,1,0},
   {2,1,0},
   {0,3,0},
   {1,1,0},
   {1,0,0},
   {1,2,0},
   {1,3,0}};

static int assist_params330[] = {10,1,0,0};

static struct patval pat330[]={
   {0,1,1},
   {1,2,1},
   {0,0,2},
   {1,1,2},
   {2,0,2},
   {1,0,0},
   {1,-1,0},
   {0,2,0},
   {1,3,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat331[]={
   {3,1,1},
   {0,0,2},
   {0,1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {0,-2,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {2,0,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat332[]={
   {1,-1,1},
   {2,-2,1},
   {1,0,2},
   {0,0,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat333[]={
   {1,2,1},
   {0,0,1},
   {0,1,1},
   {1,0,2},
   {1,1,2},
   {0,-2,0},
   {1,-1,0},
   {0,-1,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static int assist_params334[] = {5,1,5,1};

static struct patval pat334[]={
   {3,-2,1},
   {0,0,1},
   {2,0,2},
   {2,-2,2},
   {5,0,2},
   {2,-1,0},
   {1,0,0},
   {0,-1,0},
   {1,-1,0},
   {3,0,0},
   {4,-1,0},
   {4,0,0},
   {5,-1,0},
   {3,-1,0}};

static int assist_params335[] = {10,1,0,0};

static struct patval pat335[]={
   {2,2,1},
   {2,1,1},
   {0,0,2},
   {1,1,2},
   {1,0,4},
   {-1,2,0},
   {-1,3,0},
   {0,2,0},
   {0,1,0},
   {-1,1,0},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {0,4,0}};

static struct patval pat336[]={
   {1,-1,1},
   {1,-2,2},
   {0,0,2},
   {-1,-2,3},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat337[]={
   {1,-1,1},
   {0,0,2},
   {1,-2,2},
   {0,-1,0},
   {0,-2,0},
   {-1,-2,0}};

static struct patval pat338[]={
   {1,-1,1},
   {1,-3,2},
   {0,0,2},
   {1,-2,2},
   {0,-1,0},
   {0,-2,0},
   {0,-3,0}};

static struct patval pat339[]={
   {0,1,1},
   {0,2,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat340[]={
   {2,0,1},
   {1,0,1},
   {0,0,1},
   {0,1,2},
   {2,1,2},
   {-1,1,0},
   {1,1,0},
   {-1,0,0},
   {-2,1,0},
   {-1,2,0}};

static struct patval pat341[]={
   {2,0,1},
   {0,0,2},
   {1,0,2},
   {4,0,2},
   {4,2,4},
   {4,1,4},
   {1,1,0},
   {3,1,0},
   {3,2,0},
   {2,1,0},
   {0,1,0},
   {3,0,0},
   {2,2,0}};

static int assist_params342[] = {0,0,10,1};

static struct patval pat342[]={
   {0,0,1},
   {0,2,1},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {0,3,0},
   {-1,0,0},
   {0,4,0},
   {0,5,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0}};

static int assist_params343[] = {5,1,5,1};

static struct patval pat343[]={
   {2,0,1},
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {-1,2,3},
   {0,3,0},
   {-1,0,0},
   {0,2,0},
   {1,2,0},
   {0,1,0},
   {1,3,0},
   {-1,1,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat344[]={
   {0,2,1},
   {1,3,2},
   {0,0,2},
   {1,4,2},
   {0,1,0},
   {0,3,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,-1,0},
   {2,-1,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat345[]={
   {1,1,1},
   {1,3,1},
   {0,4,2},
   {0,0,2},
   {-1,0,0},
   {-1,1,0},
   {-2,1,0},
   {-2,3,0},
   {-2,0,0},
   {-2,4,0},
   {-2,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-1,2,0},
   {-1,3,0},
   {1,2,0},
   {-1,4,0}};

static struct patval pat346[]={
   {0,0,1},
   {0,4,1},
   {1,1,2},
   {1,3,2},
   {-2,0,0},
   {-1,0,0},
   {-1,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-1,2,0},
   {-1,3,0},
   {1,2,0},
   {-1,4,0}};

static struct patval pat347[]={
   {4,0,1},
   {5,-2,2},
   {0,0,2},
   {0,-2,0},
   {1,-1,0},
   {1,0,0},
   {2,-2,0},
   {0,-1,0},
   {1,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {4,-2,0},
   {4,-1,0},
   {2,-1,0},
   {2,0,0},
   {5,-1,0}};

static int assist_params348[] = {10,1,0,0};

static struct patval pat348[]={
   {1,1,1},
   {0,2,1},
   {0,0,2},
   {0,1,2},
   {-2,3,0},
   {-1,2,0},
   {-1,3,0},
   {-2,1,0},
   {-1,0,0},
   {-1,1,0},
   {0,3,0},
   {-2,2,0},
   {1,2,0},
   {1,3,0}};

static int assist_params349[] = {10,1,0,0};

static struct patval pat349[]={
   {2,-1,1},
   {0,0,2},
   {1,1,2},
   {0,1,0},
   {0,-2,0},
   {1,0,0},
   {0,-1,0},
   {1,-2,0},
   {2,-2,0},
   {1,-1,0},
   {2,0,0}};

static int assist_params350[] = {5,1,5,1};

static struct patval pat350[]={
   {0,0,1},
   {3,-2,1},
   {2,-3,1},
   {2,-1,2},
   {2,-2,2},
   {3,-1,2},
   {-1,0,0},
   {0,-3,0},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0},
   {2,-4,0},
   {0,-2,0},
   {-1,-1,0},
   {-1,-2,0},
   {1,-4,0},
   {3,-3,0},
   {-1,-3,0},
   {1,-3,0}};

static int assist_params351[] = {10,1,0,0};

static struct patval pat351[]={
   {1,2,1},
   {0,1,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {0,-1,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0},
   {3,1,0}};

static int assist_params352[] = {10,1,0,0};

static struct patval pat352[]={
   {3,2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {2,-1,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {2,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static int assist_params353[] = {10,2};

static struct patval pat353[]={
   {2,-1,1},
   {1,0,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,1,0}};

static int assist_params354[] = {10,1,10,1};

static struct patval pat354[]={
   {1,1,1},
   {2,1,1},
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {1,2,2},
   {1,0,0},
   {2,2,0},
   {2,3,0},
   {2,0,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static int assist_params355[] = {20,1};

static struct patval pat355[]={
   {2,1,1},
   {0,0,2},
   {0,-1,4},
   {0,1,4},
   {1,1,0},
   {1,0,0},
   {2,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params356[] = {5,3};

static struct patval pat356[]={
   {2,1,1},
   {0,0,2},
   {2,0,2},
   {0,3,4},
   {0,2,4},
   {1,3,4},
   {0,1,4},
   {1,2,0},
   {1,0,0},
   {1,1,0}};

static int assist_params357[] = {5,3};

static struct patval pat357[]={
   {2,1,1},
   {0,0,2},
   {2,0,2},
   {0,3,4},
   {0,2,4},
   {1,3,4},
   {0,1,4},
   {1,2,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat358[]={
   {2,1,1},
   {2,0,1},
   {1,0,1},
   {0,2,2},
   {1,1,2},
   {2,3,2},
   {0,0,2},
   {0,3,4},
   {0,1,0},
   {2,2,0},
   {1,3,0},
   {1,2,0}};

static int assist_params359[] = {5,4};

static struct patval pat359[]={
   {2,0,1},
   {0,2,2},
   {1,0,2},
   {0,0,2},
   {2,2,2},
   {1,1,3},
   {0,1,4},
   {2,1,0},
   {1,2,0}};

static int assist_params360[] = {9,1,0,0};

static struct patval pat360[]={
   {1,1,1},
   {1,2,1},
   {0,0,2},
   {1,0,2},
   {0,2,0},
   {-1,0,0},
   {-1,2,0},
   {-1,1,0},
   {0,1,0}};

static int assist_params361[] = {20,1,0,0};

static struct patval pat361[]={
   {2,0,1},
   {0,0,1},
   {3,1,2},
   {2,1,2},
   {1,0,0},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {2,2,0},
   {1,2,0},
   {3,2,0}};

static int assist_params362[] = {5,1,5,1};

static struct patval pat362[]={
   {3,0,1},
   {0,0,2},
   {4,-2,2},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,1,0},
   {0,-1,0},
   {1,1,0},
   {2,-1,0},
   {0,-2,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {2,-2,0},
   {3,1,0},
   {2,0,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static int assist_params363[] = {5,1,0,0};

static struct patval pat363[]={
   {1,1,1},
   {0,0,1},
   {3,-1,2},
   {1,0,2},
   {3,0,2},
   {2,-1,0},
   {2,0,0},
   {0,-1,0},
   {1,-1,0},
   {1,-2,0}};

static int assist_params364[] = {10,2};

static struct patval pat364[]={
   {0,0,1},
   {2,0,1},
   {1,-1,2},
   {1,0,2},
   {0,2,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0}};

static int assist_params365[] = {10,2};

static struct patval pat365[]={
   {0,1,1},
   {2,1,1},
   {1,1,2},
   {0,0,2},
   {2,0,2},
   {1,-1,4},
   {1,2,0},
   {0,3,0},
   {1,0,0},
   {1,3,0},
   {0,2,0},
   {2,2,0},
   {2,3,0}};

static int assist_params366[] = {10,2};

static struct patval pat366[]={
   {0,0,1},
   {2,0,1},
   {1,0,2},
   {1,-2,2},
   {2,-1,2},
   {0,-1,4},
   {1,1,0},
   {0,2,0},
   {1,-1,0},
   {1,2,0},
   {0,1,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat367[]={
   {2,0,1},
   {0,0,1},
   {1,1,1},
   {1,0,2},
   {2,1,2},
   {1,3,0},
   {0,2,0},
   {0,1,0},
   {1,2,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat368[]={
   {1,1,1},
   {0,0,2},
   {-1,2,0},
   {-1,1,0},
   {-2,1,0},
   {0,2,0},
   {0,3,0},
   {-1,0,0},
   {0,1,0},
   {1,2,0},
   {1,3,0}};

static int assist_params369[] = {10,1,0,0};

static struct patval pat369[]={
   {0,0,1},
   {1,-1,1},
   {0,1,2},
   {1,0,2},
   {2,1,2},
   {1,1,4},
   {2,-1,0},
   {1,-3,0},
   {0,-2,0},
   {2,-3,0},
   {2,-2,0},
   {1,-2,0},
   {2,0,0},
   {0,-1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static int assist_params370[] = {10,2,0,0};

static struct patval pat370[]={
   {0,0,1},
   {2,-1,2},
   {1,0,2},
   {2,0,4},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0},
   {0,-2,0},
   {-1,0,0},
   {-1,-1,0},
   {0,1,0}};

static struct patval pat371[]={
   {1,0,1},
   {0,0,2},
   {2,2,2},
   {-1,3,0},
   {0,1,0},
   {-1,2,0},
   {-1,0,0},
   {-1,1,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,1,0},
   {0,3,0},
   {2,3,0}};

static struct patval pat372[]={
   {0,0,1},
   {1,1,1},
   {2,0,1},
   {2,-1,2},
   {0,1,2},
   {1,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat373[]={
   {0,0,1},
   {1,1,1},
   {1,0,2},
   {1,-2,2},
   {0,-1,0},
   {0,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0}};

static int assist_params374[] = {10,1};

static struct patval pat374[]={
   {1,-2,1},
   {1,0,1},
   {0,0,2},
   {0,2,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {0,-1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat375[]={
   {0,0,1},
   {2,-1,2},
   {0,-1,3},
   {3,0,4},
   {1,0,0},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat376[]={
   {0,0,1},
   {2,1,2},
   {2,-2,2},
   {0,1,2},
   {1,2,4},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {1,-2,0},
   {3,-1,0},
   {3,0,0},
   {1,1,0}};

static struct patval pat377[]={
   {1,-1,1},
   {0,1,2},
   {2,1,2},
   {0,0,2},
   {3,-1,2},
   {2,0,0},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {3,0,0}};

static struct patval pat378[]={
   {0,0,1},
   {2,2,1},
   {1,-1,1},
   {2,-1,2},
   {1,0,2},
   {0,-1,3},
   {3,1,4},
   {3,-1,4},
   {3,0,4},
   {2,1,0},
   {0,1,0},
   {2,0,0},
   {0,2,0},
   {1,1,0},
   {1,2,0}};

static int assist_params379[] = {5,3};

static struct patval pat379[]={
   {0,0,1},
   {2,-2,1},
   {1,-2,2},
   {0,-2,4},
   {1,0,0},
   {0,-1,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0}};

static struct patval pat380[]={
   {0,0,1},
   {3,0,1},
   {4,1,1},
   {1,1,2},
   {3,1,2},
   {2,1,2},
   {0,-1,0},
   {1,-1,0},
   {3,-1,0},
   {1,-2,0},
   {1,0,0},
   {2,-1,0},
   {4,0,0},
   {2,0,0}};

static struct patval pat381[]={
   {1,4,1},
   {0,0,1},
   {0,2,2},
   {2,0,4},
   {3,1,4},
   {3,0,4},
   {3,3,4},
   {1,3,0},
   {1,2,0},
   {1,1,0},
   {0,3,0},
   {2,2,0},
   {2,3,0},
   {0,1,0},
   {1,0,0},
   {3,2,0},
   {2,1,0}};

static int assist_params382[] = {15,4};

static struct patval pat382[]={
   {0,0,1},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,0,0},
   {0,2,0},
   {0,1,0},
   {-2,0,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0}};

static int assist_params383[] = {15,4};

static struct patval pat383[]={
   {2,0,1},
   {0,0,2},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,1,0},
   {2,1,0},
   {1,0,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat384[]={
   {0,0,1},
   {2,5,1},
   {2,3,2},
   {1,0,3},
   {-1,5,4},
   {-1,4,4},
   {0,3,0},
   {0,2,0},
   {-1,3,0},
   {0,1,0},
   {0,4,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {-1,2,0},
   {2,4,0},
   {0,5,0}};

static struct patval pat385[]={
   {0,0,1},
   {2,4,1},
   {2,2,2},
   {1,0,3},
   {-1,4,4},
   {-1,3,4},
   {0,2,0},
   {0,1,0},
   {-1,2,0},
   {0,3,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {-1,1,0},
   {2,3,0},
   {0,4,0}};

static struct patval pat386[]={
   {2,0,1},
   {3,-3,2},
   {0,0,2},
   {3,0,3},
   {1,-3,0},
   {0,-1,0},
   {0,-2,0},
   {1,-2,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {1,0,0},
   {3,-2,0},
   {3,-1,0},
   {2,-3,0}};

static struct patval pat387[]={
   {2,2,1},
   {0,0,2},
   {4,1,2},
   {3,2,3},
   {1,2,3},
   {4,0,4},
   {1,0,0},
   {1,-1,0},
   {2,1,0},
   {0,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {1,1,0},
   {2,-1,0},
   {0,-1,0},
   {2,0,0}};

static int assist_params388[] = {10,1};

static struct patval pat388[]={
   {0,3,1},
   {1,0,1},
   {2,3,2},
   {0,0,2},
   {2,0,3},
   {0,2,0},
   {1,3,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static int assist_params389[] = {10,1};

static struct patval pat389[]={
   {0,0,1},
   {2,3,1},
   {0,3,2},
   {1,0,2},
   {2,0,4},
   {0,2,0},
   {1,3,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat390[]={
   {0,0,1},
   {2,3,1},
   {0,3,2},
   {2,0,2},
   {1,0,0},
   {0,2,0},
   {1,3,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat391[]={
   {0,0,1},
   {2,3,1},
   {0,3,2},
   {2,0,2},
   {1,0,0},
   {0,2,0},
   {1,3,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat392[]={
   {0,0,1},
   {3,1,1},
   {2,0,2},
   {1,0,0},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0},
   {3,2,0}};

static struct patval pat393[]={
   {0,0,1},
   {3,-2,2},
   {1,2,2},
   {0,-1,3},
   {0,-2,3},
   {1,-2,3},
   {1,-1,3},
   {1,0,3},
   {1,1,3},
   {2,-2,3},
   {4,2,3},
   {4,1,3},
   {2,1,0},
   {2,2,0},
   {0,1,0},
   {2,-1,0},
   {0,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {3,-1,0},
   {2,0,0}};

static struct patval pat394[]={
   {1,-2,1},
   {3,-2,2},
   {0,0,2},
   {0,-2,3},
   {1,-3,3},
   {0,-3,3},
   {3,-3,4},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat395[]={
   {1,3,1},
   {0,3,1},
   {1,0,1},
   {0,0,2},
   {2,1,2},
   {1,2,0},
   {0,2,0},
   {0,1,0},
   {1,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat396[]={
   {0,1,1},
   {0,0,2},
   {2,2,2},
   {1,3,2},
   {1,0,0},
   {0,2,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {1,2,0},
   {2,3,0}};

static struct patval pat397[]={
   {0,1,1},
   {1,0,2},
   {0,3,2},
   {0,0,2},
   {0,2,4},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat398[]={
   {0,1,1},
   {0,2,1},
   {0,3,2},
   {1,0,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat399[]={
   {1,3,1},
   {1,2,1},
   {0,3,2},
   {0,0,2},
   {-1,0,0},
   {-1,1,0},
   {-2,4,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,2,0},
   {0,1,0},
   {0,2,0},
   {-2,0,0},
   {1,0,0},
   {1,1,0},
   {-1,3,0},
   {-1,4,0}};

static struct patval pat400[]={
   {0,3,1},
   {0,0,1},
   {1,3,2},
   {1,2,2},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-2,4,0},
   {-2,0,0},
   {-2,3,0},
   {-2,2,0},
   {0,1,0},
   {0,2,0},
   {-2,1,0},
   {1,0,0},
   {1,1,0},
   {-1,3,0},
   {-1,4,0}};

static struct patval pat401[]={
   {1,1,1},
   {1,-2,1},
   {0,0,1},
   {2,1,2},
   {2,0,2},
   {1,0,2},
   {-1,1,0},
   {0,-1,0},
   {-1,-2,0},
   {-1,2,0},
   {1,-1,0},
   {0,-2,0},
   {-1,0,0},
   {-1,-1,0},
   {2,-2,0},
   {2,-1,0},
   {0,1,0},
   {0,2,0}};

static struct patval pat402[]={
   {0,2,1},
   {1,-1,1},
   {0,1,1},
   {1,2,1},
   {2,2,2},
   {0,0,2},
   {2,1,2},
   {1,1,2},
   {-1,2,0},
   {1,0,0},
   {0,-1,0},
   {-1,3,0},
   {-1,-1,0},
   {2,-1,0},
   {2,0,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat403[]={
   {0,3,1},
   {0,1,1},
   {1,2,1},
   {1,-1,1},
   {2,1,2},
   {0,0,2},
   {2,2,2},
   {1,1,2},
   {-1,2,0},
   {-1,3,0},
   {1,0,0},
   {-1,1,0},
   {0,-1,0},
   {0,2,0},
   {2,-1,0},
   {2,0,0},
   {-1,0,0},
   {-1,-1,0}};

static struct patval pat404[]={
   {2,1,1},
   {0,0,1},
   {2,-2,1},
   {1,0,1},
   {3,1,2},
   {1,-1,2},
   {3,0,2},
   {2,0,2},
   {0,-2,0},
   {1,-2,0},
   {2,-1,0},
   {0,2,0},
   {0,1,0},
   {0,-1,0},
   {3,-2,0},
   {3,-1,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat405[]={
   {2,0,1},
   {2,-3,1},
   {0,0,1},
   {1,-1,1},
   {3,0,2},
   {1,-2,2},
   {3,-1,2},
   {2,-1,2},
   {0,-3,0},
   {1,-3,0},
   {2,-2,0},
   {0,1,0},
   {0,-1,0},
   {0,-2,0},
   {3,-3,0},
   {3,-2,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat406[]={
   {0,2,1},
   {0,1,1},
   {1,3,1},
   {0,0,2},
   {1,1,2},
   {-2,4,0},
   {-2,3,0},
   {-2,1,0},
   {-1,2,0},
   {-2,2,0},
   {-1,-1,0},
   {-2,0,0},
   {-2,-1,0},
   {-1,1,0},
   {-1,0,0},
   {-1,3,0},
   {0,3,0},
   {0,4,0},
   {1,-1,0},
   {1,0,0},
   {-1,4,0},
   {1,2,0},
   {0,-1,0},
   {1,4,0}};

static struct patval pat407[]={
   {1,0,1},
   {0,0,1},
   {1,-1,2},
   {1,1,2},
   {1,-2,2},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat408[]={
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {2,-2,2},
   {1,-1,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat409[]={
   {3,0,1},
   {3,1,1},
   {0,0,1},
   {0,1,2},
   {1,1,4},
   {2,1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat410[]={
   {1,3,1},
   {0,0,1},
   {1,1,2},
   {3,2,2},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,0,0},
   {-1,2,0},
   {-1,0,0},
   {-1,3,0},
   {-1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {1,2,0},
   {3,3,0}};

static struct patval pat411[]={
   {1,2,1},
   {0,3,1},
   {0,2,2},
   {0,0,2},
   {1,4,2},
   {0,1,0},
   {-1,2,0},
   {-1,3,0},
   {1,0,0},
   {1,1,0},
   {-1,0,0},
   {-1,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat412[]={
   {1,-1,1},
   {2,0,1},
   {3,0,2},
   {0,0,2},
   {3,-1,2},
   {2,-1,2},
   {0,-1,0},
   {2,-2,0},
   {1,-2,0},
   {-1,-1,0},
   {0,-2,0},
   {3,-2,0},
   {-1,-2,0},
   {1,0,0}};

static struct patval pat413[]={
   {1,-1,1},
   {2,0,1},
   {4,-1,2},
   {0,0,2},
   {3,0,2},
   {2,-1,2},
   {-1,-1,0},
   {0,-1,0},
   {1,-2,0},
   {2,-2,0},
   {0,-2,0},
   {3,-2,0},
   {3,-1,0},
   {-1,-2,0},
   {1,0,0}};

static struct patval pat414[]={
   {1,0,1},
   {0,3,1},
   {0,0,1},
   {0,2,2},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0}};

static struct patval pat415[]={
   {0,5,1},
   {1,2,1},
   {1,7,1},
   {0,4,1},
   {0,7,1},
   {0,6,1},
   {1,1,1},
   {0,1,2},
   {0,3,2},
   {0,2,2},
   {1,4,2},
   {0,0,2},
   {1,5,2},
   {1,6,2},
   {2,1,0},
   {1,0,0},
   {2,0,0},
   {1,3,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0}};

static struct patval pat416[]={
   {1,0,1},
   {0,2,1},
   {0,3,1},
   {0,0,1},
   {0,1,2},
   {1,2,0},
   {1,1,0}};

static struct patval pat417[]={
   {0,1,1},
   {0,0,2},
   {3,0,2},
   {0,-1,0},
   {0,-2,0},
   {-1,0,0},
   {1,-2,0},
   {-1,-1,0},
   {1,-1,0},
   {-1,-2,0},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {1,0,0},
   {3,1,0}};

static struct patval pat418[]={
   {2,0,1},
   {1,1,1},
   {0,0,2},
   {1,0,2},
   {4,0,2},
   {1,-1,0},
   {2,-2,0},
   {1,-2,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {4,-2,0},
   {4,-1,0},
   {0,-2,0},
   {4,1,0}};

static struct patval pat419[]={
   {2,1,1},
   {0,1,1},
   {2,2,1},
   {0,0,2},
   {1,1,2},
   {3,1,2},
   {3,2,2},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,2,0},
   {3,-1,0},
   {3,0,0},
   {2,-1,0},
   {2,0,0},
   {4,-1,0},
   {4,0,0}};

static struct patval pat420[]={
   {1,-1,1},
   {1,2,1},
   {0,0,2},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {2,-1,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat421[]={
   {1,-1,1},
   {1,2,1},
   {2,0,1},
   {1,0,2},
   {0,0,2},
   {1,1,0},
   {0,2,0},
   {0,-1,0},
   {0,1,0},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat422[]={
   {1,1,1},
   {1,-1,1},
   {1,0,2},
   {0,0,2},
   {1,2,3},
   {1,-2,3},
   {2,0,0},
   {2,1,0},
   {2,-1,0}};

static struct patval pat423[]={
   {1,1,1},
   {1,-1,1},
   {1,2,2},
   {1,0,2},
   {0,0,2},
   {1,-2,3},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,-1,0}};

static struct patval pat424[]={
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {1,-1,2},
   {2,0,0},
   {2,1,0},
   {2,-1,0}};

static struct patval pat425[]={
   {1,2,1},
   {0,3,1},
   {0,1,2},
   {1,3,2},
   {0,0,2},
   {1,4,2},
   {0,2,0},
   {1,1,0},
   {2,0,0},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat426[]={
   {2,0,1},
   {0,0,2},
   {3,0,2},
   {4,-1,2},
   {1,-1,0},
   {1,-2,0},
   {0,-2,0},
   {0,-1,0},
   {1,0,0},
   {3,-2,0},
   {3,-1,0},
   {2,-2,0},
   {4,-2,0},
   {2,-1,0}};

static struct patval pat427[]={
   {1,1,1},
   {2,1,1},
   {0,1,2},
   {4,0,2},
   {3,1,2},
   {0,0,2},
   {0,-1,0},
   {1,-1,0},
   {3,-1,0},
   {3,0,0},
   {1,0,0},
   {2,-1,0},
   {4,-1,0},
   {2,0,0}};

static struct patval pat428[]={
   {1,1,1},
   {0,0,1},
   {1,2,2},
   {0,2,2},
   {1,-1,2},
   {0,-1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat429[]={
   {1,1,1},
   {0,0,1},
   {0,1,1},
   {1,2,2},
   {1,-1,2},
   {1,0,2},
   {0,2,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,-1,0}};

static struct patval pat430[]={
   {0,0,1},
   {1,2,2},
   {1,-1,2},
   {1,1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat431[]={
   {1,2,1},
   {1,-1,1},
   {0,0,2},
   {1,1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat432[]={
   {1,-1,1},
   {0,2,1},
   {0,0,2},
   {1,0,0},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat433[]={
   {2,-1,1},
   {0,0,1},
   {1,0,2},
   {1,3,2},
   {1,2,0},
   {1,1,0},
   {0,2,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat434[]={
   {0,0,1},
   {1,-1,2},
   {0,1,2},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat435[]={
   {0,0,1},
   {0,3,1},
   {0,1,2},
   {-1,2,3},
   {-1,1,0},
   {0,2,0},
   {-1,0,0},
   {1,0,0},
   {1,-1,0},
   {-1,-1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat436[]={
   {1,-2,1},
   {1,1,1},
   {0,0,2},
   {1,-1,2},
   {0,-1,0},
   {1,0,0},
   {0,-2,0},
   {2,-2,0},
   {2,-3,0},
   {0,-3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat437[]={
   {0,0,1},
   {1,-1,2},
   {1,2,2},
   {0,1,4},
   {1,1,0},
   {2,-1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat438[]={
   {0,1,1},
   {0,0,1},
   {1,2,2},
   {1,-1,2},
   {1,1,0},
   {2,-1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params439[] = {5,1,0,0};

static struct patval pat439[]={
   {1,0,1},
   {0,0,2},
   {1,1,2},
   {1,-2,2},
   {0,-2,0},
   {0,-1,0},
   {-1,2,0},
   {-1,0,0},
   {0,2,0},
   {-1,1,0},
   {-1,-2,0},
   {1,-1,0},
   {-1,-1,0},
   {0,1,0}};

static int assist_params440[] = {5,1,0,0};

static struct patval pat440[]={
   {0,0,1},
   {1,-2,1},
   {1,1,1},
   {2,0,2},
   {1,0,2},
   {0,-1,0},
   {-1,1,0},
   {-1,2,0},
   {0,2,0},
   {-1,0,0},
   {1,-1,0},
   {0,-2,0},
   {-1,-1,0},
   {-1,-2,0},
   {2,-1,0},
   {0,1,0}};

static struct patval pat441[]={
   {3,0,1},
   {0,0,1},
   {1,-1,2},
   {2,0,2},
   {-1,1,0},
   {0,1,0},
   {0,2,0},
   {0,-1,0},
   {-1,0,0},
   {1,0,0},
   {-1,2,0},
   {1,2,0},
   {2,-1,0},
   {-1,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {1,1,0},
   {3,1,0},
   {3,2,0}};

static int assist_params442[] = {5,1,0,0};

static struct patval pat442[]={
   {0,0,1},
   {1,2,1},
   {2,1,2},
   {1,0,2},
   {-1,1,0},
   {-1,0,0},
   {-1,-1,0},
   {1,-1,0},
   {0,-1,0},
   {1,1,0},
   {-1,2,0},
   {0,1,0},
   {2,0,0},
   {0,2,0}};

static int assist_params443[] = {5,1,5,1};

static struct patval pat443[]={
   {0,1,1},
   {0,0,2},
   {1,-1,2},
   {1,3,2},
   {1,0,0},
   {1,2,0},
   {0,2,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static int assist_params444[] = {10,1,0,0};

static struct patval pat444[]={
   {1,3,1},
   {0,0,1},
   {0,2,2},
   {1,1,0},
   {1,2,0},
   {1,0,0},
   {0,1,0}};

static int assist_params445[] = {10,1,0,0};

static struct patval pat445[]={
   {1,0,1},
   {1,2,2},
   {1,-2,2},
   {0,0,2},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params446[] = {10,2,0,0};

static struct patval pat446[]={
   {0,2,1},
   {0,0,2},
   {0,3,2},
   {0,1,0},
   {1,1,0},
   {1,0,0},
   {-1,2,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params447[] = {10,2,0,0};

static struct patval pat447[]={
   {0,2,1},
   {0,0,2},
   {0,3,2},
   {0,1,0},
   {1,3,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat448[]={
   {1,2,1},
   {0,0,1},
   {0,1,2},
   {1,0,3},
   {1,1,0},
   {0,3,0},
   {1,3,0},
   {0,2,0}};

static struct patval pat449[]={
   {1,3,1},
   {0,0,1},
   {0,1,2},
   {1,0,3},
   {1,1,0},
   {1,2,0},
   {0,3,0},
   {0,2,0}};

static struct patval pat450[]={
   {1,3,1},
   {0,0,1},
   {0,3,2},
   {0,1,2},
   {1,0,3},
   {1,2,0},
   {1,1,0},
   {0,2,0}};

static struct patval pat451[]={
   {1,1,1},
   {0,2,1},
   {0,0,2},
   {1,2,2},
   {0,3,2},
   {0,-1,0},
   {0,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,1,0},
   {-1,-1,0},
   {1,0,0},
   {-1,0,0},
   {1,-1,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat452[]={
   {1,-1,1},
   {1,1,1},
   {0,0,2},
   {1,0,0}};

static struct patval pat453[]={
   {1,-1,1},
   {0,2,1},
   {1,2,2},
   {0,0,2},
   {1,3,2},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat454[]={
   {1,2,1},
   {0,0,1},
   {1,1,2},
   {0,3,0},
   {0,2,0},
   {0,1,0}};

static int assist_params455[] = {10,1,0,0};

static struct patval pat455[]={
   {2,1,1},
   {0,0,1},
   {1,2,1},
   {0,1,2},
   {2,0,2},
   {1,0,2},
   {1,3,0},
   {1,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params456[] = {10,1,0,0};

static struct patval pat456[]={
   {1,2,1},
   {0,0,2},
   {1,0,2},
   {1,4,2},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-2,4,0},
   {-1,4,0},
   {-2,3,0},
   {-1,3,0},
   {-2,2,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-2,0,0},
   {1,1,0},
   {-2,1,0},
   {1,3,0},
   {0,1,0}};

static int assist_params457[] = {10,1,0,0};

static struct patval pat457[]={
   {0,0,1},
   {1,0,1},
   {2,-2,2},
   {1,-2,2},
   {1,1,2},
   {0,1,0},
   {1,-1,0},
   {2,0,0},
   {1,2,0},
   {0,-1,0},
   {2,-1,0},
   {0,2,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params458[] = {5,1,5,1};

static struct patval pat458[]={
   {0,3,1},
   {0,0,1},
   {1,3,1},
   {0,1,2},
   {0,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {1,-1,0}};

static struct patval pat459[]={
   {1,1,1},
   {1,-1,1},
   {0,0,1},
   {1,0,2},
   {1,-3,2},
   {3,0,2},
   {2,1,2},
   {2,-1,2},
   {0,-2,0},
   {2,-2,0},
   {0,-1,0},
   {2,0,0},
   {1,-2,0},
   {0,-3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {2,-3,0},
   {3,1,0}};

static struct patval pat460[]={
   {0,1,1},
   {0,2,2},
   {0,0,2},
   {1,3,4},
   {1,-1,4},
   {1,2,0},
   {1,1,0},
   {1,0,0}};

static struct patval pat461[]={
   {0,1,1},
   {0,2,2},
   {0,0,2},
   {1,3,4},
   {1,-1,4},
   {1,2,0},
   {1,1,0},
   {1,0,0}};

static struct patval pat462[]={
   {0,1,1},
   {0,2,2},
   {0,0,2},
   {1,3,4},
   {1,-1,4},
   {1,2,0},
   {1,1,0},
   {1,0,0}};

static int assist_params463[] = {5,1,0,0};

static struct patval pat463[]={
   {0,1,1},
   {1,1,2},
   {0,3,2},
   {0,0,2},
   {1,-1,4},
   {0,2,0},
   {1,2,0},
   {1,3,0},
   {1,0,0}};

static struct patval pat464[]={
   {2,-1,1},
   {2,0,1},
   {1,-1,1},
   {1,2,1},
   {0,0,2},
   {1,0,2},
   {2,1,2},
   {0,2,0},
   {1,1,0},
   {0,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat465[]={
   {1,2,1},
   {0,0,1},
   {1,1,2},
   {0,3,3},
   {1,0,0},
   {0,2,0},
   {0,1,0}};

static struct patval pat466[]={
   {1,1,1},
   {1,2,2},
   {0,0,2},
   {0,3,4},
   {1,0,0},
   {0,2,0},
   {0,1,0}};

static struct patval pat467[]={
   {0,0,1},
   {0,3,1},
   {1,1,1},
   {0,2,2},
   {0,1,2},
   {1,-1,0},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat468[]={
   {1,-2,1},
   {2,0,2},
   {0,0,2},
   {1,-4,2},
   {0,-1,0},
   {1,-1,0},
   {1,-3,0},
   {0,-3,0},
   {0,-2,0},
   {1,0,0},
   {0,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,-4,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat469[]={
   {1,-2,1},
   {2,-3,1},
   {2,0,2},
   {0,0,2},
   {1,-4,2},
   {2,-2,2},
   {1,-3,0},
   {0,-3,0},
   {0,-1,0},
   {1,0,0},
   {0,-4,0},
   {0,-2,0},
   {1,-1,0},
   {2,-1,0},
   {2,-4,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat470[]={
   {0,4,1},
   {1,1,1},
   {0,0,1},
   {0,3,2},
   {0,1,2},
   {1,5,3},
   {1,-1,3},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {0,2,0},
   {1,0,0}};

static struct patval pat471[]={
   {2,-2,1},
   {0,0,1},
   {1,1,2},
   {1,-1,2},
   {2,-1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat472[]={
   {1,-1,1},
   {1,1,1},
   {2,-2,2},
   {0,0,2},
   {2,-1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat473[]={
   {0,1,1},
   {0,0,2},
   {2,3,2},
   {3,3,2},
   {1,2,0},
   {1,1,0},
   {2,-1,0},
   {1,0,0},
   {1,3,0},
   {0,2,0},
   {2,2,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {2,0,0}};

static struct patval pat474[]={
   {0,1,1},
   {1,1,1},
   {0,0,2},
   {1,0,2},
   {3,3,2},
   {2,3,2},
   {2,-1,0},
   {1,3,0},
   {2,1,0},
   {0,2,0},
   {1,2,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {2,0,0}};

static struct patval pat475[]={
   {1,2,1},
   {1,0,1},
   {1,4,1},
   {0,3,2},
   {0,0,2},
   {0,2,2},
   {0,1,4},
   {1,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static int assist_params476[] = {10,1,0,0};

static struct patval pat476[]={
   {1,0,1},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {0,2,0},
   {0,1,0}};

static struct patval pat477[]={
   {0,2,1},
   {1,3,2},
   {0,3,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat478[]={
   {1,2,1},
   {2,1,1},
   {2,2,1},
   {1,1,2},
   {0,0,2},
   {3,1,2},
   {0,1,4},
   {2,0,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {3,-1,0},
   {3,0,0},
   {2,-1,0},
   {3,2,0}};

static struct patval pat479[]={
   {1,0,1},
   {0,3,1},
   {0,0,1},
   {0,2,2},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0}};

static struct patval pat480[]={
   {1,0,1},
   {0,3,1},
   {0,0,1},
   {0,2,2},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0}};

static struct patval pat481[]={
   {1,3,1},
   {1,0,1},
   {0,0,1},
   {0,3,2},
   {0,2,2},
   {1,2,0},
   {1,1,0},
   {0,1,0}};

static struct patval pat482[]={
   {1,3,1},
   {1,0,1},
   {0,0,1},
   {0,3,2},
   {0,2,2},
   {1,2,0},
   {1,1,0},
   {0,1,0}};

static struct patval pat483[]={
   {0,1,1},
   {1,-1,1},
   {0,0,2},
   {1,1,3},
   {1,0,0}};

static struct patval pat484[]={
   {0,1,1},
   {1,-1,1},
   {0,0,2},
   {1,1,3},
   {1,0,0}};

static struct patval pat485[]={
   {0,2,1},
   {0,0,1},
   {0,1,2},
   {1,2,3},
   {1,0,3},
   {1,1,0}};

static struct patval pat486[]={
   {0,2,1},
   {0,0,1},
   {0,1,2},
   {1,2,3},
   {1,0,3},
   {1,1,0}};

static struct patval pat487[]={
   {1,-1,1},
   {1,1,1},
   {0,0,2},
   {1,0,0}};

static struct patval pat488[]={
   {1,-1,1},
   {1,1,1},
   {0,0,2},
   {1,0,0}};

static struct patval pat489[]={
   {0,1,1},
   {1,3,1},
   {2,2,1},
   {0,0,1},
   {1,1,2},
   {0,2,2},
   {2,1,2},
   {2,0,4},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {1,2,0}};

static struct patval pat490[]={
   {0,0,1},
   {0,2,2},
   {1,-1,2},
   {1,2,4},
   {1,1,4},
   {0,1,4},
   {1,0,0}};

static struct patval pat491[]={
   {0,0,1},
   {1,-2,2},
   {0,1,2},
   {1,1,4},
   {0,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {1,-3,0}};

static int assist_params492[] = {0,0,10,1};

static struct patval pat492[]={
   {0,0,1},
   {0,1,2},
   {1,-2,2},
   {-1,0,3},
   {-1,-1,3},
   {0,-2,4},
   {0,-1,0},
   {-1,1,0},
   {-1,2,0},
   {0,2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat493[]={
   {0,0,1},
   {2,-2,1},
   {1,-2,1},
   {1,0,1},
   {2,-1,2},
   {2,0,2},
   {1,1,2},
   {2,5,3},
   {2,3,3},
   {2,4,3},
   {0,3,0},
   {0,2,0},
   {2,1,0},
   {2,2,0},
   {1,-1,0},
   {1,3,0},
   {3,1,0},
   {0,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {1,2,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0}};

static struct patval pat494[]={
   {0,1,1},
   {0,0,1},
   {2,-2,2},
   {1,1,2},
   {1,-2,2},
   {1,2,0},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat495[]={
   {1,-2,1},
   {2,1,1},
   {0,1,2},
   {1,1,2},
   {0,0,2},
   {2,2,3},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {2,-2,0},
   {1,0,0}};

static struct patval pat496[]={
   {0,0,1},
   {1,-1,2},
   {0,3,2},
   {1,3,4},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {0,2,0}};

static struct patval pat497[]={
   {1,-1,1},
   {1,2,1},
   {0,0,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat498[]={
   {1,-2,1},
   {0,1,1},
   {0,2,1},
   {0,0,2},
   {1,3,3},
   {1,2,3},
   {1,0,0},
   {0,-2,0},
   {1,-1,0},
   {0,-1,0},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat499[]={
   {0,1,1},
   {1,3,1},
   {0,0,1},
   {1,1,2},
   {0,2,2},
   {1,2,0},
   {1,0,0}};

static struct patval pat500[]={
   {1,-2,1},
   {1,1,2},
   {0,0,2},
   {2,-2,2},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0}};

static struct patval pat501[]={
   {0,0,1},
   {2,-1,1},
   {1,0,2},
   {1,-1,0},
   {1,-2,0},
   {2,-2,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat502[]={
   {2,0,1},
   {1,1,1},
   {2,1,1},
   {0,0,2},
   {1,0,2},
   {2,-1,2},
   {2,-3,4},
   {1,-3,0},
   {0,-2,0},
   {1,-2,0},
   {0,-1,0},
   {1,-1,0},
   {2,-2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat503[]={
   {0,0,1},
   {1,-1,2},
   {2,-1,2},
   {1,1,2},
   {0,1,2},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat504[]={
   {3,0,1},
   {0,0,1},
   {4,-1,1},
   {2,0,2},
   {3,-1,3},
   {1,-1,0},
   {0,-2,0},
   {1,-2,0},
   {3,-2,0},
   {0,-1,0},
   {1,0,0},
   {2,-2,0},
   {4,-2,0},
   {2,-1,0}};

static struct patval pat505[]={
   {1,-3,1},
   {0,0,1},
   {1,-2,2},
   {-1,-1,3},
   {0,-1,0},
   {-1,-3,0},
   {0,-3,0},
   {-1,-2,0},
   {0,-2,0}};

static struct patval pat506[]={
   {0,3,1},
   {0,0,1},
   {1,0,1},
   {1,2,2},
   {-1,3,0},
   {0,2,0},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0},
   {1,1,0},
   {0,1,0}};

static struct patval pat507[]={
   {1,0,1},
   {3,0,1},
   {3,-1,2},
   {0,0,2},
   {2,1,4},
   {2,0,0},
   {0,-1,0},
   {1,-1,0},
   {2,-1,0}};

static struct patval pat508[]={
   {0,1,1},
   {0,0,2},
   {1,2,2},
   {0,-1,0},
   {1,1,0},
   {1,-1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0}};

static struct patval pat509[]={
   {0,0,1},
   {1,1,2},
   {1,-1,2},
   {1,0,0}};

static struct patval pat510[]={
   {0,0,1},
   {0,2,1},
   {0,1,2},
   {-1,2,4},
   {-1,1,4},
   {-1,0,4},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat511[]={
   {1,-1,1},
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat512[]={
   {0,1,1},
   {0,0,2},
   {0,2,2},
   {-1,2,3},
   {-1,1,3},
   {-1,0,3},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat513[]={
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {1,-1,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat514[]={
   {0,1,1},
   {0,0,1},
   {0,3,2},
   {1,0,2},
   {1,1,2},
   {0,2,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat515[]={
   {2,0,1},
   {0,2,1},
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat516[]={
   {2,0,1},
   {0,2,1},
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat517[]={
   {0,0,1},
   {1,-1,2},
   {0,3,2},
   {0,4,4},
   {1,4,4},
   {0,-1,4},
   {1,3,4},
   {1,1,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat518[]={
   {2,0,1},
   {1,2,1},
   {1,1,1},
   {1,-1,1},
   {0,1,2},
   {0,0,2},
   {1,0,2},
   {-1,1,4},
   {0,2,0},
   {0,4,0},
   {1,4,0},
   {-1,4,0},
   {-1,3,0},
   {1,3,0},
   {0,3,0},
   {2,-1,0},
   {-1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat519[]={
   {0,0,1},
   {1,3,1},
   {0,1,2},
   {0,3,3},
   {1,-1,3},
   {0,-1,3},
   {1,0,0},
   {1,2,0},
   {0,2,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat520[]={
   {0,1,1},
   {0,0,2},
   {1,3,2},
   {0,3,4},
   {1,-1,4},
   {0,-1,4},
   {1,0,0},
   {1,2,0},
   {0,2,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat521[]={
   {0,2,1},
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {1,3,2},
   {0,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat522[]={
   {0,0,1},
   {1,-2,2},
   {2,1,2},
   {1,1,3},
   {2,-2,0},
   {1,0,0},
   {2,0,0},
   {1,-1,0},
   {2,-1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat523[]={
   {0,0,1},
   {1,-2,2},
   {2,1,2},
   {1,1,3},
   {2,-2,0},
   {1,0,0},
   {2,0,0},
   {1,-1,0},
   {2,-1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat524[]={
   {0,0,1},
   {1,-1,2},
   {1,3,2},
   {0,2,3},
   {0,1,3},
   {1,1,0},
   {1,0,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat525[]={
   {0,1,1},
   {1,2,1},
   {0,3,2},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {0,2,0}};

static struct patval pat526[]={
   {2,-1,1},
   {1,1,1},
   {1,-2,2},
   {0,0,2},
   {2,0,2},
   {2,-2,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0}};

static struct patval pat527[]={
   {1,1,1},
   {0,0,2},
   {0,3,2},
   {-1,1,0},
   {1,0,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {0,2,0}};

static struct patval pat528[]={
   {3,0,1},
   {0,0,1},
   {2,-1,2},
   {2,1,2},
   {1,1,3},
   {2,0,0},
   {1,0,0}};

static struct patval pat529[]={
   {1,1,1},
   {0,2,2},
   {0,0,2},
   {-2,1,4},
   {0,1,0},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat530[]={
   {1,1,1},
   {0,0,2},
   {0,2,2},
   {0,1,0},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat531[]={
   {0,0,1},
   {2,-1,1},
   {1,0,2},
   {1,-2,2},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat532[]={
   {0,0,1},
   {2,-1,1},
   {1,0,2},
   {1,-2,2},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat533[]={
   {1,-1,1},
   {1,1,1},
   {2,0,2},
   {0,0,2},
   {1,0,0}};

static int assist_params534[] = {10,1,0,0};

static struct patval pat534[]={
   {0,1,1},
   {2,0,2},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,2,0}};

static struct patval pat535[]={
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {1,-1,2},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat536[]={
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {1,-1,2},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat537[]={
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {1,-1,2},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat538[]={
   {3,1,1},
   {0,0,1},
   {1,1,2},
   {2,-1,2},
   {1,-1,2},
   {2,1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat539[]={
   {3,0,1},
   {1,2,1},
   {2,1,2},
   {0,1,2},
   {0,0,2},
   {2,0,0},
   {1,1,0},
   {1,0,0}};

static struct patval pat540[]={
   {3,0,1},
   {1,0,1},
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {2,1,2},
   {1,-1,2},
   {2,0,0}};

static struct patval pat541[]={
   {1,-1,1},
   {2,-1,1},
   {1,1,1},
   {2,1,1},
   {3,0,2},
   {1,0,2},
   {0,0,2},
   {2,0,0}};

static struct patval pat542[]={
   {0,0,1},
   {1,0,1},
   {3,1,1},
   {1,1,2},
   {1,-1,2},
   {2,-1,2},
   {2,1,2},
   {3,0,4},
   {2,0,0}};

static struct patval pat543[]={
   {0,0,1},
   {1,0,1},
   {4,0,2},
   {1,1,2},
   {2,-1,2},
   {1,-1,2},
   {2,1,2},
   {3,0,0},
   {3,1,0},
   {3,-1,0},
   {2,0,0}};

static struct patval pat544[]={
   {0,0,1},
   {1,0,1},
   {1,1,2},
   {2,-1,2},
   {1,-1,2},
   {2,1,2},
   {4,0,3},
   {3,0,0},
   {3,1,0},
   {3,-1,0},
   {2,0,0}};

static struct patval pat545[]={
   {2,0,1},
   {0,2,1},
   {1,0,1},
   {0,0,2},
   {1,-1,2},
   {1,-3,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {1,-2,0},
   {1,1,0},
   {1,2,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,-3,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params546[] = {10,1,0,0};

static struct patval pat546[]={
   {0,2,1},
   {0,0,1},
   {1,3,2},
   {1,1,2},
   {1,-1,2},
   {1,2,0},
   {2,-1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat547[]={
   {1,0,1},
   {1,2,1},
   {2,1,2},
   {0,0,2},
   {1,1,0},
   {0,1,0}};

static struct patval pat548[]={
   {0,2,1},
   {0,0,1},
   {1,1,2},
   {0,1,0},
   {-1,2,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat549[]={
   {1,3,1},
   {0,0,1},
   {1,0,1},
   {3,2,2},
   {1,1,2},
   {2,1,0},
   {1,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {2,0,0},
   {3,3,0}};

static struct patval pat550[]={
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {1,1,0}};

static struct patval pat551[]={
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {1,1,0}};

static struct patval pat552[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,0}};

static struct patval pat553[]={
   {0,0,1},
   {1,0,2},
   {2,0,2},
   {0,1,2},
   {1,2,0},
   {2,1,0},
   {1,1,0}};

static struct patval pat554[]={
   {0,0,1},
   {0,1,2},
   {1,0,2},
   {-1,2,3},
   {-1,1,3},
   {1,1,0},
   {1,2,0},
   {0,2,0}};

static struct patval pat555[]={
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {1,0,2},
   {-1,1,3},
   {-1,3,3},
   {-1,2,3},
   {0,3,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat556[]={
   {0,0,1},
   {1,0,2},
   {2,0,2},
   {0,1,2},
   {1,2,0},
   {2,1,0},
   {1,1,0}};

static struct patval pat557[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,0}};

static int assist_params558[] = {10,0,0,0};

static struct patval pat558[]={
   {1,-2,1},
   {2,2,1},
   {2,0,2},
   {0,0,2},
   {0,-1,0},
   {-1,1,0},
   {0,1,0},
   {0,2,0},
   {-1,2,0},
   {0,-2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {-1,0,0},
   {2,1,0},
   {1,-1,0}};

static int assist_params559[] = {0,0,20,1};

static struct patval pat559[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,2,0},
   {2,1,0},
   {1,1,0}};

static int assist_params560[] = {10,1,0,0};

static struct patval pat560[]={
   {1,0,1},
   {1,2,2},
   {0,0,2},
   {-1,1,3},
   {1,1,0},
   {0,2,0},
   {0,1,0}};

static int assist_params561[] = {10,1,0,0};

static struct patval pat561[]={
   {1,0,1},
   {1,2,2},
   {0,0,2},
   {-1,1,3},
   {1,1,0},
   {0,2,0},
   {0,1,0}};

static struct patval pat562[]={
   {2,1,1},
   {0,0,1},
   {1,2,2},
   {2,-1,2},
   {2,2,2},
   {2,0,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat563[]={
   {2,1,1},
   {1,0,1},
   {0,0,1},
   {1,1,2},
   {1,2,2},
   {2,-1,2},
   {2,2,2},
   {1,-1,0},
   {2,0,0}};

static struct patval pat564[]={
   {2,1,1},
   {2,0,1},
   {0,0,1},
   {1,1,2},
   {1,2,2},
   {2,-1,2},
   {2,2,2},
   {1,-1,0},
   {1,0,0}};

static struct patval pat565[]={
   {0,1,1},
   {0,2,1},
   {2,1,1},
   {1,1,2},
   {0,0,2},
   {2,0,2},
   {2,2,2},
   {1,0,0},
   {1,2,0}};

static struct patval pat566[]={
   {0,0,1},
   {1,0,1},
   {1,3,1},
   {0,3,2},
   {0,2,2},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat567[]={
   {2,0,1},
   {0,2,1},
   {0,0,2},
   {2,2,2},
   {1,2,0},
   {1,0,0},
   {2,1,0},
   {0,1,0},
   {1,1,0}};

static struct patval pat568[]={
   {0,0,1},
   {1,0,1},
   {4,1,1},
   {2,-2,2},
   {1,-1,2},
   {2,0,2},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {2,-1,0},
   {2,1,0}};

static struct patval pat569[]={
   {3,1,1},
   {1,0,1},
   {0,0,1},
   {1,-1,2},
   {2,-2,2},
   {2,0,2},
   {1,1,3},
   {2,1,0},
   {2,-1,0}};

static struct patval pat570[]={
   {1,-1,1},
   {2,1,1},
   {1,0,2},
   {0,0,2},
   {2,0,0},
   {2,-1,0}};

static struct patval pat571[]={
   {1,-1,1},
   {2,1,1},
   {1,0,2},
   {0,0,2},
   {2,0,0},
   {2,-1,0}};

static int assist_params572[] = {10,5};

static struct patval pat572[]={
   {0,0,2},
   {2,2,2},
   {1,0,0},
   {0,2,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {0,1,0},
   {1,1,0}};

static int assist_params573[] = {10,4};

static struct patval pat573[]={
   {0,0,1},
   {0,2,2},
   {2,0,2},
   {1,0,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat574[]={
   {0,2,1},
   {2,0,1},
   {0,0,2},
   {1,0,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat575[]={
   {0,0,1},
   {0,2,2},
   {2,0,2},
   {1,0,0},
   {1,2,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0}};

static int assist_params576[] = {15,1,0,0};

static struct patval pat576[]={
   {0,0,1},
   {2,-2,1},
   {2,0,2},
   {0,1,3},
   {3,-2,3},
   {1,0,0},
   {0,-1,0},
   {1,-2,0},
   {2,-1,0},
   {0,-2,0},
   {1,-1,0}};

static int assist_params577[] = {10,1,0,0};

static struct patval pat577[]={
   {3,2,1},
   {0,0,1},
   {1,0,1},
   {2,0,2},
   {1,1,2},
   {3,0,2},
   {0,2,0},
   {2,1,0},
   {1,2,0},
   {2,3,0},
   {1,3,0},
   {2,2,0},
   {3,1,0},
   {0,1,0}};

static struct patval pat578[]={
   {2,-1,1},
   {0,0,1},
   {1,0,2},
   {0,-2,4},
   {1,-1,0},
   {0,-1,0}};

static int assist_params579[] = {10,2,0,0};

static struct patval pat579[]={
   {1,-2,1},
   {1,1,2},
   {3,-2,2},
   {0,0,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,1,0},
   {2,-2,0},
   {3,-1,0}};

static int assist_params580[] = {5,1,5,1};

static struct patval pat580[]={
   {1,1,1},
   {1,0,1},
   {0,0,2},
   {1,-1,2},
   {-1,1,0},
   {-1,0,0},
   {1,-2,0},
   {-1,-1,0},
   {0,-2,0},
   {-1,-2,0},
   {0,-1,0}};

static struct patval pat581[]={
   {0,0,1},
   {2,-1,1},
   {1,-2,2},
   {2,0,2},
   {1,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat582[]={
   {0,0,1},
   {3,0,1},
   {2,2,1},
   {1,0,2},
   {0,2,2},
   {0,1,2},
   {2,1,0},
   {2,0,0},
   {1,1,0},
   {1,2,0},
   {3,1,0}};

static int assist_params583[] = {7,2};

static struct patval pat583[]={
   {0,0,1},
   {2,-3,1},
   {2,-1,2},
   {0,-1,0},
   {0,-3,0},
   {1,-1,0},
   {0,-2,0},
   {1,-3,0},
   {2,-2,0},
   {1,-2,0}};

static struct patval pat584[]={
   {0,0,1},
   {2,-3,1},
   {2,-1,2},
   {0,-1,0},
   {0,-3,0},
   {1,-1,0},
   {0,-2,0},
   {1,-3,0},
   {2,-2,0},
   {1,-2,0}};

static int assist_params585[] = {10,1,0,0};

static struct patval pat585[]={
   {4,-1,1},
   {2,-2,1},
   {0,0,2},
   {3,-2,2},
   {1,0,0},
   {0,-1,0},
   {1,-1,0},
   {2,-1,0},
   {3,-1,0},
   {3,0,0},
   {4,-2,0},
   {2,0,0},
   {4,0,0}};

static struct patval pat586[]={
   {1,1,1},
   {2,0,1},
   {2,1,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat587[]={
   {1,1,1},
   {2,0,1},
   {3,1,2},
   {2,1,2},
   {0,0,2},
   {3,0,0},
   {1,0,0}};

static struct patval pat588[]={
   {1,1,1},
   {2,0,1},
   {2,1,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat589[]={
   {0,0,1},
   {3,4,1},
   {0,2,2},
   {0,3,0},
   {0,1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {2,0,0},
   {3,5,0}};

static int assist_params590[] = {1,0,0,0};

static struct patval pat590[]={
   {4,2,1},
   {0,0,1},
   {0,2,2},
   {-1,1,3},
   {2,2,0},
   {0,3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {0,1,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {2,0,0}};

static int assist_params591[] = {1,0,0,0};

static struct patval pat591[]={
   {5,1,1},
   {1,-1,1},
   {0,0,2},
   {1,1,2},
   {1,0,0},
   {2,-2,0},
   {0,1,0},
   {1,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,2,0},
   {3,-2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {3,-1,0}};

static int assist_params592[] = {10,1,0,0};

static struct patval pat592[]={
   {0,0,1},
   {4,-1,1},
   {3,-2,2},
   {1,-2,2},
   {3,0,2},
   {1,-1,0},
   {0,1,0},
   {0,-1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,1,0},
   {3,-1,0},
   {0,-2,0},
   {3,1,0},
   {2,-2,0}};

static struct patval pat593[]={
   {2,-1,1},
   {3,1,2},
   {3,0,2},
   {0,0,2},
   {1,-1,0},
   {0,1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {1,1,0}};

static struct patval pat594[]={
   {1,-1,1},
   {3,0,2},
   {0,0,2},
   {3,1,2},
   {0,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {1,1,0}};

static struct patval pat595[]={
   {1,2,1},
   {0,0,1},
   {1,-1,2},
   {0,2,2},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat596[]={
   {1,2,1},
   {0,0,1},
   {2,0,2},
   {0,2,2},
   {2,1,3},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat597[]={
   {1,2,1},
   {0,0,1},
   {0,2,2},
   {2,-1,2},
   {1,1,0},
   {1,-1,0},
   {0,1,0},
   {1,0,0},
   {2,0,0}};

static int assist_params598[] = {10,1,0,0};

static struct patval pat598[]={
   {1,-2,1},
   {3,2,1},
   {0,0,2},
   {1,-3,0},
   {0,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {0,-1,0},
   {0,-3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {2,-2,0}};

static int assist_params599[] = {10,1,0,0};

static struct patval pat599[]={
   {1,2,1},
   {1,-2,1},
   {0,0,2},
   {0,1,0},
   {0,-1,0},
   {1,-3,0},
   {0,-2,0},
   {0,2,0},
   {1,-1,0},
   {0,-3,0},
   {1,1,0},
   {1,0,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static int assist_params600[] = {10,1,0,0};

static struct patval pat600[]={
   {0,0,1},
   {1,-1,2},
   {1,2,2},
   {0,1,2},
   {1,1,0},
   {2,1,0},
   {1,0,0}};

static int assist_params601[] = {15,3};

static struct patval pat601[]={
   {0,5,2},
   {0,0,2},
   {-1,3,0},
   {-1,4,0},
   {-1,2,0},
   {-1,1,0},
   {-1,5,0},
   {0,1,0},
   {0,2,0},
   {-1,0,0},
   {0,4,0},
   {0,3,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0}};

static int assist_params602[] = {5,1,5,1};

static struct patval pat602[]={
   {1,2,1},
   {1,-2,1},
   {0,0,2},
   {0,1,0},
   {0,-1,0},
   {0,2,0},
   {1,-1,0},
   {-1,0,0},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0}};

static int assist_params603[] = {5,1,0,0};

static struct patval pat603[]={
   {0,1,1},
   {0,0,2},
   {3,0,2},
   {3,1,2},
   {1,-1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {1,1,0}};

static int assist_params604[] = {5,2};

static struct patval pat604[]={
   {2,0,1},
   {0,0,2},
   {3,-1,2},
   {1,-1,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {0,-2,0},
   {3,-2,0},
   {1,0,0}};

static int assist_params605[] = {5,1,0,0};

static struct patval pat605[]={
   {3,-1,1},
   {0,0,1},
   {2,0,2},
   {1,-1,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {0,-2,0},
   {3,-2,0},
   {1,0,0}};

static int assist_params606[] = {10,1,0,0};

static struct patval pat606[]={
   {0,0,1},
   {2,2,1},
   {2,-1,2},
   {1,1,2},
   {1,0,0},
   {2,0,0},
   {0,-1,0},
   {1,-1,0},
   {2,1,0},
   {0,1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params607[] = {10,1,10,1};

static struct patval pat607[]={
   {2,0,1},
   {0,2,1},
   {1,0,1},
   {0,0,2},
   {2,2,2},
   {1,2,0},
   {2,1,0},
   {0,1,0},
   {1,1,0}};

static int assist_params608[] = {5,1,5,1};

static struct patval pat608[]={
   {2,0,1},
   {1,2,1},
   {0,0,2},
   {3,2,2},
   {1,1,0},
   {0,2,0},
   {1,0,0},
   {0,1,0},
   {1,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {2,-1,0}};

static int assist_params609[] = {5,1,5,1};

static struct patval pat609[]={
   {2,0,1},
   {1,2,1},
   {0,0,2},
   {2,2,2},
   {1,0,0},
   {0,2,0},
   {2,-1,0},
   {0,1,0},
   {2,1,0},
   {1,-1,0},
   {1,1,0}};

static int assist_params610[] = {5,1,5,1};

static struct patval pat610[]={
   {3,2,1},
   {0,0,1},
   {1,2,2},
   {2,0,2},
   {1,1,0},
   {0,2,0},
   {1,-1,0},
   {2,1,0},
   {2,2,0},
   {3,1,0},
   {0,1,0},
   {1,0,0}};

static int assist_params611[] = {5,1,5,1};

static struct patval pat611[]={
   {0,0,1},
   {2,2,1},
   {1,2,2},
   {2,0,2},
   {0,1,0},
   {1,0,0},
   {2,-1,0},
   {1,-1,0},
   {2,1,0},
   {0,2,0},
   {1,1,0}};

static int assist_params612[] = {5,1,5,1};

static struct patval pat612[]={
   {2,-2,1},
   {1,-2,1},
   {3,-2,1},
   {2,1,1},
   {0,0,2},
   {3,0,2},
   {2,-1,2},
   {2,0,0},
   {1,0,0},
   {1,-1,0},
   {1,1,0},
   {0,-1,0}};

static int assist_params613[] = {10,1,0,0};

static struct patval pat613[]={
   {1,2,1},
   {2,0,1},
   {0,0,2},
   {3,1,2},
   {2,2,4},
   {2,1,0},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat614[]={
   {3,1,1},
   {0,0,1},
   {1,2,2},
   {2,0,2},
   {2,2,3},
   {2,1,0},
   {1,0,0},
   {0,1,0},
   {1,1,0}};

static int assist_params615[] = {10,1,0,0};

static struct patval pat615[]={
   {1,2,1},
   {2,-1,1},
   {0,0,2},
   {0,1,2},
   {1,1,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat616[]={
   {1,-1,1},
   {3,-1,2},
   {0,0,2},
   {3,0,2},
   {0,1,0},
   {1,0,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {1,1,0},
   {2,-1,0},
   {3,1,0}};

static struct patval pat617[]={
   {1,2,1},
   {1,-1,1},
   {2,-1,1},
   {0,0,2},
   {2,1,2},
   {1,0,0},
   {2,0,0},
   {0,1,0},
   {2,2,0},
   {1,1,0}};

static struct patval pat618[]={
   {1,-1,1},
   {2,1,2},
   {0,0,2},
   {0,2,0},
   {0,-1,0},
   {-1,1,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {0,1,0},
   {1,0,0},
   {2,2,0}};

static struct patval pat619[]={
   {2,-2,1},
   {0,0,1},
   {3,0,2},
   {1,-1,2},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {1,-2,0},
   {2,-1,0}};

static int assist_params620[] = {0,0,10,1};

static struct patval pat620[]={
   {0,0,1},
   {3,1,1},
   {1,2,2},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {0,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {2,-1,0},
   {3,2,0}};

static struct patval pat621[]={
   {0,1,1},
   {1,-1,2},
   {0,3,2},
   {0,0,2},
   {1,0,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat622[]={
   {0,1,1},
   {2,-1,1},
   {2,1,2},
   {0,0,2},
   {1,1,0},
   {2,0,0},
   {1,0,0},
   {1,-1,0}};

static struct patval pat623[]={
   {2,3,1},
   {0,0,1},
   {1,2,2},
   {3,1,2},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {0,1,0},
   {1,1,0},
   {2,0,0}};

static struct patval pat624[]={
   {2,2,1},
   {0,0,2},
   {3,1,2},
   {1,-1,0},
   {0,1,0},
   {1,0,0},
   {0,-1,0},
   {2,0,0},
   {2,1,0},
   {1,1,0},
   {3,0,0},
   {2,-1,0}};

static struct patval pat625[]={
   {3,1,1},
   {0,0,1},
   {1,2,2},
   {2,-1,2},
   {2,2,2},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {1,1,0},
   {0,1,0},
   {1,0,0}};

static struct patval pat626[]={
   {2,-1,1},
   {1,2,1},
   {0,0,2},
   {3,1,2},
   {1,-1,0},
   {0,1,0},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0},
   {1,1,0},
   {2,0,0}};

static struct patval pat627[]={
   {1,2,1},
   {2,-1,1},
   {0,2,2},
   {3,1,2},
   {0,0,2},
   {1,1,0},
   {1,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat628[]={
   {3,1,1},
   {0,0,1},
   {1,1,1},
   {1,0,2},
   {1,2,2},
   {2,-1,2},
   {2,2,2},
   {2,1,0},
   {2,0,0},
   {0,1,0},
   {1,-1,0}};

static struct patval pat629[]={
   {0,0,1},
   {2,1,1},
   {0,2,2},
   {2,2,2},
   {2,-1,2},
   {1,2,0},
   {0,1,0},
   {2,0,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat630[]={
   {0,0,1},
   {2,1,1},
   {2,2,2},
   {1,3,2},
   {2,-1,2},
   {0,2,4},
   {0,1,0},
   {1,0,0},
   {2,0,0},
   {1,-1,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat631[]={
   {1,1,1},
   {0,0,2},
   {0,3,2},
   {1,2,2},
   {0,2,0},
   {0,1,0},
   {-1,2,0}};

static int assist_params632[] = {0,0,10,1};

static struct patval pat632[]={
   {2,0,1},
   {0,3,1},
   {0,0,2},
   {4,3,2},
   {2,4,4},
   {1,2,0},
   {1,1,0},
   {1,0,0},
   {1,3,0},
   {0,1,0},
   {0,2,0},
   {2,3,0},
   {2,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {2,1,0}};

static struct patval pat633[]={
   {1,2,1},
   {0,0,1},
   {0,1,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat634[]={
   {1,-2,1},
   {0,0,2},
   {2,-2,2},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {0,-1,0}};

static int assist_params635[] = {5,2};

static struct patval pat635[]={
   {1,-1,1},
   {2,0,2},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {2,1,0},
   {0,1,0}};

static int assist_params636[] = {5,2};

static struct patval pat636[]={
   {1,-1,1},
   {2,0,2},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {2,1,0},
   {0,1,0}};

static struct patval pat637[]={
   {2,0,1},
   {1,1,1},
   {0,0,1},
   {1,-1,2},
   {1,0,0},
   {2,1,0},
   {0,1,0}};

static struct patval pat638[]={
   {1,3,1},
   {0,2,1},
   {0,0,1},
   {0,1,2},
   {2,1,2},
   {1,1,0},
   {2,0,0},
   {1,0,0},
   {1,2,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat639[]={
   {0,0,1},
   {2,1,1},
   {0,1,2},
   {1,3,3},
   {1,2,0},
   {1,0,0},
   {2,0,0},
   {0,2,0},
   {1,1,0}};

static struct patval pat640[]={
   {0,2,1},
   {2,2,1},
   {1,2,2},
   {0,0,2},
   {0,1,2},
   {2,0,0},
   {2,1,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat641[]={
   {1,2,1},
   {0,0,2},
   {0,3,2},
   {-1,3,0},
   {-1,2,0},
   {0,2,0},
   {-1,1,0},
   {-1,0,0},
   {1,0,0},
   {1,1,0},
   {0,1,0}};

static struct patval pat642[]={
   {3,-1,1},
   {0,0,1},
   {1,-1,2},
   {1,2,2},
   {2,2,2},
   {2,1,0},
   {2,0,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat643[]={
   {3,0,1},
   {0,0,1},
   {1,-1,2},
   {1,2,2},
   {2,2,2},
   {3,1,3},
   {2,1,0},
   {1,0,0},
   {1,1,0},
   {2,0,0}};

static struct patval pat644[]={
   {1,2,1},
   {2,2,1},
   {2,0,1},
   {3,1,2},
   {0,0,2},
   {2,1,0},
   {1,1,0},
   {1,0,0}};

static struct patval pat645[]={
   {0,1,1},
   {2,-1,1},
   {0,0,2},
   {2,1,2},
   {1,1,2},
   {0,-2,0},
   {0,-1,0},
   {1,-2,0},
   {2,-2,0},
   {1,-1,0},
   {2,0,0},
   {1,0,0},
   {3,-1,0}};

static int assist_params646[] = {5,1,5,1};

static struct patval pat646[]={
   {1,2,1},
   {1,-2,1},
   {0,0,2},
   {3,0,2},
   {3,-1,4},
   {1,-1,0},
   {0,1,0},
   {0,-1,0},
   {-1,0,0},
   {0,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0},
   {1,1,0}};

static int assist_params647[] = {15,1,0,0};

static struct patval pat647[]={
   {0,1,1},
   {2,1,1},
   {0,2,2},
   {2,2,2},
   {0,0,2},
   {2,0,4},
   {1,2,0},
   {-1,1,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat648[]={
   {2,1,1},
   {3,1,2},
   {0,0,2},
   {1,1,2},
   {2,-1,3},
   {2,3,3},
   {1,-1,4},
   {0,1,4},
   {2,2,0},
   {2,0,0},
   {3,0,0},
   {1,0,0},
   {1,2,0}};

static struct patval pat649[]={
   {1,2,1},
   {2,1,1},
   {0,0,2},
   {1,1,2},
   {3,1,2},
   {0,1,4},
   {1,-1,4},
   {2,2,0},
   {3,0,0},
   {1,0,0},
   {2,0,0}};

static struct patval pat650[]={
   {3,2,1},
   {2,1,1},
   {3,1,2},
   {1,1,2},
   {0,0,2},
   {0,1,4},
   {1,-1,4},
   {2,2,0},
   {3,0,0},
   {1,0,0},
   {1,2,0},
   {2,0,0}};

static struct patval pat651[]={
   {1,2,2},
   {0,0,2},
   {0,2,3},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat652[]={
   {0,0,2},
   {0,2,2},
   {1,2,3},
   {-1,2,3},
   {0,1,0}};

static struct patval pat653[]={
   {2,1,1},
   {1,2,2},
   {2,0,2},
   {0,0,2},
   {0,1,3},
   {1,1,0},
   {1,0,0}};

static struct patval pat654[]={
   {1,3,1},
   {2,2,1},
   {3,2,1},
   {2,1,2},
   {3,1,2},
   {0,0,2},
   {1,2,2},
   {-1,1,4},
   {0,3,0},
   {0,2,0},
   {0,1,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat655[]={
   {0,2,1},
   {2,0,1},
   {2,1,2},
   {0,0,2},
   {1,2,2},
   {2,2,4},
   {1,0,0},
   {0,1,0},
   {1,1,0}};

static struct patval pat656[]={
   {1,0,1},
   {2,0,2},
   {0,0,2},
   {1,1,0},
   {1,-1,0},
   {2,1,0},
   {0,1,0}};

static struct patval pat657[]={
   {1,2,1},
   {1,0,1},
   {0,0,2},
   {2,0,2},
   {0,2,3},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {3,1,0}};

static struct patval pat658[]={
   {1,2,1},
   {1,0,1},
   {1,-1,1},
   {1,1,2},
   {0,0,2},
   {2,0,2},
   {2,2,3},
   {0,2,3},
   {2,1,0},
   {0,1,0}};

static struct patval pat659[]={
   {0,1,1},
   {0,0,1},
   {2,1,1},
   {1,2,2},
   {1,-1,2},
   {2,-1,4},
   {2,0,0},
   {1,0,0},
   {1,1,0}};

static struct patval pat660[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {2,-2,2},
   {1,-2,2},
   {2,-1,0},
   {2,0,0},
   {1,-1,0}};

static struct patval pat661[]={
   {1,1,1},
   {0,0,1},
   {1,-1,2},
   {0,1,2},
   {1,0,0}};

static struct patval pat662[]={
   {0,1,1},
   {1,-1,1},
   {1,1,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat663[]={
   {1,1,1},
   {0,2,1},
   {2,2,1},
   {0,0,2},
   {2,0,2},
   {1,2,2},
   {1,-1,4},
   {2,1,0},
   {0,1,0},
   {1,0,0}};

static struct patval pat664[]={
   {2,1,1},
   {0,0,1},
   {2,0,2},
   {0,1,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat665[]={
   {2,-1,1},
   {0,0,1},
   {1,-2,1},
   {2,-2,1},
   {1,-1,2},
   {2,0,2},
   {0,-1,0},
   {0,-2,0},
   {1,0,0}};

static struct patval pat666[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,2},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat667[]={
   {1,0,1},
   {1,1,2},
   {2,0,2},
   {0,0,2},
   {1,-1,0},
   {2,1,0},
   {0,1,0}};

static struct patval pat668[]={
   {2,0,1},
   {1,-2,1},
   {1,0,1},
   {0,0,2},
   {1,-1,2},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat669[]={
   {2,0,1},
   {1,-2,1},
   {1,0,1},
   {0,0,2},
   {1,-1,2},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat670[]={
   {2,2,1},
   {0,2,1},
   {0,0,2},
   {0,4,2},
   {2,4,2},
   {2,0,2},
   {1,1,4},
   {1,0,4},
   {1,3,4},
   {1,4,4},
   {2,1,0},
   {0,1,0},
   {2,3,0},
   {0,3,0},
   {1,2,0}};

static struct patval pat671[]={
   {2,1,1},
   {0,0,1},
   {0,1,2},
   {2,0,0},
   {1,1,0},
   {1,0,0}};

static struct patval pat672[]={
   {0,0,1},
   {2,-1,1},
   {2,1,2},
   {1,-2,0},
   {0,-2,0},
   {1,1,0},
   {0,-1,0},
   {1,-1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat673[]={
   {2,1,1},
   {0,2,1},
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {1,2,0},
   {2,2,0},
   {0,1,0}};

static struct patval pat674[]={
   {1,0,1},
   {0,0,2},
   {1,-2,2},
   {1,-1,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat675[]={
   {1,1,1},
   {0,3,1},
   {1,2,1},
   {0,0,2},
   {1,3,2},
   {0,2,2},
   {-1,2,0},
   {-1,1,0},
   {-1,3,0},
   {-1,0,0},
   {0,1,0}};

static struct patval pat676[]={
   {0,0,1},
   {2,0,1},
   {0,1,2},
   {2,-1,2},
   {2,1,2},
   {1,1,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0}};

static struct patval pat677[]={
   {0,0,1},
   {2,1,1},
   {3,0,2},
   {1,1,2},
   {1,-2,2},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {3,-1,0},
   {1,0,0},
   {2,-2,0}};

static struct patval pat678[]={
   {4,2,1},
   {0,0,1},
   {3,0,2},
   {2,3,2},
   {4,3,3},
   {2,2,0},
   {1,1,0},
   {2,1,0},
   {3,1,0},
   {2,0,0},
   {3,3,0},
   {4,0,0},
   {4,1,0},
   {1,0,0},
   {3,2,0}};

static struct patval pat679[]={
   {0,0,1},
   {0,1,2},
   {2,1,2},
   {2,-1,2},
   {1,-1,3},
   {0,-1,3},
   {0,2,3},
   {1,1,0},
   {1,0,0},
   {2,0,0},
   {1,2,0},
   {2,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat680[]={
   {3,-2,1},
   {0,0,1},
   {1,-2,2},
   {2,0,2},
   {3,0,4},
   {0,-2,0},
   {2,-1,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {3,-1,0},
   {2,-2,0}};

static struct patval pat681[]={
   {2,0,1},
   {1,1,1},
   {0,2,1},
   {0,0,2},
   {1,0,2},
   {2,2,2},
   {-1,3,4},
   {-1,2,0},
   {2,-1,0},
   {0,1,0},
   {2,1,0},
   {0,3,0},
   {1,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat682[]={
   {0,2,1},
   {0,0,1},
   {3,0,1},
   {2,0,2},
   {2,2,2},
   {2,1,0},
   {1,1,0},
   {1,0,0},
   {1,2,0}};

static struct patval pat683[]={
   {2,-1,1},
   {3,0,1},
   {0,0,2},
   {4,-1,2},
   {2,0,2},
   {4,-2,4},
   {1,1,0},
   {1,0,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {0,1,0},
   {2,-2,0},
   {0,-2,0},
   {4,0,0}};

static struct patval pat684[]={
   {2,-1,1},
   {1,0,1},
   {0,0,1},
   {2,-3,2},
   {1,-1,2},
   {2,1,2},
   {1,-2,4},
   {0,-1,4},
   {1,-3,4},
   {0,-2,4},
   {0,-3,4},
   {3,-3,0},
   {0,1,0},
   {2,0,0},
   {1,1,0},
   {2,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat685[]={
   {0,0,1},
   {0,1,2},
   {1,-1,2},
   {-1,1,4},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static struct patval pat686[]={
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,1,0}};

static struct patval pat687[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {0,1,0}};

static struct patval pat688[]={
   {2,0,1},
   {1,2,1},
   {1,1,1},
   {0,0,2},
   {2,1,2},
   {2,2,4},
   {3,1,4},
   {3,2,4},
   {3,0,0},
   {0,1,0},
   {0,2,0},
   {1,0,0}};

static struct patval pat689[]={
   {0,1,1},
   {2,0,1},
   {2,1,2},
   {0,0,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat690[]={
   {2,1,1},
   {0,0,1},
   {2,0,2},
   {0,1,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat691[]={
   {3,-2,1},
   {1,-1,1},
   {4,0,1},
   {4,-1,1},
   {2,-2,1},
   {2,-1,2},
   {0,0,2},
   {3,0,2},
   {0,1,0},
   {3,-1,0},
   {1,0,0},
   {3,1,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {4,1,0}};

static struct patval pat692[]={
   {0,1,1},
   {1,-1,1},
   {2,-2,1},
   {0,0,1},
   {3,-2,1},
   {1,0,2},
   {1,3,2},
   {2,-1,2},
   {2,1,2},
   {1,1,0},
   {2,2,0},
   {2,3,0},
   {1,2,0},
   {2,0,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat693[]={
   {0,1,1},
   {1,1,1},
   {0,0,2},
   {2,0,2},
   {-1,-1,0},
   {1,0,0},
   {0,-1,0},
   {2,-1,0},
   {-1,0,0},
   {1,-1,0}};

static struct patval pat694[]={
   {2,0,1},
   {2,-1,1},
   {0,0,2},
   {1,2,2},
   {1,-1,2},
   {3,2,2},
   {1,0,0},
   {1,1,0},
   {1,-2,0},
   {0,1,0},
   {2,-2,0},
   {0,2,0},
   {0,-1,0},
   {2,1,0},
   {2,2,0},
   {0,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,-2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0}};

static struct patval pat695[]={
   {0,3,1},
   {2,0,1},
   {0,0,2},
   {1,2,2},
   {-1,3,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {1,0,0},
   {1,1,0},
   {0,2,0},
   {1,3,0},
   {-1,0,0},
   {2,1,0}};

static struct patval pat696[]={
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {1,2,2},
   {1,-1,2},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat697[]={
   {0,5,1},
   {0,0,1},
   {0,1,2},
   {1,-1,2},
   {1,0,2},
   {0,3,2},
   {0,4,0},
   {-1,4,0},
   {-1,5,0},
   {0,2,0},
   {1,5,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {-1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat698[]={
   {1,5,1},
   {0,0,1},
   {0,3,2},
   {0,1,2},
   {1,0,2},
   {1,-1,2},
   {0,4,0},
   {0,5,0},
   {-1,5,0},
   {0,2,0},
   {-1,2,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {-1,4,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat699[]={
   {0,3,1},
   {1,4,1},
   {1,1,1},
   {2,3,1},
   {2,2,1},
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {1,2,2},
   {1,3,2},
   {0,5,0},
   {-1,3,0},
   {0,4,0},
   {-1,4,0},
   {-1,2,0},
   {-1,5,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat700[]={
   {1,4,1},
   {0,2,1},
   {0,3,1},
   {1,3,2},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {2,0,0},
   {0,1,0},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat701[]={
   {2,0,1},
   {0,1,1},
   {0,2,1},
   {0,3,1},
   {2,1,1},
   {1,0,1},
   {2,2,2},
   {1,1,2},
   {1,2,2},
   {0,0,2},
   {1,5,0},
   {1,4,0},
   {2,4,0},
   {0,5,0},
   {0,4,0},
   {2,3,0},
   {1,3,0},
   {2,5,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat702[]={
   {2,-1,1},
   {0,1,1},
   {0,0,1},
   {1,-1,1},
   {2,0,2},
   {1,0,2},
   {2,2,0},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {0,2,0},
   {2,1,0},
   {1,1,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat703[]={
   {1,1,1},
   {0,2,2},
   {0,0,2},
   {0,1,0},
   {-1,1,0}};

static struct patval pat704[]={
   {1,1,1},
   {0,2,2},
   {0,0,2},
   {0,1,0},
   {-1,1,0}};

static struct patval pat705[]={
   {1,-1,1},
   {0,0,1},
   {1,2,1},
   {1,1,1},
   {1,0,2},
   {2,0,2},
   {0,-1,0},
   {0,2,0},
   {0,1,0}};

static struct patval pat706[]={
   {0,5,1},
   {0,1,1},
   {0,2,1},
   {0,3,1},
   {1,1,1},
   {1,4,1},
   {0,0,2},
   {0,4,2},
   {1,3,0},
   {1,5,0},
   {1,2,0}};

static struct patval pat707[]={
   {1,1,1},
   {0,0,1},
   {0,3,2},
   {1,0,2},
   {0,1,2},
   {0,2,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat708[]={
   {0,1,1},
   {1,2,1},
   {0,2,2},
   {0,0,2},
   {1,1,2},
   {-1,2,4},
   {0,3,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,0,0}};

static struct patval pat709[]={
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {1,2,2},
   {1,-1,0},
   {2,0,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat710[]={
   {1,2,1},
   {0,0,1},
   {1,1,1},
   {0,2,2},
   {1,0,2},
   {0,1,2},
   {1,-1,0},
   {0,-1,0},
   {1,-2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat711[]={
   {0,2,1},
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,2,2},
   {1,1,2},
   {1,-2,0},
   {2,0,0},
   {0,-1,0},
   {2,-2,0},
   {2,-1,0},
   {1,-1,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat712[]={
   {0,0,1},
   {1,1,1},
   {1,2,1},
   {1,-2,2},
   {0,2,2},
   {1,0,2},
   {0,1,2},
   {1,-1,0},
   {2,-2,0},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat713[]={
   {0,2,1},
   {0,3,1},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,1,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat714[]={
   {0,3,1},
   {0,2,1},
   {1,4,1},
   {1,2,2},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat715[]={
   {0,0,1},
   {1,-1,2},
   {1,-2,2},
   {1,1,2},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat716[]={
   {1,1,1},
   {1,-2,1},
   {1,-1,1},
   {0,0,2},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat717[]={
   {1,-1,1},
   {1,-2,1},
   {0,0,2},
   {2,-2,2},
   {-2,-3,4},
   {0,-3,0},
   {-1,-1,0},
   {1,-3,0},
   {-1,-2,0},
   {-1,-3,0},
   {2,-3,0},
   {0,-2,0},
   {0,-1,0}};

static struct patval pat718[]={
   {1,-2,1},
   {1,-1,1},
   {2,-1,1},
   {2,-2,2},
   {4,-2,2},
   {3,-1,2},
   {0,0,2},
   {-2,-3,4},
   {0,-1,0},
   {0,-2,0},
   {2,-3,0},
   {0,-3,0},
   {-1,-1,0},
   {3,-3,0},
   {3,-2,0},
   {1,-3,0},
   {-1,-2,0},
   {4,-3,0},
   {-1,-3,0}};

static int assist_params719[] = {10,1,0,0};

static struct patval pat719[]={
   {0,1,2},
   {0,0,2},
   {1,-2,2},
   {0,-2,0},
   {-1,-2,0},
   {-1,1,0},
   {-1,0,0},
   {-1,-1,0},
   {0,-1,0},
   {1,-1,0}};

static struct patval pat720[]={
   {0,1,1},
   {1,1,2},
   {0,2,2},
   {0,3,2},
   {1,3,2},
   {2,3,2},
   {0,0,2},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0},
   {1,2,0}};

static struct patval pat721[]={
   {1,1,1},
   {0,0,1},
   {0,2,1},
   {0,3,1},
   {1,3,1},
   {2,3,1},
   {0,1,2},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,0,0},
   {1,2,0}};

static struct patval pat722[]={
   {0,0,1},
   {1,2,1},
   {0,5,2},
   {0,2,2},
   {-2,0,3},
   {-2,-1,3},
   {-2,1,3},
   {-1,0,0},
   {-1,5,0},
   {-1,-1,0},
   {-1,1,0},
   {-1,2,0},
   {0,1,0},
   {-1,3,0},
   {0,3,0},
   {-1,4,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,4,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0}};

static struct patval pat723[]={
   {2,-1,1},
   {3,1,1},
   {0,0,2},
   {2,1,2},
   {2,4,2},
   {1,-2,0},
   {0,1,0},
   {0,-1,0},
   {1,-1,0},
   {1,3,0},
   {1,0,0},
   {2,-2,0},
   {1,1,0},
   {2,0,0},
   {1,2,0},
   {2,2,0},
   {0,-2,0},
   {1,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {2,3,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0}};

static int assist_params724[] = {5,1,5,1};

static struct patval pat724[]={
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {2,2,2},
   {1,-1,0},
   {0,-2,0},
   {1,-2,0},
   {0,-1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,-2,0}};

static int assist_params725[] = {5,1,5,1};

static struct patval pat725[]={
   {1,0,1},
   {1,-1,1},
   {0,0,2},
   {1,1,2},
   {2,0,2},
   {2,2,2},
   {0,-1,0},
   {1,-2,0},
   {2,-1,0},
   {0,-2,0},
   {2,1,0},
   {0,1,0},
   {2,-2,0}};

static struct patval pat726[]={
   {1,0,1},
   {0,0,2},
   {0,1,2},
   {1,1,2},
   {0,-1,0},
   {-1,-2,0},
   {-1,0,0},
   {-1,1,0},
   {1,-1,0},
   {-1,-1,0},
   {0,-2,0},
   {1,-2,0},
   {2,0,0}};

static int assist_params727[] = {0,0,10,1};

static struct patval pat727[]={
   {1,0,1},
   {0,1,1},
   {1,2,1},
   {1,-1,2},
   {0,0,2},
   {0,-1,4},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat728[]={
   {1,0,1},
   {2,0,1},
   {1,-1,2},
   {0,2,2},
   {0,1,2},
   {2,-1,2},
   {0,0,2},
   {2,-2,4},
   {3,-2,4},
   {2,1,0},
   {2,2,0},
   {1,1,0},
   {3,1,0},
   {3,2,0},
   {1,2,0}};

static int assist_params729[] = {5,1,0,0};

static struct patval pat729[]={
   {2,2,1},
   {0,0,2},
   {1,4,2},
   {-2,4,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-2,3,0},
   {-2,0,0},
   {-2,2,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0},
   {-2,1,0}};

static struct patval pat730[]={
   {1,0,1},
   {3,-1,1},
   {2,0,1},
   {3,-2,1},
   {2,-3,1},
   {1,-1,2},
   {0,0,2},
   {1,1,2},
   {2,-2,2},
   {0,-3,0},
   {2,-1,0},
   {1,-2,0},
   {1,-3,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat731[]={
   {0,0,1},
   {5,0,1},
   {4,1,1},
   {5,1,1},
   {1,1,2},
   {2,0,2},
   {1,0,2},
   {2,2,2},
   {3,1,2},
   {4,0,2},
   {3,0,0},
   {2,1,0},
   {0,-1,0},
   {4,-1,0},
   {2,-1,0},
   {5,-1,0},
   {1,-1,0},
   {3,-1,0}};

static struct patval pat732[]={
   {2,2,1},
   {4,0,1},
   {1,0,1},
   {1,1,1},
   {3,1,1},
   {2,0,1},
   {5,1,2},
   {5,0,2},
   {0,0,2},
   {4,1,2},
   {2,1,0},
   {4,-1,0},
   {1,-1,0},
   {3,0,0},
   {2,-1,0},
   {5,-1,0},
   {0,-1,0},
   {3,-1,0}};

static struct patval pat733[]={
   {2,0,1},
   {1,1,1},
   {1,0,1},
   {2,2,1},
   {1,-1,2},
   {0,2,2},
   {0,0,2},
   {2,-1,2},
   {0,1,2},
   {3,-1,2},
   {1,2,0},
   {1,3,0},
   {2,1,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat734[]={
   {2,-4,1},
   {1,-3,1},
   {0,0,2},
   {2,-3,2},
   {1,-2,2},
   {1,-1,2},
   {2,-1,0},
   {1,0,0},
   {2,-5,0},
   {1,-5,0},
   {0,-1,0},
   {2,-2,0},
   {1,-4,0},
   {2,0,0},
   {3,-6,0},
   {3,-5,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat735[]={
   {0,0,1},
   {1,-1,2},
   {2,3,2},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,-1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat736[]={
   {0,1,1},
   {3,1,1},
   {1,0,1},
   {3,0,1},
   {2,0,1},
   {0,0,2},
   {4,1,2},
   {6,2,4},
   {5,2,4},
   {5,1,4},
   {1,2,0},
   {1,1,0},
   {4,2,0},
   {2,1,0},
   {0,2,0},
   {3,2,0},
   {2,2,0}};

static struct patval pat737[]={
   {3,0,1},
   {0,1,1},
   {3,1,1},
   {1,0,1},
   {3,2,1},
   {2,0,1},
   {4,1,2},
   {2,2,2},
   {0,0,2},
   {4,0,2},
   {6,2,4},
   {5,1,4},
   {5,2,4},
   {4,2,0},
   {2,1,0},
   {0,2,0},
   {1,2,0},
   {1,1,0}};

static struct patval pat738[]={
   {0,0,1},
   {2,0,1},
   {1,1,2},
   {1,0,0},
   {2,-1,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat739[]={
   {1,1,1},
   {1,-1,1},
   {2,0,1},
   {1,0,2},
   {0,0,2},
   {0,1,2},
   {2,-1,0},
   {0,2,0},
   {1,2,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat740[]={
   {0,1,1},
   {0,2,1},
   {1,3,1},
   {1,0,1},
   {0,0,1},
   {1,2,2},
   {1,1,2},
   {1,-1,2},
   {2,0,2},
   {2,3,2},
   {2,1,0},
   {2,2,0},
   {2,-2,0},
   {3,-2,0},
   {2,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params741[] = {10,1,0,0};

static struct patval pat741[]={
   {0,3,1},
   {2,2,1},
   {0,2,2},
   {0,0,2},
   {0,1,2},
   {1,2,2},
   {1,3,2},
   {1,0,0},
   {1,4,0},
   {1,1,0},
   {2,1,0},
   {2,0,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat742[]={
   {0,0,1},
   {0,2,2},
   {1,0,2},
   {0,1,2},
   {1,2,2},
   {2,1,2},
   {3,0,4},
   {2,2,0},
   {2,0,0},
   {1,1,0}};

static struct patval pat743[]={
   {2,1,1},
   {1,0,1},
   {2,0,1},
   {0,0,2},
   {1,2,2},
   {1,1,2},
   {-1,3,4},
   {-1,2,4},
   {0,2,4},
   {1,3,4},
   {0,1,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat744[]={
   {2,1,1},
   {0,2,1},
   {1,1,1},
   {0,1,2},
   {0,0,2},
   {1,2,2},
   {2,2,2},
   {0,-1,4},
   {2,0,0},
   {1,-1,0},
   {2,-1,0},
   {3,-1,0},
   {3,0,0},
   {1,0,0}};

static struct patval pat745[]={
   {2,-1,1},
   {2,0,2},
   {1,-1,2},
   {0,0,2},
   {0,1,4},
   {0,-1,4},
   {1,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {1,1,0}};

static struct patval pat746[]={
   {0,0,1},
   {1,0,1},
   {0,1,2},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0},
   {0,-2,0},
   {-1,0,0}};

static struct patval pat747[]={
   {1,-1,1},
   {2,-1,1},
   {0,0,2},
   {1,-2,0},
   {2,-3,0},
   {2,-2,0},
   {1,-3,0},
   {0,-1,0}};

static struct patval pat748[]={
   {1,0,1},
   {1,-1,1},
   {0,0,2},
   {2,-1,3},
   {2,0,3},
   {2,-3,0},
   {2,-2,0},
   {1,-2,0},
   {1,-3,0},
   {0,-1,0}};

static struct patval pat749[]={
   {0,1,1},
   {1,0,1},
   {0,0,1},
   {1,-1,2},
   {0,2,2},
   {1,1,2},
   {2,0,2},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat750[]={
   {0,0,1},
   {1,-1,2},
   {2,-1,2},
   {1,1,2},
   {2,1,2},
   {3,0,2},
   {3,-1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat751[]={
   {3,0,1},
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {1,2,0},
   {0,2,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {2,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat752[]={
   {2,0,1},
   {0,1,2},
   {1,0,2},
   {0,0,2},
   {2,1,2},
   {0,2,4},
   {1,2,0},
   {1,1,0},
   {2,2,0}};

static struct patval pat753[]={
   {2,0,1},
   {1,0,1},
   {3,0,1},
   {1,-1,2},
   {0,0,2},
   {0,1,2},
   {2,-1,2},
   {0,2,4},
   {0,-1,4},
   {2,4,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,3,0},
   {1,1,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat754[]={
   {1,-3,1},
   {2,0,1},
   {0,1,2},
   {0,0,2},
   {0,2,4},
   {0,-1,4},
   {0,-2,4},
   {1,-2,0},
   {1,-1,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat755[]={
   {2,0,1},
   {1,-3,1},
   {0,0,2},
   {0,-1,4},
   {0,-2,4},
   {1,-2,0},
   {0,1,0},
   {1,-1,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,0,0},
   {2,1,0}};

static struct patval pat756[]={
   {1,0,1},
   {2,0,1},
   {2,1,1},
   {1,2,1},
   {1,-1,2},
   {0,1,2},
   {0,0,2},
   {1,1,2},
   {0,-1,4},
   {2,-1,0},
   {0,3,0},
   {0,2,0},
   {2,2,0},
   {2,3,0},
   {1,3,0}};

static struct patval pat757[]={
   {0,1,1},
   {1,2,1},
   {0,0,1},
   {0,2,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat758[]={
   {0,1,1},
   {1,2,1},
   {2,1,1},
   {0,0,1},
   {2,0,1},
   {0,2,2},
   {2,2,2},
   {1,0,0},
   {1,1,0}};

static struct patval pat759[]={
   {0,1,1},
   {1,2,1},
   {0,0,1},
   {0,2,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat760[]={
   {0,0,1},
   {0,1,1},
   {1,2,1},
   {0,2,2},
   {1,-1,3},
   {0,-1,3},
   {1,1,0},
   {1,0,0}};

static int assist_params761[] = {10,1,0,0};

static struct patval pat761[]={
   {1,0,1},
   {3,1,1},
   {2,3,1},
   {0,0,1},
   {0,1,2},
   {1,1,2},
   {0,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {0,3,0},
   {1,2,0},
   {1,3,0},
   {3,-1,0},
   {3,0,0},
   {2,2,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat762[]={
   {0,1,1},
   {0,0,1},
   {1,0,1},
   {1,1,2},
   {2,0,2},
   {1,2,2},
   {2,1,2},
   {-1,0,0},
   {-1,1,0},
   {-2,2,0},
   {-1,-1,0},
   {-2,4,0},
   {-2,5,0},
   {-2,3,0},
   {-2,-1,0},
   {-2,1,0},
   {-2,0,0},
   {0,2,0},
   {0,3,0},
   {1,-1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {1,3,0},
   {2,-1,0},
   {-1,5,0},
   {0,-1,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat763[]={
   {0,1,1},
   {1,0,1},
   {3,1,2},
   {0,0,2},
   {4,0,2},
   {1,1,0},
   {1,-1,0},
   {1,2,0},
   {0,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {2,-1,0},
   {4,-1,0},
   {2,0,0}};

static struct patval pat764[]={
   {2,0,1},
   {0,1,1},
   {0,0,1},
   {2,1,2},
   {1,0,2},
   {2,-1,2},
   {-1,-2,0},
   {-1,-1,0},
   {1,1,0},
   {2,-2,0},
   {0,-2,0},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0}};

static struct patval pat765[]={
   {2,1,1},
   {2,0,2},
   {0,0,2},
   {2,2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {0,-2,0},
   {0,-1,0},
   {0,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat766[]={
   {0,0,1},
   {2,0,1},
   {1,1,1},
   {0,1,2},
   {1,0,2},
   {2,1,2},
   {1,-1,0},
   {2,-1,0},
   {0,-1,0}};

static struct patval pat767[]={
   {1,1,1},
   {4,-1,1},
   {2,1,1},
   {4,0,1},
   {3,1,1},
   {0,0,2},
   {3,0,2},
   {3,-1,2},
   {1,-2,0},
   {2,0,0},
   {0,1,0},
   {3,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {2,-2,0},
   {4,-2,0},
   {0,-2,0},
   {2,-1,0}};

static struct patval pat768[]={
   {1,-1,1},
   {1,0,2},
   {0,0,2},
   {2,-2,4},
   {1,1,0},
   {0,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat769[]={
   {0,0,1},
   {2,-2,2},
   {1,0,2},
   {0,-1,3},
   {0,-2,3},
   {0,2,4},
   {1,-2,0},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat770[]={
   {0,1,1},
   {1,-1,1},
   {0,0,1},
   {2,-1,2},
   {1,1,2},
   {1,0,2},
   {3,0,2},
   {1,2,3},
   {3,2,4},
   {2,2,4},
   {2,1,4},
   {3,-1,4},
   {3,1,4},
   {2,0,4},
   {2,-2,4},
   {0,-2,0},
   {1,-2,0},
   {-1,2,0},
   {-2,2,0},
   {-2,-1,0},
   {-1,1,0},
   {-2,1,0},
   {0,-1,0},
   {-1,0,0},
   {-1,-1,0},
   {-1,-2,0},
   {-2,0,0},
   {-2,-2,0},
   {0,2,0}};

static struct patval pat771[]={
   {0,2,1},
   {1,0,1},
   {0,1,1},
   {1,-1,1},
   {0,0,2},
   {1,1,2},
   {2,0,2},
   {3,1,2},
   {1,2,2},
   {1,3,3},
   {3,3,4},
   {2,3,4},
   {2,2,4},
   {3,2,4},
   {3,0,4},
   {2,-1,4},
   {2,1,4},
   {-2,0,0},
   {0,-1,0},
   {-1,3,0},
   {-2,2,0},
   {-1,1,0},
   {-1,2,0},
   {-1,0,0},
   {-1,-1,0},
   {-2,3,0},
   {-2,1,0},
   {-2,-1,0},
   {0,3,0}};

static struct patval pat772[]={
   {1,2,1},
   {0,1,1},
   {1,1,1},
   {2,-1,1},
   {2,0,1},
   {2,2,2},
   {3,0,2},
   {2,1,2},
   {4,1,2},
   {0,0,2},
   {1,0,2},
   {2,3,3},
   {4,3,4},
   {4,2,4},
   {3,-1,4},
   {3,1,4},
   {4,0,4},
   {3,3,4},
   {3,2,4},
   {0,-1,0},
   {1,-1,0},
   {0,2,0},
   {0,3,0},
   {-1,3,0},
   {-1,0,0},
   {-1,2,0},
   {-1,1,0},
   {-1,-1,0},
   {1,3,0}};

static struct patval pat773[]={
   {1,1,1},
   {1,2,1},
   {0,0,2},
   {1,0,2},
   {0,2,3},
   {-1,0,0},
   {-1,2,0},
   {-1,1,0},
   {0,1,0}};

static struct patval pat774[]={
   {1,0,1},
   {0,0,2},
   {2,-1,2},
   {1,-1,0},
   {1,-2,0},
   {2,-2,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat775[]={
   {0,0,1},
   {2,-1,1},
   {1,0,2},
   {1,-1,0},
   {1,-2,0},
   {2,-2,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat776[]={
   {5,0,1},
   {1,-1,1},
   {3,0,2},
   {0,0,2},
   {5,-1,3},
   {4,-2,3},
   {5,-2,3},
   {4,0,3},
   {4,-1,3},
   {0,-1,0},
   {1,-2,0},
   {2,-1,0},
   {2,-2,0},
   {0,-2,0},
   {1,0,0},
   {3,-1,0},
   {2,0,0},
   {3,-2,0}};

static struct patval pat777[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {-1,1,3},
   {0,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0}};

static struct patval pat778[]={
   {0,1,2},
   {1,-1,2},
   {1,1,2},
   {0,0,2},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat779[]={
   {1,0,1},
   {0,1,2},
   {0,0,2},
   {0,2,4},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat780[]={
   {1,1,1},
   {0,2,1},
   {0,0,1},
   {1,0,2},
   {0,3,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {0,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat781[]={
   {0,0,1},
   {1,1,2},
   {2,1,2},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat782[]={
   {1,1,1},
   {3,0,1},
   {0,1,1},
   {0,0,2},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {1,-2,0},
   {0,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {2,-2,0},
   {3,1,0}};

static struct patval pat783[]={
   {1,1,1},
   {0,1,2},
   {0,0,2},
   {1,0,0},
   {0,3,0},
   {0,2,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat784[]={
   {2,1,1},
   {1,0,1},
   {1,-1,1},
   {1,1,2},
   {0,1,2},
   {0,0,2},
   {0,-3,3},
   {2,0,3},
   {2,2,3},
   {-1,1,0},
   {-1,2,0},
   {-2,-3,0},
   {0,-2,0},
   {-1,0,0},
   {-1,-1,0},
   {0,-1,0},
   {-1,-2,0},
   {0,2,0},
   {-2,1,0},
   {-2,0,0},
   {-2,-1,0},
   {1,2,0},
   {-1,-3,0},
   {-2,-2,0},
   {-2,2,0}};

static struct patval pat785[]={
   {2,2,1},
   {1,0,1},
   {1,1,1},
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {1,2,2},
   {0,-2,3},
   {2,1,3},
   {2,3,3},
   {-1,3,0},
   {-2,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,2,0},
   {-1,1,0},
   {-1,-2,0},
   {0,3,0},
   {-2,2,0},
   {-2,1,0},
   {-2,0,0},
   {1,3,0},
   {-1,0,0},
   {-2,-1,0},
   {-2,3,0}};

static struct patval pat786[]={
   {1,1,1},
   {1,0,1},
   {0,0,1},
   {0,1,2},
   {0,2,2},
   {0,-2,3},
   {-1,-1,0},
   {-2,1,0},
   {-2,3,0},
   {-2,0,0},
   {-2,-2,0},
   {-1,-2,0},
   {-2,2,0},
   {0,-1,0},
   {-1,0,0},
   {-2,-1,0},
   {-1,2,0},
   {0,3,0},
   {-1,1,0},
   {-1,3,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat787[]={
   {2,-1,1},
   {3,-1,1},
   {1,0,1},
   {3,1,1},
   {0,0,2},
   {1,-1,2},
   {0,-1,4},
   {2,1,0},
   {0,1,0},
   {3,0,0},
   {1,1,0},
   {2,0,0},
   {4,1,0}};

static struct patval pat788[]={
   {1,0,1},
   {3,0,1},
   {2,1,1},
   {0,1,2},
   {0,0,2},
   {2,0,2},
   {3,1,2},
   {4,0,2},
   {0,-1,4},
   {1,-1,0},
   {3,-1,0},
   {4,-1,0},
   {1,1,0},
   {2,-1,0}};

static struct patval pat789[]={
   {2,1,1},
   {0,1,1},
   {0,0,1},
   {4,0,1},
   {4,1,1},
   {4,2,2},
   {0,2,2},
   {3,1,0},
   {2,0,0},
   {1,1,0},
   {1,0,0},
   {3,0,0}};

static struct patval pat790[]={
   {0,1,1},
   {0,0,1},
   {2,2,1},
   {1,2,1},
   {1,0,2},
   {1,1,2},
   {2,0,0},
   {2,1,0},
   {1,-1,0},
   {2,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat791[]={
   {1,2,1},
   {0,0,1},
   {1,0,1},
   {1,3,2},
   {1,1,2},
   {0,3,4},
   {0,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {0,1,0}};

static struct patval pat792[]={
   {0,2,1},
   {0,0,2},
   {1,3,2},
   {1,0,0},
   {1,1,0},
   {0,3,0},
   {0,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat793[]={
   {0,0,1},
   {1,-1,1},
   {1,0,2},
   {2,-1,2},
   {0,-1,3},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {2,0,0},
   {0,2,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat794[]={
   {3,0,1},
   {2,0,1},
   {1,0,1},
   {0,0,2},
   {2,-1,2},
   {1,-1,2},
   {0,-1,0},
   {1,1,0},
   {2,-2,0},
   {0,-2,0},
   {0,1,0},
   {2,1,0},
   {1,-2,0},
   {3,1,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat795[]={
   {2,-1,1},
   {0,0,1},
   {1,1,1},
   {1,-1,1},
   {1,4,1},
   {1,0,2},
   {0,3,2},
   {0,2,2},
   {2,0,2},
   {0,1,2},
   {2,1,2},
   {0,-1,3},
   {1,2,0},
   {2,4,0},
   {2,2,0},
   {2,3,0},
   {1,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat796[]={
   {2,-2,1},
   {3,-2,1},
   {1,-1,1},
   {2,0,1},
   {1,-2,1},
   {3,-1,2},
   {0,0,2},
   {2,-1,2},
   {1,0,2},
   {0,5,3},
   {0,4,3},
   {0,7,3},
   {0,6,3},
   {2,4,3},
   {1,4,3},
   {1,5,3},
   {1,6,3},
   {1,7,3},
   {2,7,3},
   {3,7,3},
   {3,6,3},
   {3,5,3},
   {2,6,3},
   {2,5,3},
   {3,4,3},
   {0,3,0},
   {2,3,0},
   {2,1,0},
   {2,2,0},
   {0,1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {1,3,0},
   {1,1,0},
   {1,2,0},
   {0,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0},
   {4,6,0},
   {4,7,0}};

static struct patval pat797[]={
   {0,2,1},
   {0,0,1},
   {0,1,1},
   {1,1,1},
   {1,0,2},
   {2,1,2},
   {1,2,2},
   {1,-2,0},
   {0,-1,0},
   {1,-1,0},
   {0,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,-2,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat798[]={
   {2,0,1},
   {1,1,1},
   {1,0,2},
   {0,0,2},
   {2,1,2},
   {2,-1,0},
   {1,-1,0},
   {2,2,0},
   {0,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat799[]={
   {2,0,1},
   {3,0,1},
   {1,1,1},
   {0,0,2},
   {1,0,2},
   {2,1,2},
   {2,-1,2},
   {1,-2,0},
   {0,-1,0},
   {1,-1,0},
   {2,-2,0},
   {0,-2,0},
   {3,-2,0},
   {3,-1,0},
   {2,2,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat800[]={
   {3,0,1},
   {2,0,1},
   {2,-3,1},
   {1,1,1},
   {0,0,2},
   {2,1,2},
   {1,0,2},
   {2,-1,2},
   {1,-1,0},
   {1,-4,0},
   {2,-4,0},
   {0,-1,0},
   {2,-2,0},
   {1,-2,0},
   {3,-3,0},
   {0,-2,0},
   {0,-4,0},
   {2,2,0},
   {3,-4,0},
   {1,-3,0},
   {3,-2,0},
   {3,-1,0},
   {0,-3,0},
   {3,1,0},
   {3,2,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat801[]={
   {1,1,1},
   {0,0,1},
   {1,2,2},
   {0,2,2},
   {2,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {0,1,0},
   {1,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat802[]={
   {3,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,2},
   {0,1,4},
   {0,2,4},
   {1,-2,0},
   {0,-1,0},
   {1,-1,0},
   {1,2,0},
   {0,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {2,-2,0},
   {3,2,0}};

static struct patval pat803[]={
   {3,1,1},
   {0,0,1},
   {2,1,1},
   {2,0,2},
   {3,-1,4},
   {2,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,-1,0},
   {0,-2,0},
   {1,-2,0},
   {2,-1,0},
   {0,2,0},
   {0,1,0},
   {2,2,0},
   {3,-2,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat804[]={
   {0,0,1},
   {1,-1,1},
   {1,0,2},
   {2,0,2},
   {0,1,3},
   {-3,0,4},
   {-3,-1,4},
   {-3,-2,4},
   {-2,0,4},
   {-2,-2,0},
   {-1,0,0},
   {-2,-3,0},
   {0,-2,0},
   {-3,-3,0},
   {-2,-1,0},
   {-1,-3,0},
   {-1,-2,0},
   {1,-3,0},
   {1,-2,0},
   {-1,-1,0},
   {0,-3,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {0,-1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat805[]={
   {0,0,1},
   {1,-1,2},
   {1,1,2},
   {1,-2,4},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat806[]={
   {0,1,1},
   {0,0,1},
   {1,1,2},
   {1,-1,2},
   {2,-2,3},
   {1,2,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat807[]={
   {1,-1,1},
   {1,1,1},
   {0,1,2},
   {0,0,2},
   {2,-2,4},
   {1,2,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat808[]={
   {1,0,1},
   {0,0,2},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {1,-2,0},
   {-1,-2,0},
   {-1,-1,0},
   {1,-1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0}};

static struct patval pat809[]={
   {1,-1,1},
   {2,0,1},
   {3,0,2},
   {0,0,2},
   {2,-1,2},
   {1,0,0},
   {1,-2,0},
   {0,-1,0},
   {0,-2,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {2,-2,0}};

static struct patval pat810[]={
   {1,0,1},
   {0,1,1},
   {1,1,1},
   {1,-1,2},
   {0,0,2},
   {1,-2,0},
   {0,-1,0},
   {0,-2,0}};

static int assist_params811[] = {10,1,0,0};

static struct patval pat811[]={
   {1,0,1},
   {0,0,1},
   {1,1,1},
   {1,3,2},
   {0,1,2},
   {-1,1,3},
   {-1,2,3},
   {0,2,0},
   {1,2,0},
   {0,3,0}};

static struct patval pat812[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {0,2,2},
   {0,1,2},
   {2,0,2},
   {1,3,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {3,1,0}};

static int assist_params813[] = {0,0,20,1};

static struct patval pat813[]={
   {1,-1,1},
   {0,0,1},
   {0,1,2},
   {1,0,2},
   {0,-1,0},
   {-1,1,0},
   {-1,0,0},
   {-1,-1,0}};

static struct patval pat814[]={
   {0,1,1},
   {0,2,1},
   {1,-1,1},
   {0,0,1},
   {2,-1,1},
   {1,1,2},
   {1,0,2},
   {1,3,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params815[] = {19,2,0,0};

static struct patval pat815[]={
   {2,0,1},
   {1,-1,1},
   {2,1,2},
   {0,0,2},
   {1,0,2},
   {2,-1,0},
   {1,2,0},
   {2,2,0},
   {1,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static int assist_params816[] = {0,0,5,1};

static struct patval pat816[]={
   {1,-1,1},
   {1,1,1},
   {0,0,1},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat817[]={
   {0,1,1},
   {0,2,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {1,0,0}};

static struct patval pat818[]={
   {3,1,1},
   {2,2,1},
   {1,2,1},
   {0,2,2},
   {2,-1,2},
   {1,1,2},
   {1,3,2},
   {0,0,2},
   {2,3,2},
   {3,0,2},
   {1,0,0},
   {2,1,0},
   {3,-1,0},
   {2,0,0},
   {1,-1,0},
   {0,1,0},
   {3,2,0}};

static struct patval pat819[]={
   {0,0,1},
   {1,-1,1},
   {1,0,2},
   {0,-1,0}};

static struct patval pat820[]={
   {1,0,1},
   {1,-1,2},
   {0,0,2},
   {0,-1,0}};

static struct patval pat821[]={
   {0,0,1},
   {2,0,1},
   {2,2,1},
   {1,1,2},
   {1,0,0},
   {2,1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat822[]={
   {1,2,1},
   {3,1,1},
   {0,0,1},
   {0,1,1},
   {2,1,1},
   {1,0,2},
   {1,1,2},
   {0,-1,0},
   {0,-2,0},
   {1,-2,0},
   {2,0,0},
   {1,-1,0},
   {2,-1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {2,-2,0},
   {4,0,0}};

static struct patval pat823[]={
   {1,1,1},
   {1,0,1},
   {0,1,2},
   {0,0,2},
   {1,2,2},
   {3,1,2},
   {2,1,2},
   {0,-1,0},
   {0,-2,0},
   {1,-1,0},
   {2,0,0},
   {1,-2,0},
   {2,-1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {2,-2,0},
   {4,0,0}};

static struct patval pat824[]={
   {3,0,1},
   {4,-1,1},
   {3,2,1},
   {2,-1,1},
   {0,0,2},
   {3,-1,2},
   {5,0,2},
   {4,0,2},
   {5,2,2},
   {2,2,0},
   {2,1,0},
   {2,0,0},
   {1,1,0},
   {0,-1,0},
   {1,2,0},
   {0,1,0},
   {1,0,0},
   {4,1,0},
   {4,2,0},
   {3,1,0},
   {5,1,0},
   {1,-1,0}};

static struct patval pat825[]={
   {2,0,1},
   {1,-1,1},
   {1,1,1},
   {0,0,1},
   {1,2,2},
   {2,1,2},
   {0,1,2},
   {1,0,0}};

static struct patval pat826[]={
   {1,1,1},
   {1,-1,1},
   {0,0,1},
   {1,2,2},
   {0,1,2},
   {1,0,0}};

static struct patval pat827[]={
   {2,-1,1},
   {1,0,1},
   {2,1,1},
   {1,1,2},
   {1,-1,2},
   {0,0,2},
   {2,0,0}};

static struct patval pat828[]={
   {1,-1,1},
   {2,0,1},
   {1,1,1},
   {0,0,1},
   {2,-1,2},
   {2,1,2},
   {1,0,0}};

static struct patval pat829[]={
   {0,1,1},
   {2,1,1},
   {1,2,1},
   {1,1,2},
   {1,-1,2},
   {2,0,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat830[]={
   {0,1,1},
   {1,2,1},
   {1,-1,2},
   {1,1,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat831[]={
   {1,-1,1},
   {1,1,1},
   {0,0,1},
   {2,-1,2},
   {2,1,2},
   {1,0,2},
   {2,0,0}};

static struct patval pat832[]={
   {2,1,1},
   {2,-1,1},
   {1,1,2},
   {1,-1,2},
   {2,0,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat833[]={
   {0,0,1},
   {0,2,1},
   {1,1,2},
   {0,1,0},
   {-1,1,0}};

static struct patval pat834[]={
   {1,1,1},
   {0,2,2},
   {0,0,2},
   {0,1,0},
   {-1,1,0}};

static struct patval pat835[]={
   {1,0,1},
   {2,0,2},
   {0,0,2},
   {1,1,0}};

static struct patval pat836[]={
   {1,0,1},
   {1,-1,2},
   {0,0,2},
   {2,-1,2},
   {0,1,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {3,0,0}};

static int assist_params837[] = {5,1,5,1};

static struct patval pat837[]={
   {0,0,1},
   {1,1,1},
   {1,-1,1},
   {4,0,1},
   {1,0,2},
   {0,1,2},
   {2,0,2},
   {0,-1,3},
   {1,2,0},
   {3,-1,0},
   {2,2,0},
   {2,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-1,0},
   {2,1,0},
   {4,1,0}};

static struct patval pat838[]={
   {1,-1,1},
   {0,0,1},
   {1,-2,2},
   {1,0,2},
   {0,-1,0},
   {2,-1,0},
   {0,-2,0}};

static struct patval pat839[]={
   {1,2,1},
   {0,1,1},
   {0,0,2},
   {0,2,2},
   {1,3,2},
   {-1,2,4},
   {0,3,4},
   {-1,1,0},
   {-1,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,-1,0},
   {-1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat840[]={
   {1,1,1},
   {0,0,1},
   {2,0,1},
   {2,-2,1},
   {3,-1,1},
   {0,-1,0},
   {2,-1,0},
   {1,0,0},
   {1,-1,0},
   {1,-2,0}};

static struct patval pat841[]={
   {0,0,1},
   {1,-1,1},
   {1,0,2},
   {2,-1,2},
   {3,0,2},
   {2,0,0},
   {0,-1,0}};

static struct patval pat842[]={
   {1,2,1},
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,2},
   {3,1,2},
   {2,2,2},
   {3,0,4},
   {3,2,4},
   {2,1,0},
   {1,-1,0},
   {2,0,0}};

static int assist_params843[] = {5,1,5,1};

static struct patval pat843[]={
   {0,3,1},
   {0,1,1},
   {1,1,2},
   {0,0,2},
   {0,-1,0},
   {-1,2,0},
   {0,2,0},
   {-1,0,0},
   {-1,1,0},
   {1,0,0},
   {-1,3,0},
   {1,-1,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat844[]={
   {0,0,1},
   {3,3,1},
   {1,0,2},
   {0,1,2},
   {1,2,2},
   {2,3,2},
   {3,2,2},
   {2,2,0},
   {1,1,0},
   {2,1,0}};

static struct patval pat845[]={
   {3,0,1},
   {3,2,1},
   {0,0,1},
   {3,1,1},
   {2,2,1},
   {1,2,2},
   {1,0,2},
   {0,1,2},
   {2,-1,2},
   {2,0,0},
   {1,1,0},
   {1,-1,0},
   {2,1,0}};

static struct patval pat846[]={
   {0,0,1},
   {2,0,2},
   {1,1,2},
   {1,-1,2},
   {2,-1,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat847[]={
   {1,-1,1},
   {2,0,1},
   {1,1,1},
   {0,0,2},
   {2,-1,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat848[]={
   {2,0,1},
   {1,0,1},
   {1,2,1},
   {1,-1,2},
   {2,-1,2},
   {0,0,2},
   {3,0,2},
   {1,1,0},
   {2,2,0},
   {3,1,0},
   {3,2,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat849[]={
   {2,0,1},
   {0,0,1},
   {3,0,1},
   {2,-1,2},
   {3,1,2},
   {1,-1,0},
   {1,0,0},
   {2,2,0},
   {1,2,0},
   {1,1,0},
   {2,1,0},
   {3,2,0}};

static struct patval pat850[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,-1,2},
   {-1,0,0},
   {0,-1,0},
   {1,1,0},
   {2,0,0},
   {-1,1,0}};

static struct patval pat851[]={
   {0,1,1},
   {1,0,1},
   {1,1,2},
   {0,0,2},
   {0,2,0}};

static struct patval pat852[]={
   {0,0,1},
   {1,2,1},
   {0,2,1},
   {2,-1,1},
   {2,1,2},
   {1,1,0},
   {1,-1,0},
   {0,1,0},
   {0,-1,0},
   {2,0,0},
   {1,0,0}};

static struct patval pat853[]={
   {1,1,1},
   {2,1,1},
   {0,0,2},
   {3,2,2},
   {-1,0,4},
   {1,4,4},
   {2,3,4},
   {2,4,4},
   {1,3,0},
   {0,3,0},
   {-1,2,0},
   {2,2,0},
   {-1,1,0},
   {0,1,0},
   {0,2,0},
   {1,2,0}};

static struct patval pat854[]={
   {3,2,1},
   {0,0,1},
   {1,1,2},
   {2,1,2},
   {-1,0,3},
   {1,4,3},
   {2,4,3},
   {2,3,3},
   {0,2,0},
   {-1,1,0},
   {0,1,0},
   {2,2,0},
   {0,3,0},
   {-1,2,0},
   {1,3,0},
   {1,2,0}};

static struct patval pat855[]={
   {1,-1,1},
   {0,0,1},
   {2,-1,2},
   {1,0,2},
   {2,0,0},
   {2,1,0},
   {3,0,0},
   {1,1,0}};

static struct patval pat856[]={
   {3,-1,1},
   {2,0,2},
   {0,0,2},
   {1,1,0},
   {0,-1,0},
   {1,0,0},
   {2,1,0},
   {1,-1,0},
   {2,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat857[]={
   {0,0,1},
   {2,0,1},
   {1,1,1},
   {1,0,2},
   {2,-1,2},
   {2,1,2},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat858[]={
   {1,0,1},
   {0,0,1},
   {1,2,2},
   {2,0,2},
   {2,-2,2},
   {0,-1,3},
   {1,-1,0},
   {2,-1,0},
   {1,-2,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat859[]={
   {1,1,1},
   {0,0,1},
   {1,3,2},
   {2,1,2},
   {2,-1,2},
   {0,1,3},
   {1,0,0},
   {2,0,0},
   {1,-1,0},
   {1,2,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat860[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {3,0,2},
   {2,1,0},
   {2,0,0},
   {2,-1,0},
   {3,1,0}};

static struct patval pat861[]={
   {1,1,1},
   {2,0,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat862[]={
   {0,0,1},
   {0,2,1},
   {0,1,0},
   {1,1,0},
   {-1,1,0}};

static struct patval pat863[]={
   {0,1,1},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {-2,1,0}};

static struct patval pat864[]={
   {1,1,1},
   {0,0,1},
   {2,0,1},
   {1,0,2},
   {-1,1,0},
   {0,1,0},
   {0,2,0},
   {1,2,0},
   {2,1,0},
   {2,2,0},
   {3,1,0}};

static struct patval pat865[]={
   {0,2,1},
   {2,2,1},
   {0,0,1},
   {2,0,2},
   {0,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,3,0},
   {2,1,0},
   {1,0,0}};

static struct patval pat866[]={
   {0,2,1},
   {2,2,1},
   {0,0,1},
   {2,0,2},
   {0,1,0},
   {-1,1,0},
   {-1,2,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {-1,3,0},
   {0,3,0},
   {2,1,0},
   {1,0,0},
   {2,3,0}};

static struct patval pat867[]={
   {1,0,2},
   {0,2,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {0,1,0}};

static struct patval pat868[]={
   {0,0,1},
   {1,-1,2},
   {2,1,2},
   {1,1,3},
   {3,-1,3},
   {3,1,3},
   {2,0,0},
   {1,0,0},
   {2,-1,0}};

static struct patval pat869[]={
   {1,1,1},
   {3,-1,1},
   {0,0,1},
   {1,-1,2},
   {2,1,2},
   {3,1,2},
   {2,0,0},
   {1,0,0},
   {2,-1,0}};

static struct patval pat870[]={
   {3,-1,1},
   {0,0,1},
   {2,1,2},
   {1,-1,2},
   {3,1,2},
   {2,0,0},
   {1,1,0},
   {1,0,0},
   {2,-1,0}};

static struct patval pat871[]={
   {0,0,1},
   {3,0,1},
   {3,1,1},
   {1,0,2},
   {2,0,2},
   {1,2,0},
   {2,2,0},
   {2,3,0},
   {1,1,0},
   {1,3,0},
   {2,1,0},
   {3,2,0}};

static struct patval pat872[]={
   {0,0,1},
   {1,1,1},
   {1,0,2},
   {0,1,2},
   {0,-1,0}};

static struct patval pat873[]={
   {0,1,1},
   {1,0,1},
   {0,0,2},
   {1,1,2},
   {0,-1,0}};

static struct patval pat874[]={
   {0,1,1},
   {1,2,1},
   {2,1,1},
   {0,0,1},
   {2,0,1},
   {0,2,2},
   {2,2,2},
   {1,0,0},
   {1,1,0}};

static struct patval pat875[]={
   {0,0,1},
   {0,1,1},
   {1,-1,1},
   {2,0,1},
   {1,1,1},
   {2,1,2},
   {1,0,0},
   {0,-1,0}};

static struct patval pat876[]={
   {0,1,1},
   {0,2,1},
   {1,0,1},
   {0,0,1},
   {1,2,1},
   {2,1,1},
   {2,2,2},
   {2,0,0},
   {1,1,0}};

static int assist_params877[] = {10,1,0,0};

static struct patval pat877[]={
   {2,-2,1},
   {0,0,1},
   {1,-1,2},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat878[]={
   {1,0,2},
   {0,0,2},
   {2,-1,2},
   {1,-1,0},
   {1,-2,0},
   {2,-2,0},
   {0,-1,0},
   {0,-2,0}};

static struct patval pat879[]={
   {2,-1,1},
   {0,0,1},
   {3,-1,2},
   {1,0,2},
   {3,0,0},
   {2,0,0}};

static struct patval pat880[]={
   {1,3,1},
   {0,0,1},
   {1,0,2},
   {0,3,2},
   {1,1,0},
   {1,2,0},
   {0,1,0},
   {2,1,0},
   {0,2,0}};

static struct patval pat881[]={
   {0,0,1},
   {1,3,1},
   {1,0,2},
   {0,3,2},
   {1,2,2},
   {-1,2,4},
   {1,1,0},
   {0,1,0},
   {2,1,0},
   {0,2,0}};

static struct patval pat882[]={
   {2,-2,1},
   {2,0,1},
   {0,0,2},
   {3,0,2},
   {3,1,4},
   {3,-1,4},
   {1,2,0},
   {1,0,0},
   {2,1,0},
   {2,2,0},
   {1,1,0},
   {0,1,0},
   {1,-1,0},
   {2,-1,0}};

static struct patval pat883[]={
   {0,0,1},
   {0,1,1},
   {3,2,1},
   {0,3,2},
   {1,1,2},
   {0,2,2},
   {1,2,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {1,3,0}};

static struct patval pat884[]={
   {0,3,1},
   {0,2,1},
   {1,1,1},
   {0,1,2},
   {0,0,2},
   {3,2,2},
   {1,2,0},
   {2,1,0},
   {2,0,0},
   {1,0,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {1,3,0}};

static struct patval pat885[]={
   {0,1,1},
   {0,0,2},
   {-1,2,3},
   {-1,1,3},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat886[]={
   {1,0,1},
   {1,-1,2},
   {0,0,2},
   {0,1,3},
   {0,-1,4},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat887[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {0,2,3},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat888[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {2,2,4},
   {0,2,4},
   {2,1,0},
   {1,2,0}};

static struct patval pat889[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {1,2,2},
   {-1,1,4},
   {-1,2,4},
   {0,2,4},
   {2,2,4},
   {2,1,0},
   {0,1,0}};

static struct patval pat890[]={
   {2,1,1},
   {0,0,2},
   {2,-1,2},
   {0,2,2},
   {-2,-2,3},
   {-1,-2,0},
   {-2,2,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,2,0},
   {0,-2,0},
   {-1,0,0},
   {-1,1,0},
   {-2,0,0},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {0,1,0},
   {2,0,0},
   {-2,-1,0},
   {2,2,0}};

static struct patval pat891[]={
   {0,1,1},
   {0,2,1},
   {4,1,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {0,3,0},
   {2,1,0},
   {1,-1,0},
   {2,0,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {2,2,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat892[]={
   {1,0,1},
   {2,-1,1},
   {1,-1,2},
   {0,0,2},
   {1,-2,2},
   {1,1,0},
   {2,-2,0},
   {2,0,0},
   {2,1,0},
   {3,0,0}};

static struct patval pat893[]={
   {1,1,1},
   {0,0,2},
   {2,1,2},
   {1,0,2},
   {1,2,2},
   {-1,3,3},
   {-1,2,3},
   {-1,1,3},
   {-2,3,3},
   {-2,4,3},
   {-1,4,3},
   {0,3,3},
   {0,4,3},
   {-2,1,3},
   {-2,2,3},
   {1,3,0},
   {0,2,0},
   {0,1,0}};

static struct patval pat894[]={
   {1,2,1},
   {0,2,1},
   {1,-1,1},
   {0,0,2},
   {0,1,2},
   {1,1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat895[]={
   {1,-1,2},
   {2,0,2},
   {0,0,2},
   {1,0,3},
   {1,1,0}};

static struct patval pat896[]={
   {0,1,1},
   {2,1,1},
   {1,1,2},
   {3,0,2},
   {0,0,2},
   {2,0,0},
   {1,0,0}};

static struct patval pat897[]={
   {2,-1,1},
   {1,1,1},
   {0,0,2},
   {3,1,2},
   {0,1,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat898[]={
   {0,0,1},
   {2,0,1},
   {0,1,2},
   {2,1,2},
   {1,1,0},
   {2,-1,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0}};

static struct patval pat899[]={
   {0,0,2},
   {0,2,2},
   {1,2,2},
   {1,1,2},
   {1,0,3},
   {-1,1,4},
   {-1,-1,0},
   {0,-1,0},
   {-1,0,0},
   {0,1,0}};

static struct patval pat900[]={
   {0,0,1},
   {2,3,1},
   {1,2,2},
   {1,1,2},
   {2,0,0},
   {2,2,0},
   {1,0,0},
   {2,1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat901[]={
   {0,0,1},
   {2,4,1},
   {1,2,2},
   {2,0,0},
   {2,1,0},
   {1,1,0},
   {2,3,0},
   {1,0,0},
   {2,2,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat902[]={
   {0,0,1},
   {2,0,1},
   {2,-1,2},
   {2,1,2},
   {1,1,0},
   {0,-1,0},
   {1,-1,0},
   {0,1,0},
   {1,0,0}};

static struct patval pat903[]={
   {0,0,1},
   {2,0,1},
   {1,0,2},
   {2,-1,2},
   {2,1,2},
   {1,1,0},
   {0,1,0},
   {0,-1,0},
   {1,-1,0}};

static struct patval pat904[]={
   {0,0,2},
   {1,2,2},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {0,1,0},
   {2,0,0},
   {2,-1,0},
   {0,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,0,0}};

static struct patval pat905[]={
   {1,0,1},
   {2,1,2},
   {0,0,2},
   {1,1,0},
   {0,1,0}};

static struct patval pat906[]={
   {1,0,1},
   {0,1,1},
   {1,2,1},
   {1,3,2},
   {0,0,2},
   {1,1,2},
   {-1,1,0},
   {-1,2,0},
   {0,2,0},
   {0,3,0}};

static struct patval pat907[]={
   {2,-2,1},
   {1,-1,1},
   {2,-3,2},
   {1,-2,2},
   {0,0,2},
   {0,-3,0},
   {0,-4,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,-3,0},
   {1,-4,0},
   {1,-3,0},
   {-1,-4,0},
   {-1,-2,0},
   {0,-2,0},
   {0,-1,0}};

static struct patval pat908[]={
   {4,1,1},
   {0,0,1},
   {4,0,2},
   {1,1,2},
   {1,-1,0},
   {2,-1,0},
   {0,1,0},
   {1,0,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-1,0},
   {2,0,0},
   {2,1,0}};

static struct patval pat909[]={
   {0,1,2},
   {0,0,2},
   {1,2,3},
   {0,2,3},
   {1,1,0},
   {1,0,0},
   {1,-1,0}};

static struct patval pat910[]={
   {0,1,1},
   {0,2,1},
   {1,3,1},
   {1,2,2},
   {1,1,2},
   {0,0,2},
   {2,3,3},
   {0,3,3},
   {2,2,0},
   {2,1,0},
   {2,0,0}};

static struct patval pat911[]={
   {0,1,2},
   {0,0,2},
   {1,2,3},
   {0,2,3},
   {1,1,0},
   {1,0,0}};

static struct patval pat912[]={
   {1,1,1},
   {0,0,1},
   {0,2,2},
   {0,1,2},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {0,3,0}};

static struct patval pat913[]={
   {0,0,1},
   {0,1,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat914[]={
   {0,2,1},
   {0,3,1},
   {0,1,2},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0}};

static struct patval pat915[]={
   {1,-1,1},
   {1,-2,1},
   {0,0,1},
   {1,-3,2},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0}};

static struct patval pat916[]={
   {0,1,1},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {1,0,0}};

static struct patval pat917[]={
   {0,1,1},
   {0,0,2},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,-1,0}};

static struct patval pat918[]={
   {0,0,1},
   {1,0,1},
   {2,-1,2},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat919[]={
   {0,1,1},
   {0,2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {0,3,0}};

static struct patval pat920[]={
   {0,1,1},
   {0,2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {0,3,0}};

static struct patval pat921[]={
   {0,0,1},
   {1,-1,2},
   {1,0,0},
   {1,1,0},
   {0,1,0}};

static struct patval pat922[]={
   {1,0,1},
   {0,0,2},
   {1,1,0},
   {0,1,0}};

static struct patval pat923[]={
   {1,0,1},
   {0,0,2},
   {1,1,0},
   {0,1,0}};

static struct patval pat924[]={
   {1,1,1},
   {0,0,2},
   {1,0,2},
   {2,1,3},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat925[]={
   {1,-1,1},
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {0,-1,3},
   {0,-2,3},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-2,0}};

static struct patval pat926[]={
   {0,1,1},
   {0,0,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat927[]={
   {0,1,1},
   {0,0,2},
   {1,1,0},
   {1,2,0},
   {1,0,0}};

static struct patval pat928[]={
   {0,0,1},
   {0,1,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat929[]={
   {0,0,1},
   {0,1,2},
   {1,1,0},
   {1,0,0}};

static struct patval pat930[]={
   {0,1,1},
   {1,2,1},
   {1,1,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat931[]={
   {0,0,1},
   {1,0,2},
   {1,2,2},
   {0,1,2},
   {1,1,0}};

static struct patval pat932[]={
   {0,1,1},
   {1,0,1},
   {1,2,1},
   {0,0,2},
   {1,1,0}};

static struct patval pat933[]={
   {1,1,1},
   {0,0,1},
   {1,2,2},
   {0,1,2},
   {1,0,0}};

static struct patval pat934[]={
   {1,-1,1},
   {2,0,1},
   {1,0,2},
   {0,0,2},
   {2,-1,0},
   {0,-1,0}};

static struct patval pat935[]={
   {0,0,1},
   {1,0,1},
   {1,-1,2},
   {2,0,2},
   {2,-1,0},
   {0,-1,0}};

static struct patval pat936[]={
   {0,0,1},
   {1,0,1},
   {1,-1,2},
   {1,1,2},
   {2,0,2},
   {2,-1,0},
   {2,1,0},
   {0,-1,0}};

static struct patval pat937[]={
   {0,1,1},
   {1,2,1},
   {1,-1,2},
   {1,1,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat938[]={
   {0,1,1},
   {1,0,1},
   {1,2,1},
   {1,-1,2},
   {0,0,2},
   {1,1,0}};

static struct patval pat939[]={
   {0,1,1},
   {1,2,1},
   {1,0,2},
   {0,0,2},
   {1,1,0},
   {0,2,0}};

static int assist_params940[] = {10,3};

static struct patval pat940[]={
   {0,0,2},
   {-1,0,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,-2,0}};

static struct patval pat941[]={
   {1,1,1},
   {0,0,2},
   {2,1,3},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat942[]={
   {0,0,1},
   {2,0,2},
   {1,0,0},
   {2,-1,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat943[]={
   {0,0,1},
   {0,3,2},
   {-1,1,3},
   {-1,2,3},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0}};

static struct patval pat944[]={
   {1,2,1},
   {0,2,1},
   {0,0,2},
   {1,1,0},
   {1,0,0},
   {0,1,0}};

static struct patval pat945[]={
   {0,1,1},
   {0,0,1},
   {1,1,2},
   {1,0,2},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,2,0}};

static struct patval pat946[]={
   {0,0,1},
   {0,2,1},
   {1,0,2},
   {1,2,2},
   {1,1,0},
   {0,1,0},
   {-1,1,0}};

static struct patval pat947[]={
   {1,0,1},
   {1,2,1},
   {0,2,2},
   {0,0,2},
   {1,1,0},
   {0,1,0},
   {-1,1,0}};

static struct patval pat948[]={
   {0,1,1},
   {0,3,1},
   {0,0,1},
   {1,0,2},
   {1,1,2},
   {-1,1,0},
   {-1,0,0},
   {-1,3,0},
   {-1,2,0},
   {0,2,0},
   {1,2,0}};

static struct patval pat949[]={
   {1,-1,1},
   {0,0,1},
   {1,1,2},
   {2,-2,2},
   {2,-1,2},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat950[]={
   {0,1,1},
   {2,1,1},
   {1,2,1},
   {1,1,2},
   {1,-1,2},
   {2,0,2},
   {0,0,2},
   {1,0,0}};

static struct patval pat951[]={
   {0,1,1},
   {2,1,1},
   {1,0,1},
   {1,2,1},
   {1,-1,2},
   {2,0,2},
   {0,0,2},
   {1,1,0}};

static struct patval pat952[]={
   {0,2,1},
   {0,0,2},
   {-1,2,0},
   {-1,0,0},
   {-1,1,0},
   {0,1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat953[]={
   {0,0,1},
   {2,0,2},
   {1,-2,2},
   {2,-1,0},
   {1,0,0},
   {1,-1,0}};

static struct patval pat954[]={
   {0,1,1},
   {0,2,1},
   {1,2,1},
   {0,0,1},
   {1,1,2},
   {2,2,2},
   {2,1,0},
   {1,0,0}};

static struct patval pat955[]={
   {0,0,1},
   {1,1,2},
   {1,0,0}};

static struct patval pat956[]={
   {0,0,1},
   {1,1,2},
   {1,0,0}};

static struct patval pat957[]={
   {0,0,1},
   {1,0,2},
   {0,-1,3},
   {1,-1,0}};

static struct patval pat958[]={
   {0,0,1},
   {1,0,2},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat959[]={
   {0,1,1},
   {0,0,1},
   {1,1,2},
   {1,0,0}};

static struct patval pat960[]={
   {2,1,1},
   {0,0,1},
   {1,1,2},
   {0,2,2},
   {2,2,2},
   {1,2,0},
   {0,1,0}};

static struct patval pat961[]={
   {0,0,1},
   {0,2,2},
   {0,1,0}};

static struct patval pat962[]={
   {0,2,1},
   {0,0,1},
   {2,0,2},
   {2,2,2},
   {1,2,0},
   {1,0,0},
   {2,1,0},
   {0,1,0},
   {1,1,0}};

static struct patval pat963[]={
   {0,2,1},
   {0,0,1},
   {2,0,2},
   {2,2,2},
   {1,2,0},
   {1,0,0},
   {2,1,0},
   {0,1,0},
   {1,1,0}};

static struct patval pat964[]={
   {0,0,1},
   {2,-1,1},
   {2,1,2},
   {1,1,0},
   {1,0,0},
   {2,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat965[]={
   {0,0,1},
   {2,-1,1},
   {1,1,2},
   {1,0,0},
   {1,-1,0},
   {0,-1,0}};

static struct patval pat966[]={
   {2,1,1},
   {0,0,1},
   {0,1,2},
   {2,0,3},
   {1,1,0},
   {1,0,0}};

static struct patval pat967[]={
   {0,1,1},
   {2,1,2},
   {0,0,2},
   {2,0,4},
   {1,1,0},
   {1,0,0}};

static struct patval pat968[]={
   {0,0,1},
   {0,2,1},
   {1,0,2},
   {1,2,2},
   {1,1,0},
   {0,1,0},
   {-1,1,0}};

static struct patval pat969[]={
   {1,1,1},
   {0,2,2},
   {0,0,2},
   {0,1,0},
   {-1,1,0}};

static struct patval pat970[]={
   {0,0,1},
   {3,-2,1},
   {1,-2,2},
   {2,-1,3},
   {2,-2,3},
   {0,-2,4},
   {0,-1,4},
   {1,0,0},
   {1,-1,0}};

static int assist_params971[] = {0,0,10,1};

static struct patval pat971[]={
   {1,0,1},
   {0,1,1},
   {0,0,2},
   {1,1,2},
   {0,2,0},
   {-1,1,0},
   {0,-1,0},
   {-1,0,0},
   {1,2,0},
   {1,3,0},
   {2,1,0},
   {2,2,0}};

static int assist_params972[] = {5,1,5,1};

static struct patval pat972[]={
   {0,0,1},
   {3,-2,1},
   {1,-1,2},
   {4,0,2},
   {1,0,0},
   {2,-2,0},
   {0,1,0},
   {1,1,0},
   {0,-1,0},
   {2,1,0},
   {2,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-1,0},
   {2,0,0}};

static struct patval pat973[]={
   {2,0,1},
   {0,0,2},
   {2,-3,2},
   {0,1,0},
   {0,-1,0},
   {0,-2,0},
   {1,-3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,-2,0},
   {2,-2,0},
   {0,-3,0},
   {2,-1,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat974[]={
   {3,-1,1},
   {2,0,1},
   {2,-1,2},
   {0,0,2},
   {2,-3,2},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,-3,0},
   {2,1,0},
   {2,-2,0},
   {0,-3,0},
   {0,-1,0},
   {0,1,0},
   {3,-3,0},
   {3,-2,0},
   {0,-2,0},
   {3,0,0},
   {3,1,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat975[]={
   {0,0,1},
   {1,0,2},
   {1,1,0},
   {2,-1,0},
   {2,0,0},
   {1,-1,0},
   {2,1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat976[]={
   {0,6,1},
   {0,0,2},
   {1,0,4},
   {1,1,4},
   {1,-1,4},
   {-3,5,0},
   {-3,6,0},
   {-3,4,0},
   {-3,7,0},
   {-3,8,0},
   {-3,9,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,5,0},
   {-2,6,0},
   {-2,7,0},
   {-2,8,0},
   {-2,9,0},
   {-1,1,0},
   {-3,2,0},
   {-3,3,0},
   {-1,2,0},
   {-3,-1,0},
   {-1,4,0},
   {-1,5,0},
   {-1,6,0},
   {-1,7,0},
   {-1,8,0},
   {-1,9,0},
   {0,-1,0},
   {-3,1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {-3,0,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,3,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,8,0},
   {1,9,0}};

static struct patval pat977[]={
   {0,0,1},
   {1,-4,4},
   {1,-3,4},
   {1,-5,4},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,3,0},
   {-2,-5,0},
   {-3,-1,0},
   {-2,-4,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-3,-3,0},
   {-3,-2,0},
   {-1,-3,0},
   {-3,-5,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-3,-4,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-1,-5,0},
   {-1,-4,0},
   {-1,-2,0},
   {1,-2,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat978[]={
   {0,0,1},
   {1,-3,4},
   {1,-4,4},
   {1,-5,4},
   {1,-6,4},
   {-1,-6,4},
   {-2,-3,0},
   {-3,1,0},
   {-3,2,0},
   {-3,3,0},
   {-2,-6,0},
   {-2,-5,0},
   {-3,-1,0},
   {-3,0,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,-4,0},
   {-3,-3,0},
   {-3,-2,0},
   {-3,-6,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-6,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-3,-5,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-3,-4,0},
   {-1,-4,0},
   {-1,-5,0},
   {-1,-3,0},
   {1,-2,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat979[]={
   {0,0,1},
   {-3,-3,0},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,-4,0},
   {-3,3,0},
   {-2,-5,0},
   {-2,-4,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-5,0},
   {-1,-4,0},
   {-1,-3,0},
   {-1,-2,0},
   {-3,-5,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat980[]={
   {0,0,1},
   {-3,-3,0},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,-4,0},
   {-3,3,0},
   {-2,-5,0},
   {-2,-4,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-5,0},
   {-1,-4,0},
   {-1,-3,0},
   {-1,-2,0},
   {-3,-5,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0}};

static struct patval pat981[]={
   {0,0,1},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,-2,0},
   {-3,2,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-3,-3,0},
   {-1,2,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,1,0},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0}};

static int assist_params982[] = {0,0,10,1};

static struct patval pat982[]={
   {0,0,1},
   {-1,-1,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {1,1,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-1,-3,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat983[]={
   {0,0,1},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-3,0},
   {-2,-2,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {-2,-3,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat984[]={
   {0,0,1},
   {6,0,4},
   {6,-1,4},
   {-2,1,0},
   {-2,2,0},
   {-1,-3,0},
   {-2,0,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-2,-2,0},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-1,0},
   {-2,-1,0},
   {-2,-3,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {6,-3,0},
   {6,-2,0},
   {2,-2,0},
   {2,0,0},
   {6,1,0},
   {6,2,0}};

static struct patval pat985[]={
   {0,0,1},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-3,0},
   {-2,-2,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {-2,-3,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat986[]={
   {0,0,1},
   {6,0,4},
   {6,-1,4},
   {-2,1,0},
   {-2,2,0},
   {-1,-3,0},
   {-2,0,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-2,-2,0},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-1,0},
   {-2,-1,0},
   {-2,-3,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {6,-3,0},
   {6,-2,0},
   {2,-2,0},
   {2,0,0},
   {6,1,0},
   {6,2,0}};

static int assist_params987[] = {10,1,0,0};

static struct patval pat987[]={
   {0,0,1},
   {-4,0,0},
   {-4,1,0},
   {-4,2,0},
   {-4,3,0},
   {-4,-1,0},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,3,0},
   {-2,-2,0},
   {-4,-2,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-2,0},
   {0,-1,0},
   {-2,-1,0},
   {1,-2,0}};

static struct patval pat988[]={
   {0,0,1},
   {-4,0,0},
   {-4,1,0},
   {-4,2,0},
   {-4,3,0},
   {-4,4,0},
   {-4,-1,0},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,3,0},
   {-3,4,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-4,-2,0},
   {-2,4,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-2,0},
   {0,-1,0},
   {-2,3,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,-2,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static struct patval pat989[]={
   {0,0,1},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,-3,0},
   {-3,1,0},
   {-2,-4,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-1,-4,0},
   {-1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-3,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {0,-4,0},
   {0,1,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0}};

static struct patval pat990[]={
   {0,0,1},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,-3,0},
   {-3,2,0},
   {-2,-4,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-4,0},
   {-1,-3,0},
   {-3,-4,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0}};

static struct patval pat991[]={
   {0,0,1},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-2,0},
   {-2,-1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-2,0},
   {0,-1,0},
   {1,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-2,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat992[]={
   {0,0,2},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-1,-4,0},
   {-1,-3,0},
   {-2,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {1,-4,0},
   {0,1,0},
   {-2,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat993[]={
   {0,0,2},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-1,-2,0},
   {-2,-1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-2,0},
   {0,-1,0},
   {1,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-2,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat994[]={
   {0,0,2},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-1,-2,0},
   {-2,-1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-2,0},
   {0,-1,0},
   {1,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-2,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat995[]={
   {0,0,2},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,-3,0},
   {-3,2,0},
   {-2,-4,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-4,0},
   {-1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-3,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {0,-4,0},
   {0,1,0},
   {0,2,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat996[]={
   {0,0,2},
   {0,2,2},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {-1,2,0},
   {0,1,0},
   {-1,1,0},
   {1,3,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-1,0,0},
   {1,4,0},
   {1,5,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static int assist_params997[] = {10,0,0,0};

static struct patval pat997[]={
   {1,-2,2},
   {0,0,2},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-2,0},
   {-2,0,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-2,0},
   {0,-1,0},
   {-2,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-2,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat998[]={
   {0,0,1},
   {3,-3,2},
   {2,-1,2},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {0,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-3,0},
   {2,-2,0},
   {3,-2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {0,-3,0},
   {0,-1,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0}};

static int assist_params999[] = {10,1,0,0};

static struct patval pat999[]={
   {0,0,2},
   {0,1,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,3,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-3,-3,0},
   {-3,-2,0},
   {0,2,0},
   {0,3,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static int assist_params1000[] = {5,1,0,0};

static struct patval pat1000[]={
   {0,0,2},
   {0,6,2},
   {-1,2,0},
   {-1,-1,0},
   {-1,4,0},
   {0,-3,0},
   {-1,-2,0},
   {-1,3,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {1,4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {-1,-3,0},
   {1,5,0},
   {1,6,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0}};

static struct patval pat1001[]={
   {0,0,2},
   {2,0,2},
   {0,2,0},
   {0,3,0},
   {0,1,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {1,9,0},
   {2,-1,0},
   {2,4,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {0,-1,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {2,9,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {3,7,0},
   {3,8,0},
   {3,9,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0},
   {4,6,0},
   {4,7,0},
   {4,8,0},
   {4,9,0}};

static struct patval pat1002[]={
   {2,1,2},
   {0,0,2},
   {0,3,0},
   {0,4,0},
   {0,2,0},
   {0,1,0},
   {0,5,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {0,10,0},
   {0,6,0},
   {1,1,0},
   {1,0,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {1,9,0},
   {1,10,0},
   {2,0,0},
   {1,2,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {2,9,0},
   {2,10,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {3,7,0},
   {3,8,0},
   {3,9,0},
   {3,10,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0},
   {4,6,0},
   {4,7,0},
   {4,8,0},
   {4,9,0},
   {4,10,0}};

static struct patval pat1003[]={
   {0,2,2},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,2,0},
   {0,1,0},
   {3,-2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {-1,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0}};

static struct patval pat1004[]={
   {0,0,2},
   {1,-2,2},
   {0,-1,0},
   {0,-2,0},
   {1,-4,0},
   {1,-3,0},
   {0,-3,0},
   {4,-4,0},
   {1,-1,0},
   {1,0,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {0,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {5,-4,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {6,-4,0},
   {6,-3,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {7,-4,0},
   {7,-3,0},
   {7,-2,0},
   {7,-1,0},
   {7,0,0},
   {8,-2,0}};

static struct patval pat1005[]={
   {8,-2,1},
   {0,0,2},
   {1,-2,2},
   {0,-1,0},
   {0,-2,0},
   {1,-3,0},
   {0,-3,0},
   {1,-4,0},
   {1,-1,0},
   {1,0,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {4,-4,0},
   {4,-3,0},
   {0,-4,0},
   {4,-1,0},
   {4,0,0},
   {5,-4,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {6,-4,0},
   {6,-3,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {7,-4,0},
   {7,-3,0},
   {7,-2,0},
   {7,-1,0},
   {7,0,0},
   {8,-4,0},
   {8,-3,0},
   {4,-2,0},
   {8,-1,0},
   {8,0,0}};

static struct patval pat1006[]={
   {0,0,2},
   {0,2,2},
   {-1,3,0},
   {-1,4,0},
   {-1,2,0},
   {-1,1,0},
   {-1,5,0},
   {-1,7,0},
   {-1,8,0},
   {-1,9,0},
   {-1,10,0},
   {-1,6,0},
   {0,1,0},
   {1,5,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {0,10,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {-1,0,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {1,9,0},
   {1,10,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {2,9,0},
   {2,10,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {3,7,0},
   {3,8,0},
   {3,9,0},
   {3,10,0}};

static struct patval pat1007[]={
   {0,0,2},
   {1,2,2},
   {-1,3,0},
   {-1,4,0},
   {-1,2,0},
   {-1,1,0},
   {-1,5,0},
   {-1,7,0},
   {-1,8,0},
   {-1,9,0},
   {-1,10,0},
   {-1,6,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {0,10,0},
   {1,0,0},
   {1,1,0},
   {1,5,0},
   {1,3,0},
   {1,4,0},
   {-1,0,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {1,9,0},
   {1,10,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {2,9,0},
   {2,10,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {3,7,0},
   {3,8,0},
   {3,9,0},
   {3,10,0}};

static struct patval pat1008[]={
   {7,0,2},
   {0,2,2},
   {0,0,2},
   {-1,1,0},
   {-1,0,0},
   {0,-1,0},
   {-1,-1,0},
   {-1,2,0},
   {0,1,0},
   {0,-2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {-1,-2,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {7,-2,0},
   {7,-1,0},
   {3,0,0},
   {7,1,0},
   {7,2,0}};

static struct patval pat1009[]={
   {0,0,2},
   {0,12,2},
   {-2,0,0},
   {-2,1,0},
   {-2,-1,0},
   {-2,-2,0},
   {-2,2,0},
   {-2,4,0},
   {-2,5,0},
   {-2,6,0},
   {-2,3,0},
   {-2,8,0},
   {-2,9,0},
   {-2,7,0},
   {-2,11,0},
   {-2,12,0},
   {-2,13,0},
   {-2,14,0},
   {-2,15,0},
   {-1,-3,0},
   {-2,10,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,-2,0},
   {-1,5,0},
   {-1,6,0},
   {-1,7,0},
   {-1,8,0},
   {-1,9,0},
   {-1,10,0},
   {-1,11,0},
   {-1,12,0},
   {-1,13,0},
   {-1,14,0},
   {-1,15,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,4,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {0,10,0},
   {0,11,0},
   {1,-3,0},
   {0,13,0},
   {0,14,0},
   {0,15,0},
   {-2,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {1,9,0},
   {1,10,0},
   {1,11,0},
   {1,12,0},
   {1,13,0},
   {1,14,0},
   {1,15,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {2,9,0},
   {2,10,0},
   {2,11,0},
   {2,12,0},
   {2,13,0},
   {2,14,0},
   {2,15,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {3,7,0},
   {3,8,0},
   {3,9,0},
   {3,10,0},
   {3,11,0},
   {3,12,0},
   {3,13,0},
   {3,14,0},
   {3,15,0}};

static struct patval pat1010[]={
   {7,0,1},
   {0,0,2},
   {5,0,2},
   {0,1,0},
   {1,-1,0},
   {0,-1,0},
   {1,-2,0},
   {1,1,0},
   {1,2,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {2,2,0},
   {4,-2,0},
   {0,-2,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-2,0},
   {5,-1,0},
   {3,2,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {7,-2,0},
   {7,-1,0},
   {4,-1,0},
   {7,1,0},
   {7,2,0}};

static struct patval pat1011[]={
   {0,0,2},
   {5,0,2},
   {0,1,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {0,-2,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,-2,0},
   {5,-1,0},
   {3,1,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {6,3,0}};

static int assist_params1012[] = {20,1};

static struct patval pat1012[]={
   {5,2,2},
   {5,0,2},
   {0,0,2},
   {0,2,2},
   {1,1,0},
   {0,3,0},
   {0,4,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0},
   {2,2,0},
   {2,4,0},
   {0,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {5,-2,0},
   {5,-1,0},
   {2,3,0},
   {5,1,0},
   {3,-2,0},
   {5,3,0},
   {5,4,0}};

static struct patval pat1013[]={
   {5,2,1},
   {5,0,1},
   {0,0,1},
   {1,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,0,0},
   {2,2,0},
   {2,4,0},
   {0,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {5,-2,0},
   {5,-1,0},
   {2,3,0},
   {5,1,0},
   {3,-2,0},
   {5,3,0},
   {5,4,0}};

static int assist_params1014[] = {15,1};

static struct patval pat1014[]={
   {0,2,1},
   {0,0,2},
   {-2,-1,0},
   {-2,-2,0},
   {-2,1,0},
   {-1,-4,0},
   {-1,-3,0},
   {-2,-3,0},
   {-2,0,0},
   {-1,-2,0},
   {-1,0,0},
   {-1,1,0},
   {-2,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {0,1,0},
   {0,-4,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0}};

static int assist_params1015[] = {15,2};

static struct patval pat1015[]={
   {0,0,2},
   {-1,5,3},
   {0,5,3},
   {1,5,3},
   {-2,4,0},
   {-2,3,0},
   {-2,6,0},
   {-2,2,0},
   {-2,5,0},
   {-1,0,0},
   {-1,1,0},
   {-1,-1,0},
   {-1,3,0},
   {-1,4,0},
   {-2,-1,0},
   {-1,2,0},
   {-2,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-2,1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {0,-1,0}};

static struct patval pat1016[]={
   {0,0,2},
   {1,0,2},
   {-2,-2,0},
   {-2,-1,0},
   {-2,-3,0},
   {-2,-4,0},
   {-2,0,0},
   {-1,-5,0},
   {-1,-4,0},
   {-1,-3,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,-2,0},
   {-2,-5,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,1,0},
   {1,-6,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-6,0}};

static struct patval pat1017[]={
   {0,0,2},
   {1,0,2},
   {-2,-2,0},
   {-2,-1,0},
   {-2,-3,0},
   {-2,-4,0},
   {-2,0,0},
   {-1,-5,0},
   {-1,-4,0},
   {-1,-3,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,-2,0},
   {-2,-5,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,1,0},
   {1,-6,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-6,0}};

static struct patval pat1018[]={
   {1,6,2},
   {0,6,2},
   {0,0,2},
   {-2,4,0},
   {-2,3,0},
   {-2,6,0},
   {-2,2,0},
   {-2,1,0},
   {-2,5,0},
   {-1,1,0},
   {-1,2,0},
   {-2,7,0},
   {-1,4,0},
   {-1,5,0},
   {-1,0,0},
   {-2,0,0},
   {-1,3,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {-1,6,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {-1,7,0}};

static struct patval pat1019[]={
   {1,-6,2},
   {0,0,2},
   {1,0,2},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,-3,0},
   {-1,-6,0},
   {-1,-5,0},
   {-1,-4,0},
   {-2,-5,0},
   {-2,-4,0},
   {-1,-1,0},
   {-1,-2,0},
   {-2,-6,0},
   {0,-6,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-3,0},
   {-1,0,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,1,0}};

static int assist_params1020[] = {7,1,0,0};

static struct patval pat1020[]={
   {0,0,2},
   {-2,-1,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-1,0},
   {-2,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static int assist_params1021[] = {5,1,0,0};

static struct patval pat1021[]={
   {0,0,2},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {0,-1,0},
   {-1,0,0},
   {1,-1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {-1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0}};

static struct patval pat1022[]={
   {0,0,2},
   {-2,1,0},
   {-2,2,0},
   {-2,0,0},
   {-2,3,0},
   {-2,4,0},
   {-2,5,0},
   {-2,6,0},
   {-2,7,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {-1,6,0},
   {-1,7,0},
   {0,-1,0},
   {0,2,0},
   {0,1,0},
   {-2,-1,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0}};

static int assist_params1023[] = {10,1,0,0};

static struct patval pat1023[]={
   {0,0,2},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {2,-2,0},
   {0,1,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {-1,-3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {5,-3,0},
   {5,-2,0}};

static int assist_params1024[] = {5,1,0,0};

static struct patval pat1024[]={
   {0,0,2},
   {0,6,2},
   {-1,4,0},
   {-1,3,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {1,5,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {-1,2,0},
   {1,6,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0}};

static struct patval pat1025[]={
   {1,-5,1},
   {0,0,2},
   {-2,-2,0},
   {-2,-3,0},
   {-2,-4,0},
   {-2,-1,0},
   {-2,1,0},
   {-1,-5,0},
   {-1,-4,0},
   {-2,0,0},
   {-1,-3,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-2,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {0,1,0},
   {0,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0}};

static int assist_params1026[] = {5,0,0,0};

static struct patval pat1026[]={
   {0,0,1},
   {0,5,2},
   {-2,3,0},
   {-2,4,0},
   {-2,2,0},
   {-2,5,0},
   {-2,6,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {-1,6,0},
   {-2,1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-2,0,0},
   {0,6,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0}};

static int assist_params1027[] = {10,2,0,0};

static struct patval pat1027[]={
   {0,5,1},
   {0,0,2},
   {-2,2,0},
   {-2,1,0},
   {-2,4,0},
   {-2,0,0},
   {-2,3,0},
   {-1,0,0},
   {-1,1,0},
   {-1,-1,0},
   {-1,3,0},
   {-1,4,0},
   {-2,-1,0},
   {-1,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0}};

static int assist_params1028[] = {10,1,0,0};

static struct patval pat1028[]={
   {1,-6,1},
   {0,0,2},
   {1,1,2},
   {0,-2,0},
   {0,-1,0},
   {0,-3,0},
   {0,-4,0},
   {0,-5,0},
   {0,1,0},
   {1,-5,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {2,-6,0},
   {0,-6,0},
   {2,-5,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-6,0},
   {3,-5,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static int assist_params1029[] = {5,1,0,0};

static struct patval pat1029[]={
   {1,5,1},
   {0,0,2},
   {-1,2,0},
   {-1,3,0},
   {-1,1,0},
   {-1,5,0},
   {0,-1,0},
   {-1,0,0},
   {-1,4,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {-1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0}};

static int assist_params1030[] = {10,1,0,0};

static struct patval pat1030[]={
   {0,5,1},
   {0,0,2},
   {1,5,3},
   {1,0,4},
   {1,2,0},
   {-1,5,0},
   {-1,3,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-1,2,0},
   {-1,0,0},
   {1,1,0},
   {-1,4,0},
   {1,3,0},
   {1,4,0},
   {-1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0}};

static struct patval pat1031[]={
   {2,1,1},
   {2,0,1},
   {0,0,2},
   {1,1,2},
   {0,3,0},
   {0,2,0},
   {0,1,0},
   {1,-1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {1,0,0},
   {3,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {0,-1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {6,3,0}};

static int assist_params1032[] = {0,0,20,2};

static struct patval pat1032[]={
   {0,2,1},
   {0,0,2},
   {-1,3,0},
   {-1,2,0},
   {-1,5,0},
   {-1,6,0},
   {-1,1,0},
   {-1,4,0},
   {0,1,0},
   {1,0,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0}};

static struct patval pat1033[]={
   {0,0,1},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,1,0},
   {-1,5,0},
   {-1,6,0},
   {-1,7,0},
   {-1,8,0},
   {-1,9,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {0,8,0},
   {0,9,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {1,9,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {2,9,0}};

static struct patval pat1034[]={
   {0,0,1},
   {0,8,1},
   {0,3,0},
   {0,2,0},
   {0,5,0},
   {0,6,0},
   {0,7,0},
   {0,1,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {3,7,0},
   {3,8,0}};

static struct patval pat1035[]={
   {1,5,1},
   {0,0,1},
   {-1,3,0},
   {-1,2,0},
   {0,-1,0},
   {-1,1,0},
   {-1,4,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-1,0,0},
   {1,4,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat1036[]={
   {1,6,1},
   {0,0,1},
   {-1,3,0},
   {-1,4,0},
   {-1,2,0},
   {0,-1,0},
   {-1,1,0},
   {-1,5,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {0,6,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {-1,0,0},
   {1,5,0},
   {1,4,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0}};

static struct patval pat1037[]={
   {0,0,1},
   {1,0,2},
   {-2,2,0},
   {-2,3,0},
   {-2,1,0},
   {-1,0,0},
   {-1,1,0},
   {-2,0,0},
   {-1,-1,0},
   {-1,3,0},
   {0,-1,0},
   {-1,2,0},
   {-2,-1,0},
   {0,2,0},
   {0,3,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1038[]={
   {0,2,1},
   {0,0,2},
   {0,1,0},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,3,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-3,-3,0},
   {-3,-1,0},
   {-3,-2,0},
   {0,3,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1039[]={
   {0,3,1},
   {0,0,2},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-3,-1,0},
   {-3,-2,0},
   {-3,3,0},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-3,4,0},
   {-2,3,0},
   {-2,2,0},
   {-1,-3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-3,0},
   {0,-2,0},
   {-3,-3,0},
   {-2,4,0},
   {0,1,0},
   {0,2,0},
   {0,-1,0},
   {0,4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1040[]={
   {0,0,1},
   {1,-3,2},
   {-2,-3,0},
   {-2,-2,0},
   {-2,-4,0},
   {-2,-5,0},
   {-2,-1,0},
   {-2,1,0},
   {-1,-6,0},
   {-1,-5,0},
   {-1,-4,0},
   {-2,0,0},
   {-1,-2,0},
   {-1,-3,0},
   {-1,0,0},
   {-1,1,0},
   {0,-6,0},
   {0,-5,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-1,0},
   {0,1,0},
   {1,-6,0},
   {1,-5,0},
   {-2,-6,0},
   {1,-4,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {2,-6,0},
   {2,-5,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {3,-6,0},
   {3,-5,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {4,-6,0},
   {4,-5,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0}};

static struct patval pat1041[]={
   {0,0,1},
   {1,2,1},
   {2,0,2},
   {4,0,2},
   {-1,0,0},
   {0,-3,0},
   {-1,-1,0},
   {-1,-2,0},
   {-1,1,0},
   {-1,2,0},
   {0,-2,0},
   {0,2,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {-1,-3,0},
   {0,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {1,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {1,1,0},
   {4,1,0}};

static struct patval pat1042[]={
   {2,-1,1},
   {0,0,2},
   {3,-3,2},
   {-1,0,0},
   {-1,1,0},
   {-1,-1,0},
   {0,-4,0},
   {-1,-2,0},
   {-1,2,0},
   {0,-2,0},
   {0,-1,0},
   {0,-3,0},
   {0,1,0},
   {0,2,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {-1,-4,0},
   {-1,-3,0},
   {2,1,0},
   {2,2,0},
   {3,-4,0},
   {2,0,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-4,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0}};

static struct patval pat1043[]={
   {0,0,1},
   {1,1,2},
   {-2,1,0},
   {-2,2,0},
   {-2,0,0},
   {-1,-2,0},
   {-2,-1,0},
   {-2,3,0},
   {-1,0,0},
   {-1,1,0},
   {-1,-1,0},
   {-1,3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-2,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,-2,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1044[]={
   {1,-2,1},
   {0,0,1},
   {2,-1,2},
   {2,1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {1,-4,0},
   {1,-3,0},
   {0,-3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {0,-4,0},
   {2,0,0},
   {0,-1,0},
   {2,2,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat1045[]={
   {1,-1,1},
   {0,0,1},
   {1,2,2},
   {2,0,2},
   {0,4,0},
   {0,3,0},
   {0,6,0},
   {0,2,0},
   {0,5,0},
   {0,1,0},
   {1,1,0},
   {1,0,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {0,-1,0},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0}};

static int assist_params1046[] = {5,1,0,0};

static struct patval pat1046[]={
   {1,-2,1},
   {0,0,1},
   {-2,-1,0},
   {-2,0,0},
   {-2,-2,0},
   {-1,-4,0},
   {-1,-3,0},
   {-2,-3,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,-2,0},
   {-1,1,0},
   {0,-4,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {0,1,0},
   {1,-4,0},
   {1,-3,0},
   {1,-1,0},
   {-2,-4,0},
   {1,0,0},
   {1,1,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat1047[]={
   {1,1,1},
   {0,0,2},
   {1,0,3},
   {-1,3,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-2,-1,0},
   {-2,1,0},
   {0,-2,0},
   {0,-1,0},
   {-2,0,0},
   {-2,-2,0},
   {0,2,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {-1,2,0},
   {0,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1048[]={
   {0,0,1},
   {0,2,2},
   {-2,1,0},
   {-2,0,0},
   {-2,3,0},
   {-2,4,0},
   {-1,-2,0},
   {-2,-1,0},
   {-2,2,0},
   {-1,-1,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {0,1,0},
   {1,-2,0},
   {0,3,0},
   {0,4,0},
   {-2,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static int assist_params1049[] = {5,1,0,0};

static struct patval pat1049[]={
   {2,-1,1},
   {0,0,1},
   {2,1,2},
   {3,3,2},
   {-1,3,0},
   {-1,4,0},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {-1,2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-2,0},
   {-1,-1,0},
   {2,0,0},
   {-1,-2,0},
   {2,2,0},
   {-1,1,0},
   {2,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {2,3,0},
   {3,4,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {5,4,0}};

static struct patval pat1050[]={
   {2,-1,1},
   {0,0,2},
   {-2,0,0},
   {-2,-1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,-2,0},
   {-2,1,0},
   {-1,-3,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-3,0},
   {-1,-2,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-2,-3,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-3,0},
   {2,-2,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0}};

static struct patval pat1051[]={
   {2,-1,1},
   {0,0,2},
   {-2,0,0},
   {-2,-1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,-2,0},
   {-2,1,0},
   {-1,-3,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-3,0},
   {-1,-2,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-2,-3,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-3,0},
   {2,-2,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0}};

static struct patval pat1052[]={
   {2,-1,1},
   {0,0,2},
   {-2,0,0},
   {-2,-1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,-2,0},
   {-2,1,0},
   {-1,-3,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,-3,0},
   {-1,-2,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-2,-3,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-3,0},
   {2,-2,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0}};

static struct patval pat1053[]={
   {2,-1,1},
   {0,0,2},
   {7,0,4},
   {7,-1,4},
   {-2,2,0},
   {-2,3,0},
   {-1,-3,0},
   {-1,-2,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-3,0},
   {0,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-3,0},
   {2,-2,0},
   {-2,-2,0},
   {2,0,0},
   {0,-1,0},
   {2,1,0},
   {2,3,0},
   {-2,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {6,-3,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {6,3,0},
   {7,-3,0},
   {7,-2,0},
   {2,2,0},
   {3,-3,0},
   {7,1,0},
   {7,2,0},
   {7,3,0}};

static int assist_params1054[] = {10,2,0,0};

static struct patval pat1054[]={
   {0,0,1},
   {1,2,2},
   {2,0,2},
   {0,1,0},
   {0,-1,0},
   {1,-3,0},
   {0,-2,0},
   {0,2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,-2,0},
   {0,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,-3,0},
   {2,1,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat1055[]={
   {0,0,1},
   {1,3,1},
   {0,2,1},
   {0,3,2},
   {1,2,2},
   {-1,3,0},
   {-1,4,0},
   {-1,0,0},
   {-1,1,0},
   {0,-2,0},
   {0,-1,0},
   {-1,2,0},
   {0,-3,0},
   {-1,-1,0},
   {-1,5,0},
   {-1,-2,0},
   {0,4,0},
   {0,5,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-1,-3,0},
   {0,1,0},
   {1,1,0},
   {1,4,0},
   {1,5,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0}};

static struct patval pat1056[]={
   {1,1,1},
   {2,3,1},
   {1,2,1},
   {0,0,1},
   {1,0,2},
   {2,2,2},
   {2,0,2},
   {2,1,2},
   {-1,0,3},
   {1,3,3},
   {1,4,3},
   {0,1,3},
   {-1,1,3},
   {0,-1,0},
   {1,-1,0},
   {2,-1,0},
   {2,5,0},
   {2,4,0},
   {-1,-1,0},
   {2,6,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0},
   {4,6,0}};

static struct patval pat1057[]={
   {3,0,1},
   {0,0,1},
   {2,1,1},
   {4,0,1},
   {4,1,2},
   {3,1,2},
   {3,3,2},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {1,1,0},
   {1,0,0},
   {1,-2,0},
   {1,-1,0},
   {2,3,0},
   {3,-2,0},
   {0,-2,0},
   {0,-1,0},
   {0,1,0},
   {3,2,0},
   {2,2,0},
   {4,-2,0},
   {4,-1,0},
   {2,0,0},
   {3,-1,0},
   {4,2,0},
   {4,3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0}};

static struct patval pat1058[]={
   {2,1,1},
   {0,0,1},
   {4,0,1},
   {3,0,1},
   {5,1,1},
   {4,2,2},
   {3,1,2},
   {4,1,2},
   {3,3,2},
   {0,-1,3},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {1,3,0},
   {2,2,0},
   {2,-2,0},
   {1,0,0},
   {0,-2,0},
   {1,-2,0},
   {1,1,0},
   {3,2,0},
   {1,-1,0},
   {4,-2,0},
   {4,-1,0},
   {0,1,0},
   {3,-2,0},
   {2,3,0},
   {4,3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {3,-1,0},
   {5,2,0},
   {5,3,0}};

static struct patval pat1059[]={
   {1,1,1},
   {0,2,1},
   {1,2,2},
   {0,0,2},
   {0,-1,4},
   {1,-1,4},
   {-1,1,0},
   {-1,3,0},
   {0,3,0},
   {-1,0,0},
   {1,0,0},
   {-1,2,0},
   {0,1,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static int assist_params1060[] = {0,0,5,1};

static struct patval pat1060[]={
   {0,0,1},
   {1,0,2},
   {-2,2,0},
   {-2,1,0},
   {-1,0,0},
   {-2,0,0},
   {-1,-1,0},
   {-1,2,0},
   {0,-1,0},
   {-1,1,0},
   {-2,-1,0},
   {0,2,0},
   {1,-1,0},
   {0,1,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat1061[]={
   {0,2,1},
   {0,3,2},
   {0,0,2},
   {-2,4,0},
   {-1,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,3,0},
   {-1,4,0},
   {-2,3,0},
   {-1,2,0},
   {-2,0,0},
   {-1,1,0},
   {0,1,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1062[]={
   {1,1,1},
   {0,2,1},
   {1,3,1},
   {0,1,2},
   {0,0,2},
   {1,2,2},
   {-1,2,0},
   {0,-1,0},
   {-1,1,0},
   {-1,3,0},
   {-1,-1,0},
   {1,0,0},
   {-1,0,0},
   {0,3,0},
   {1,-1,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1063[]={
   {3,2,1},
   {0,0,1},
   {3,0,1},
   {2,1,1},
   {2,0,2},
   {2,-1,2},
   {3,1,2},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {1,0,0},
   {0,-2,0},
   {1,-1,0},
   {0,2,0},
   {2,2,0},
   {1,-2,0},
   {3,-1,0},
   {0,1,0},
   {3,-2,0},
   {0,-1,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat1064[]={
   {2,-1,1},
   {3,0,1},
   {1,0,1},
   {2,1,1},
   {0,0,2},
   {1,-1,2},
   {1,-2,2},
   {0,1,0},
   {1,1,0},
   {0,-1,0},
   {0,-3,0},
   {2,-2,0},
   {0,-2,0},
   {2,0,0},
   {1,-3,0},
   {1,2,0},
   {2,2,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {2,-3,0},
   {3,1,0}};

static int assist_params1065[] = {10,1,0,0};

static struct patval pat1065[]={
   {0,5,1},
   {0,3,2},
   {0,0,2},
   {0,7,4},
   {1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {-1,6,0},
   {0,-1,0},
   {-1,-1,0},
   {0,1,0},
   {0,2,0},
   {-2,6,0},
   {0,4,0},
   {-2,5,0},
   {0,6,0},
   {-2,4,0},
   {1,-1,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0}};

static struct patval pat1066[]={
   {2,-2,1},
   {0,0,1},
   {1,0,1},
   {1,-2,1},
   {1,1,2},
   {2,0,2},
   {2,-1,2},
   {0,3,0},
   {0,2,0},
   {0,4,0},
   {1,3,0},
   {0,5,0},
   {1,5,0},
   {0,1,0},
   {1,-1,0},
   {1,2,0},
   {1,4,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0}};

static struct patval pat1067[]={
   {1,2,1},
   {0,3,1},
   {0,2,2},
   {0,0,2},
   {1,4,3},
   {0,1,0},
   {-1,2,0},
   {-1,3,0},
   {1,0,0},
   {1,1,0},
   {-1,0,0},
   {-1,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1068[]={
   {4,-1,1},
   {0,0,1},
   {4,2,4},
   {4,3,4},
   {3,3,4},
   {3,2,4},
   {0,3,4},
   {4,1,4},
   {1,3,4},
   {2,3,4},
   {2,2,4},
   {1,2,4},
   {3,1,4},
   {1,0,0},
   {0,2,0},
   {1,1,0},
   {1,-1,0},
   {1,-2,0},
   {0,1,0},
   {2,-3,0},
   {1,-3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {0,-1,0},
   {2,-2,0},
   {2,1,0},
   {4,-3,0},
   {4,-2,0},
   {0,-2,0},
   {4,0,0},
   {2,-1,0},
   {0,-3,0},
   {2,0,0}};

static struct patval pat1069[]={
   {0,0,1},
   {4,0,1},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,-1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {2,1,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1070[]={
   {0,0,1},
   {5,0,1},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {0,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,-2,0},
   {5,-1,0},
   {3,-2,0},
   {5,1,0},
   {5,2,0},
   {5,3,0}};

static struct patval pat1071[]={
   {0,0,1},
   {3,0,2},
   {-2,1,0},
   {-2,2,0},
   {-1,-2,0},
   {-2,0,0},
   {-2,-1,0},
   {-1,-1,0},
   {-1,1,0},
   {-1,2,0},
   {0,-2,0},
   {0,-1,0},
   {-1,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-2,-2,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {1,1,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat1072[]={
   {3,0,1},
   {0,0,1},
   {3,-2,1},
   {2,-1,1},
   {2,0,2},
   {2,1,2},
   {3,-1,2},
   {2,-2,0},
   {1,-2,0},
   {0,-2,0},
   {1,1,0},
   {1,-1,0},
   {1,0,0},
   {0,1,0},
   {0,-1,0},
   {3,1,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0}};

static struct patval pat1073[]={
   {1,1,1},
   {0,0,1},
   {1,0,2},
   {0,2,2},
   {0,-1,0},
   {-1,1,0},
   {0,1,0},
   {-1,3,0},
   {0,3,0},
   {1,-1,0},
   {-1,2,0},
   {1,2,0},
   {-1,-1,0},
   {-1,0,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1074[]={
   {0,0,1},
   {0,1,1},
   {1,2,1},
   {1,0,1},
   {0,3,2},
   {0,2,2},
   {2,1,2},
   {1,-1,2},
   {1,1,2},
   {1,-2,4},
   {0,4,4},
   {2,-2,4},
   {1,4,4},
   {0,-1,4},
   {3,-2,4},
   {2,4,4},
   {3,4,4},
   {2,3,0},
   {2,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,-1,0}};

static struct patval pat1075[]={
   {1,-1,1},
   {1,1,1},
   {0,0,1},
   {2,-1,1},
   {0,1,2},
   {2,0,2},
   {0,2,2},
   {1,-2,2},
   {1,0,2},
   {0,-2,4},
   {1,-3,4},
   {0,3,4},
   {2,-3,4},
   {1,3,4},
   {3,-3,4},
   {2,3,4},
   {3,3,4},
   {2,1,0},
   {2,2,0},
   {0,-1,0},
   {1,2,0},
   {2,-2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {-1,0,0}};

static struct patval pat1076[]={
   {0,0,1},
   {1,3,1},
   {0,2,1},
   {1,1,1},
   {2,2,2},
   {1,2,2},
   {1,0,2},
   {0,4,2},
   {0,3,2},
   {1,-1,4},
   {0,5,4},
   {2,-1,4},
   {1,5,4},
   {3,-1,4},
   {2,5,4},
   {3,5,4},
   {2,3,0},
   {2,4,0},
   {0,1,0},
   {2,1,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {1,4,0}};

static int assist_params1077[] = {0,0,10,1};

static struct patval pat1077[]={
   {1,2,1},
   {0,3,1},
   {0,2,2},
   {0,0,2},
   {1,4,3},
   {0,1,0},
   {-1,2,0},
   {-1,3,0},
   {1,0,0},
   {1,1,0},
   {-1,0,0},
   {-1,1,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1078[]={
   {2,0,1},
   {3,1,1},
   {0,0,1},
   {3,-1,1},
   {3,0,2},
   {2,-1,2},
   {2,-2,2},
   {2,2,2},
   {0,-3,4},
   {0,-2,4},
   {1,-1,0},
   {0,-1,0},
   {1,1,0},
   {1,0,0},
   {1,-2,0},
   {3,-2,0},
   {0,1,0},
   {1,2,0},
   {2,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat1079[]={
   {2,0,1},
   {2,1,1},
   {0,0,1},
   {3,1,1},
   {3,-1,1},
   {3,0,2},
   {1,0,2},
   {2,2,2},
   {2,-1,2},
   {2,-2,2},
   {0,-2,4},
   {0,-3,4},
   {0,1,0},
   {0,-1,0},
   {1,1,0},
   {3,-2,0},
   {1,-1,0},
   {1,-2,0},
   {1,2,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat1080[]={
   {0,1,1},
   {0,0,1},
   {1,1,2},
   {1,0,0},
   {0,2,0},
   {1,2,0},
   {1,3,0},
   {2,0,0},
   {2,1,0},
   {0,3,0},
   {2,2,0},
   {2,3,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1081[]={
   {0,1,1},
   {0,2,1},
   {0,0,1},
   {1,1,2},
   {1,2,2},
   {0,3,0},
   {1,0,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {0,4,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0}};

static struct patval pat1082[]={
   {0,1,1},
   {0,2,1},
   {0,3,1},
   {0,0,1},
   {1,1,2},
   {1,2,2},
   {1,3,2},
   {0,4,0},
   {1,0,0},
   {1,4,0},
   {0,5,0},
   {1,5,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0}};

static struct patval pat1083[]={
   {0,2,1},
   {0,0,1},
   {1,-2,1},
   {1,0,2},
   {-1,0,0},
   {-1,-1,0},
   {-1,4,0},
   {-1,-2,0},
   {-1,1,0},
   {-1,2,0},
   {0,-1,0},
   {-1,3,0},
   {0,1,0},
   {0,-3,0},
   {0,3,0},
   {0,4,0},
   {1,-3,0},
   {0,-2,0},
   {1,-1,0},
   {1,1,0},
   {-1,-3,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat1084[]={
   {2,-3,1},
   {1,1,1},
   {1,-1,1},
   {0,0,1},
   {1,-2,1},
   {2,0,2},
   {1,0,2},
   {2,-1,2},
   {1,-3,0},
   {0,1,0},
   {0,-1,0},
   {1,-4,0},
   {0,-2,0},
   {0,3,0},
   {1,2,0},
   {1,3,0},
   {2,-4,0},
   {0,-3,0},
   {2,-2,0},
   {2,3,0},
   {0,-4,0},
   {2,1,0},
   {2,2,0},
   {0,2,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1085[]={
   {2,-3,1},
   {1,2,1},
   {1,1,1},
   {0,0,1},
   {1,-1,1},
   {1,-2,1},
   {2,0,2},
   {2,-1,2},
   {1,0,2},
   {2,1,2},
   {0,1,0},
   {0,2,0},
   {1,-3,0},
   {1,-4,0},
   {0,-1,0},
   {1,3,0},
   {2,-4,0},
   {0,-3,0},
   {2,-2,0},
   {0,-2,0},
   {0,-4,0},
   {2,3,0},
   {2,2,0},
   {0,3,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1086[]={
   {0,0,1},
   {0,2,2},
   {0,-2,4},
   {1,-2,4},
   {0,3,4},
   {-1,3,0},
   {-1,1,0},
   {-1,0,0},
   {0,1,0},
   {-1,-1,0},
   {-1,2,0},
   {0,-1,0},
   {1,1,0},
   {1,-1,0},
   {1,0,0},
   {-1,-2,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1087[]={
   {1,-1,1},
   {0,0,1},
   {1,0,2},
   {0,2,2},
   {0,-1,3},
   {0,-2,3},
   {1,-2,3},
   {0,3,4},
   {0,1,0},
   {-1,2,0},
   {-1,0,0},
   {-1,3,0},
   {1,1,0},
   {-1,-1,0},
   {-1,-2,0},
   {-1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1088[]={
   {2,0,1},
   {0,0,2},
   {1,-3,3},
   {1,-2,3},
   {0,-3,3},
   {2,-3,3},
   {0,3,0},
   {0,1,0},
   {0,-1,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,-1,0},
   {2,-2,0},
   {2,-1,0},
   {2,1,0},
   {0,-2,0},
   {2,2,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1089[]={
   {2,0,1},
   {1,1,1},
   {2,1,2},
   {0,0,2},
   {2,-3,3},
   {1,-2,3},
   {1,-3,3},
   {0,-3,3},
   {0,3,0},
   {0,2,0},
   {1,-1,0},
   {0,-1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,-2,0},
   {2,-1,0},
   {2,2,0},
   {0,-2,0},
   {0,1,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1090[]={
   {2,0,1},
   {0,0,2},
   {1,-3,3},
   {1,-2,3},
   {0,-3,3},
   {2,-3,3},
   {0,3,0},
   {0,1,0},
   {0,-1,0},
   {0,2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,-1,0},
   {2,-2,0},
   {2,-1,0},
   {2,1,0},
   {0,-2,0},
   {2,2,0},
   {2,3,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1091[]={
   {1,0,1},
   {0,0,1},
   {2,1,1},
   {2,-2,1},
   {2,0,2},
   {1,-1,2},
   {3,0,2},
   {1,1,2},
   {0,-2,0},
   {0,-3,0},
   {0,-4,0},
   {0,-1,0},
   {-1,1,0},
   {1,-3,0},
   {-1,0,0},
   {-1,-2,0},
   {-1,-3,0},
   {-1,-1,0},
   {2,-4,0},
   {2,-3,0},
   {0,1,0},
   {2,-1,0},
   {1,-4,0},
   {1,-2,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {-1,-4,0},
   {3,1,0},
   {4,-1,0},
   {4,0,0}};

static struct patval pat1092[]={
   {1,0,1},
   {2,-2,1},
   {0,0,1},
   {1,-2,2},
   {3,0,2},
   {2,0,2},
   {1,-1,2},
   {1,-3,0},
   {0,-3,0},
   {1,-4,0},
   {-1,-3,0},
   {2,-3,0},
   {0,-4,0},
   {2,-1,0},
   {-1,-4,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {2,-4,0},
   {4,-1,0}};

static struct patval pat1093[]={
   {0,0,1},
   {0,1,1},
   {1,1,1},
   {2,-1,1},
   {2,1,2},
   {1,-1,2},
   {1,0,2},
   {0,-3,0},
   {0,-1,0},
   {0,-2,0},
   {-1,-2,0},
   {1,-3,0},
   {2,-3,0},
   {2,-2,0},
   {-1,-3,0},
   {2,0,0},
   {1,-2,0}};

static struct patval pat1094[]={
   {0,0,1},
   {2,1,2},
   {0,3,3},
   {0,2,3},
   {6,0,3},
   {0,1,3},
   {1,1,0},
   {1,0,0},
   {2,0,0},
   {1,2,0},
   {2,2,0},
   {2,3,0},
   {1,3,0},
   {3,1,0},
   {3,0,0},
   {3,3,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {3,2,0},
   {6,1,0},
   {6,2,0},
   {6,3,0}};

static struct patval pat1095[]={
   {0,0,1},
   {2,1,2},
   {0,3,3},
   {0,2,3},
   {0,1,3},
   {1,-1,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,-1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1096[]={
   {0,0,1},
   {2,0,2},
   {0,2,3},
   {0,1,3},
   {6,-1,3},
   {0,-1,3},
   {1,0,0},
   {1,-1,0},
   {2,-1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {1,2,0},
   {3,0,0},
   {3,-1,0},
   {3,2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {3,1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0}};

static struct patval pat1097[]={
   {0,0,1},
   {2,0,2},
   {0,2,3},
   {0,-1,3},
   {0,1,3},
   {1,-2,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,-1,0},
   {2,-1,0},
   {2,-2,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat1098[]={
   {1,-1,1},
   {0,0,1},
   {2,1,2},
   {0,3,3},
   {0,2,3},
   {0,1,3},
   {1,2,0},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {1,3,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {6,3,0}};

static struct patval pat1099[]={
   {1,-1,1},
   {0,0,1},
   {2,1,2},
   {0,3,3},
   {0,2,3},
   {0,1,3},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {2,-1,0},
   {2,0,0},
   {1,1,0},
   {2,2,0},
   {2,3,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1100[]={
   {1,-1,1},
   {0,0,1},
   {2,0,2},
   {0,2,3},
   {0,1,3},
   {1,2,0},
   {2,-2,0},
   {1,1,0},
   {1,0,0},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0}};

static struct patval pat1101[]={
   {1,-1,1},
   {0,0,1},
   {2,0,2},
   {0,2,3},
   {0,1,3},
   {1,0,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {1,1,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0}};

static struct patval pat1102[]={
   {0,0,1},
   {0,1,1},
   {2,2,1},
   {1,1,1},
   {1,2,1},
   {3,3,1},
   {2,3,1},
   {3,1,4},
   {2,0,4},
   {3,0,0},
   {3,2,0},
   {1,0,0},
   {2,1,0}};

static struct patval pat1103[]={
   {0,1,2},
   {3,3,2},
   {1,1,2},
   {1,2,2},
   {2,3,2},
   {0,0,2},
   {2,2,2},
   {2,1,3},
   {3,1,3},
   {3,0,0},
   {3,2,0},
   {1,0,0},
   {2,0,0}};

static struct patval pat1104[]={
   {0,0,1},
   {0,1,1},
   {0,2,1},
   {0,3,1},
   {0,4,1},
   {1,4,1},
   {2,4,1},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat1105[]={
   {0,0,2},
   {0,1,2},
   {0,2,2},
   {0,3,2},
   {0,4,2},
   {1,4,2},
   {2,4,2},
   {1,3,0},
   {1,0,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {1,1,0},
   {1,2,0}};

static struct patval pat1106[]={
   {2,1,1},
   {0,2,2},
   {0,3,2},
   {0,4,2},
   {0,1,2},
   {1,2,2},
   {0,0,2},
   {1,4,2},
   {2,4,2},
   {1,1,0},
   {1,0,0},
   {2,2,0},
   {2,3,0},
   {1,3,0},
   {2,0,0}};

static struct patval pat1107[]={
   {1,2,1},
   {0,1,1},
   {1,1,1},
   {2,3,1},
   {1,3,1},
   {3,3,1},
   {0,0,1},
   {2,2,0},
   {1,0,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {2,1,0}};

static struct patval pat1108[]={
   {1,2,2},
   {0,1,2},
   {1,1,2},
   {2,3,2},
   {1,3,2},
   {3,3,2},
   {0,0,2},
   {2,2,0},
   {1,0,0},
   {2,0,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {2,1,0}};

static struct patval pat1109[]={
   {0,1,1},
   {0,2,1},
   {0,3,1},
   {0,0,1},
   {2,3,1},
   {1,3,1},
   {1,0,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat1110[]={
   {0,1,2},
   {0,2,2},
   {0,3,2},
   {0,0,2},
   {2,3,2},
   {1,3,2},
   {1,0,0},
   {1,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {1,2,0}};

static struct patval pat1111[]={
   {0,6,2},
   {0,0,2},
   {-2,3,0},
   {-2,4,0},
   {-2,2,0},
   {-2,6,0},
   {-2,1,0},
   {-2,5,0},
   {-1,1,0},
   {-1,2,0},
   {-1,0,0},
   {-1,4,0},
   {-1,5,0},
   {-1,6,0},
   {-1,3,0},
   {0,1,0},
   {0,2,0},
   {-2,0,0},
   {0,4,0},
   {0,5,0},
   {0,3,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0}};

static struct patval pat1112[]={
   {0,0,2},
   {0,6,2},
   {-3,3,0},
   {-3,4,0},
   {-3,5,0},
   {-3,6,0},
   {-3,2,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,5,0},
   {-2,6,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,5,0},
   {-1,6,0},
   {-3,1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {0,5,0},
   {-3,0,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0}};

static struct patval pat1113[]={
   {0,0,2},
   {-3,0,4},
   {-3,1,0},
   {-3,2,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-3,-1,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-3,-2,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat1114[]={
   {0,0,2},
   {-2,0,4},
   {-2,1,0},
   {-2,2,0},
   {-1,-2,0},
   {-2,-1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {0,-2,0},
   {0,-1,0},
   {1,-2,0},
   {0,1,0},
   {0,2,0},
   {-2,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0}};

static struct patval pat1115[]={
   {0,0,2},
   {-3,0,0},
   {-3,1,0},
   {-3,2,0},
   {-2,-2,0},
   {-2,-1,0},
   {-2,0,0},
   {-3,-1,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-3,-2,0},
   {0,-1,0},
   {0,-2,0},
   {0,1,0},
   {0,2,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat1116[]={
   {0,0,2},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-2,3,0},
   {-1,-2,0},
   {-2,-1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {0,-2,0},
   {0,-1,0},
   {0,1,0},
   {-2,-2,0},
   {0,2,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1117[]={
   {0,0,2},
   {0,2,4},
   {0,1,4},
   {0,-1,4},
   {0,-2,4},
   {-4,-1,0},
   {-4,0,0},
   {-4,1,0},
   {-4,-2,0},
   {-4,2,0},
   {-3,-2,0},
   {-3,-1,0},
   {-3,0,0},
   {-3,1,0},
   {-5,1,0},
   {-5,2,0},
   {-2,-1,0},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-1,-2,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-5,0,0},
   {-5,-2,0},
   {-5,-1,0},
   {-3,2,0},
   {-2,-2,0}};

static struct patval pat1118[]={
   {0,0,2},
   {1,0,4},
   {1,4,4},
   {0,4,4},
   {-1,1,0},
   {0,1,0},
   {-1,4,0},
   {0,3,0},
   {-1,3,0},
   {-1,2,0},
   {0,2,0},
   {1,1,0},
   {-1,0,0},
   {1,3,0},
   {1,2,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0}};

static struct patval pat1119[]={
   {0,0,2},
   {-1,0,4},
   {0,4,4},
   {-1,4,4},
   {-2,0,0},
   {-2,1,0},
   {-2,2,0},
   {-3,4,0},
   {-2,3,0},
   {-2,4,0},
   {-3,2,0},
   {-3,3,0},
   {-1,2,0},
   {-1,3,0},
   {-1,1,0},
   {-3,1,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {-3,0,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat1120[]={
   {0,0,2},
   {-2,2,0},
   {-2,3,0},
   {-2,4,0},
   {-2,1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {0,2,0},
   {0,1,0},
   {-2,0,0},
   {0,3,0},
   {0,4,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat1121[]={
   {0,0,2},
   {-1,2,0},
   {-1,3,0},
   {-1,4,0},
   {-1,1,0},
   {1,0,0},
   {0,1,0},
   {0,2,0},
   {0,3,0},
   {0,4,0},
   {-1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0}};

static struct patval pat1122[]={
   {0,0,2},
   {2,-1,4},
   {-2,-1,4},
   {0,3,4},
   {-2,0,0},
   {-2,3,0},
   {-2,2,0},
   {-1,2,0},
   {-1,3,0},
   {-2,1,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,2,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {0,1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1123[]={
   {0,0,2},
   {2,0,4},
   {2,-1,4},
   {-1,3,4},
   {-2,-1,4},
   {1,3,4},
   {-1,0,0},
   {-1,2,0},
   {-1,-1,0},
   {-2,3,0},
   {-1,1,0},
   {-2,2,0},
   {-2,1,0},
   {0,2,0},
   {0,3,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {-2,0,0},
   {0,-1,0},
   {0,1,0},
   {2,1,0},
   {2,2,0},
   {2,3,0}};

static struct patval pat1124[]={
   {1,1,2},
   {0,0,2},
   {2,3,2},
   {0,1,0},
   {0,3,0},
   {1,-2,0},
   {1,-1,0},
   {0,-1,0},
   {0,2,0},
   {1,0,0},
   {1,2,0},
   {1,3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {0,-2,0},
   {2,2,0},
   {2,1,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0}};

static struct patval pat1125[]={
   {0,0,2},
   {1,3,4},
   {1,2,4},
   {-1,2,4},
   {-1,3,4},
   {0,3,4},
   {0,2,4},
   {0,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,-2,0},
   {-1,-1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {-1,-2,0},
   {0,1,0},
   {1,1,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0}};

static struct patval pat1126[]={
   {0,0,2},
   {-2,0,4},
   {-2,1,4},
   {-2,2,4},
   {0,2,4},
   {-1,2,4},
   {-1,-1,0},
   {-1,1,0},
   {-1,-2,0},
   {-1,0,0},
   {0,-2,0},
   {0,-1,0},
   {-2,-2,0},
   {-2,-1,0},
   {0,1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat1127[]={
   {0,0,2},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {0,-3,0},
   {0,-2,0},
   {0,-1,0},
   {-1,-2,0},
   {1,-1,0},
   {0,1,0},
   {1,-3,0},
   {1,-2,0},
   {-1,-3,0},
   {1,0,0},
   {1,1,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0}};

static struct patval pat1128[]={
   {0,0,1},
   {1,0,2},
   {0,1,2},
   {2,0,4},
   {2,1,0},
   {1,1,0}};

static struct patval pat1129[]={
   {2,1,1},
   {2,0,1},
   {3,-1,1},
   {3,0,1},
   {1,1,1},
   {0,0,2},
   {2,-1,2},
   {1,0,2},
   {-1,-1,0},
   {0,-1,0},
   {0,-2,0},
   {-1,1,0},
   {2,-2,0},
   {-1,0,0},
   {0,1,0},
   {1,-2,0},
   {3,-2,0},
   {-1,-2,0},
   {1,-1,0}};

static struct patval pat1130[]={
   {2,2,1},
   {2,0,1},
   {3,0,1},
   {1,1,1},
   {3,-1,1},
   {1,0,2},
   {0,0,2},
   {2,-1,2},
   {2,1,3},
   {1,2,3},
   {0,-1,0},
   {0,-2,0},
   {-1,-1,0},
   {0,1,0},
   {-1,2,0},
   {2,-2,0},
   {-1,1,0},
   {-1,0,0},
   {0,2,0},
   {1,-2,0},
   {3,-2,0},
   {-1,-2,0},
   {1,-1,0}};

static struct patval pat1131[]={
   {0,1,2},
   {2,2,2},
   {1,0,2},
   {2,1,2},
   {0,0,2},
   {1,2,0},
   {1,1,0},
   {0,2,0}};

static struct patval pat1132[]={
   {0,1,1},
   {2,2,1},
   {1,0,1},
   {2,1,1},
   {0,0,1},
   {1,2,0},
   {1,1,0},
   {0,2,0}};

static struct patval pat1133[]={
   {0,1,1},
   {0,0,2},
   {2,0,2},
   {1,1,2},
   {2,1,4},
   {2,-1,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0}};

static struct patval pat1134[]={
   {0,0,1},
   {2,0,1},
   {1,1,1},
   {0,1,2},
   {2,1,3},
   {2,-1,0},
   {0,-1,0},
   {1,-1,0},
   {1,0,0}};

static struct patval pat1135[]={
   {2,0,1},
   {1,2,1},
   {1,-1,2},
   {0,0,2},
   {1,1,2},
   {0,1,4},
   {0,-1,4},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat1136[]={
   {1,1,1},
   {0,0,1},
   {1,-1,1},
   {1,2,2},
   {2,0,2},
   {0,1,3},
   {0,-1,3},
   {2,-1,0},
   {2,1,0},
   {2,2,0},
   {1,0,0}};

static struct patval pat1137[]={
   {1,-1,2},
   {0,0,2},
   {0,-1,4},
   {0,2,4},
   {0,3,4},
   {0,4,4},
   {1,4,4},
   {1,5,4},
   {1,3,4},
   {1,2,0},
   {1,1,0},
   {0,1,0},
   {1,0,0}};

static struct patval pat1138[]={
   {1,-1,1},
   {0,0,1},
   {0,-1,3},
   {0,2,3},
   {0,3,3},
   {0,4,3},
   {1,4,3},
   {1,5,3},
   {1,3,3},
   {1,2,0},
   {1,1,0},
   {0,1,0},
   {1,0,0}};

static struct patval pat1139[]={
   {0,0,1},
   {0,1,2},
   {0,-1,3},
   {1,-1,0},
   {1,0,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat1140[]={
   {0,1,1},
   {0,0,2},
   {0,-1,3},
   {1,-1,0},
   {1,0,0},
   {0,2,0},
   {1,1,0},
   {1,2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0}};

static struct patval pat1141[]={
   {1,-1,1},
   {2,0,2},
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {2,1,0},
   {0,1,0}};

static struct patval pat1142[]={
   {2,0,1},
   {1,1,1},
   {0,0,1},
   {1,-1,2},
   {1,0,0},
   {2,1,0},
   {0,1,0}};

static struct patval pat1143[]={
   {0,0,2},
   {1,1,2},
   {0,1,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat1144[]={
   {0,0,1},
   {1,1,1},
   {0,1,0},
   {-1,1,0},
   {-1,0,0}};

static struct patval pat1145[]={
   {0,0,1},
   {1,-1,1},
   {0,2,1},
   {1,1,2},
   {1,0,0},
   {0,1,0},
   {1,2,0},
   {0,-1,0}};

static struct patval pat1146[]={
   {1,1,1},
   {1,-1,2},
   {0,2,2},
   {0,0,2},
   {1,0,0},
   {0,1,0},
   {1,2,0},
   {0,-1,0}};

static struct patval pat1147[]={
   {1,1,2},
   {0,0,2},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0}};

static struct patval pat1148[]={
   {1,1,1},
   {0,0,1},
   {1,0,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {1,-1,0}};

static struct patval pat1149[]={
   {2,-2,1},
   {2,2,1},
   {0,0,1},
   {0,-2,3},
   {0,2,3},
   {0,-1,0},
   {0,3,0},
   {0,4,0},
   {1,-4,0},
   {0,-3,0},
   {1,-2,0},
   {0,1,0},
   {1,-3,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {2,-4,0},
   {2,-3,0},
   {1,-1,0},
   {2,-1,0},
   {0,-4,0},
   {2,1,0},
   {2,0,0},
   {2,3,0},
   {2,4,0},
   {3,-4,0},
   {3,-3,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0}};

static struct patval pat1150[]={
   {2,2,1},
   {4,4,1},
   {4,2,1},
   {0,2,1},
   {2,4,1},
   {0,4,1},
   {2,0,1},
   {4,0,1},
   {0,0,1},
   {-1,-2,0},
   {-1,0,0},
   {-2,6,0},
   {-2,5,0},
   {-1,-1,0},
   {-1,3,0},
   {-2,2,0},
   {-2,1,0},
   {-1,6,0},
   {0,-2,0},
   {-2,4,0},
   {-2,3,0},
   {-1,1,0},
   {-1,2,0},
   {0,3,0},
   {-2,0,0},
   {0,5,0},
   {0,6,0},
   {1,-2,0},
   {-1,5,0},
   {-1,4,0},
   {0,-1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {2,-2,0},
   {2,-1,0},
   {0,1,0},
   {2,1,0},
   {-2,-2,0},
   {-2,-1,0},
   {1,-1,0},
   {2,5,0},
   {2,6,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,3,0},
   {3,4,0},
   {3,5,0},
   {3,6,0},
   {4,-2,0},
   {4,-1,0},
   {1,0,0},
   {4,1,0},
   {1,1,0},
   {4,3,0},
   {2,3,0},
   {4,5,0},
   {4,6,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {5,4,0},
   {5,5,0},
   {5,6,0},
   {6,-2,0},
   {6,-1,0},
   {6,0,0},
   {6,1,0},
   {6,2,0},
   {6,3,0},
   {6,4,0},
   {6,5,0},
   {6,6,0}};

static struct patval pat1151[]={
   {3,3,1},
   {3,-3,1},
   {0,0,1},
   {0,-3,3},
   {0,3,3},
   {1,-5,0},
   {0,1,0},
   {0,2,0},
   {0,-2,0},
   {0,4,0},
   {0,-4,0},
   {0,-1,0},
   {1,-4,0},
   {1,-3,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {0,5,0},
   {1,2,0},
   {1,3,0},
   {1,1,0},
   {1,5,0},
   {2,-5,0},
   {2,-4,0},
   {2,-3,0},
   {2,-2,0},
   {2,-1,0},
   {2,0,0},
   {2,1,0},
   {2,2,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {0,-5,0},
   {3,-4,0},
   {1,4,0},
   {3,-2,0},
   {3,-1,0},
   {3,0,0},
   {3,1,0},
   {3,2,0},
   {3,-5,0},
   {3,4,0},
   {3,5,0},
   {4,-5,0},
   {4,-4,0},
   {4,-3,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0},
   {5,-5,0},
   {5,-4,0},
   {5,-3,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {5,4,0},
   {5,5,0}};

static struct patval pat1152[]={
   {3,3,1},
   {0,0,1},
   {6,6,1},
   {6,3,1},
   {6,0,1},
   {0,6,1},
   {3,0,1},
   {3,6,1},
   {0,3,1},
   {-2,8,0},
   {-1,-2,0},
   {-2,7,0},
   {-1,-1,0},
   {-1,0,0},
   {-1,1,0},
   {-1,2,0},
   {-1,3,0},
   {-2,4,0},
   {-2,6,0},
   {-1,6,0},
   {-1,7,0},
   {-1,8,0},
   {0,-2,0},
   {0,-1,0},
   {-2,2,0},
   {-2,3,0},
   {0,2,0},
   {-2,5,0},
   {0,4,0},
   {-1,4,0},
   {-1,5,0},
   {0,7,0},
   {-2,1,0},
   {1,-2,0},
   {1,-1,0},
   {1,0,0},
   {1,1,0},
   {1,2,0},
   {1,3,0},
   {1,4,0},
   {1,5,0},
   {1,6,0},
   {1,7,0},
   {1,8,0},
   {2,-2,0},
   {-2,0,0},
   {2,0,0},
   {0,1,0},
   {0,5,0},
   {2,3,0},
   {2,4,0},
   {2,5,0},
   {2,6,0},
   {2,7,0},
   {2,8,0},
   {3,-2,0},
   {3,-1,0},
   {0,8,0},
   {3,1,0},
   {3,2,0},
   {-2,-2,0},
   {-2,-1,0},
   {3,5,0},
   {2,-1,0},
   {3,7,0},
   {3,8,0},
   {4,-2,0},
   {4,-1,0},
   {4,0,0},
   {4,1,0},
   {4,2,0},
   {4,3,0},
   {4,4,0},
   {4,5,0},
   {4,6,0},
   {4,7,0},
   {4,8,0},
   {5,-2,0},
   {5,-1,0},
   {5,0,0},
   {5,1,0},
   {5,2,0},
   {5,3,0},
   {5,4,0},
   {5,5,0},
   {5,6,0},
   {5,7,0},
   {5,8,0},
   {6,-2,0},
   {6,-1,0},
   {2,1,0},
   {6,1,0},
   {6,2,0},
   {2,2,0},
   {6,4,0},
   {6,5,0},
   {3,4,0},
   {6,7,0},
   {6,8,0},
   {7,-2,0},
   {7,-1,0},
   {7,0,0},
   {7,1,0},
   {7,2,0},
   {7,3,0},
   {7,4,0},
   {7,5,0},
   {7,6,0},
   {7,7,0},
   {7,8,0},
   {8,-2,0},
   {8,-1,0},
   {8,0,0},
   {8,1,0},
   {8,2,0},
   {8,3,0},
   {8,4,0},
   {8,5,0},
   {8,6,0},
   {8,7,0},
   {8,8,0}};

static int
autohelper0 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 2, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2;
}

static int
autohelper48 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 0, ti, tj, &ai, &aj, transformation);
  offset(2, 0, ti, tj, &bi, &bj, transformation);

  return (moyo_color(ai,aj) == color) && (moyo_color(bi,bj) == OTHER_COLOR(color));
}

static int
autohelper61 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return (area_color(ai,aj) == color);
}

static int
autohelper85 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 3, ti, tj, &ai, &aj, transformation);

  return (moyo_color(ai,aj) == color);
}

static int
autohelper90 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, di, dj, Bi, Bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &di, &dj, transformation);
  offset(0, 1, ti, tj, &Bi, &Bj, transformation);
  offset(-1, 0, ti, tj, &Ci, &Cj, transformation);

  return defend_against(ai,aj,color,Bi,Bj) && play_attack_defend_n(color, 1, 4, ai, aj, Ci, Cj, di, dj, Bi, Bj, Bi, Bj);
}

static int
autohelper91 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &Bi, &Bj, transformation);

  return defend_against(ai,aj,color,Bi,Bj);
}

static int
autohelper92 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &Bi, &Bj, transformation);

  return does_attack(ai,aj,Bi,Bj);
}

static int
autohelper94 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 2, ti, tj, &ai, &aj, transformation);

  return (moyo_color(ai,aj) == color);
}

static int
autohelper99 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-2, 0, ti, tj, &bi, &bj, transformation);
  offset(-3, 1, ti, tj, &ci, &cj, transformation);

  return defend_against(ai,aj,color,bi,bj) || (moyo_color(ci,cj) == color);
}

static int
autohelper106 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj);
}

static int
autohelper125 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2;
}

static int
autohelper128 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return play_attack_defend_n(OTHER_COLOR(color), 1, 2, ti, tj, ai, aj, ai, aj) || (dragon[bi][bj].safety==CRITICAL);
}

static int
autohelper129 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &Bi, &Bj, transformation);

  return does_attack(ai,aj,Bi,Bj);
}

static int
autohelper130 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &Bi, &Bj, transformation);

  return does_attack(ai,aj,Bi,Bj);
}

static int
autohelper151 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &Ai, &Aj, transformation);

  return (!(worm[Ai][Aj].attacki != -1));
}

static int
autohelper160 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);

  return defend_against(ai,aj,color,bi,bj);
}

static int
autohelper173 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -3, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &Ai, &Aj, transformation);

  return !(worm[ai][aj].attacki != -1) && !(dragon[Ai][Aj].status == DEAD);
}

static int
autohelper181 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(-1, 1, ti, tj, &ci, &cj, transformation);
  offset(-1, 2, ti, tj, &di, &dj, transformation);

  return (moyo_color(di,dj) == OTHER_COLOR(color)) && play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj) && !play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, ai, aj);
}

static int
autohelper182 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(-1, 2, ti, tj, &ci, &cj, transformation);

  return (moyo_color(ci,cj) == OTHER_COLOR(color)) && !play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, ai, aj);
}

static int
autohelper185 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper190 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return  worm[ai][aj].liberties>2;
}

static int
autohelper192 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return  worm[ai][aj].liberties>2;
}

static int
autohelper198 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].status == DEAD);
}

static int
autohelper207 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(0, -1, ti, tj, &ci, &cj, transformation);
  offset(-1, 1, ti, tj, &di, &dj, transformation);

  return !play_attack_defend_n(color, 1, 5, ai, aj, bi, bj, ci, cj, bi, bj, di, dj, di, dj);
}

static int
autohelper217 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);

  return (worm[ai][aj].attacki != -1);
}

static int
autohelper218 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &bi, &bj, transformation);
  offset(0, 2, ti, tj, &ci, &cj, transformation);

  return cut_possible(ai,aj,OTHER_COLOR(color)) || play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, bi, bj, ci, cj);
}

static int
autohelper220 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return !(moyo_color(ai,aj) == color);
}

static int
autohelper223 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return !(moyo_color(ai,aj) == color);
}

static int
autohelper224 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return !(moyo_color(ai,aj) == color);
}

static int
autohelper227 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return !(moyo_color(ai,aj) == color);
}

static int
autohelper232 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return !defend_against(ai,aj,color,bi,bj);
}

static int
autohelper259 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &bi, &bj, transformation);
  offset(0, -1, ti, tj, &ci, &cj, transformation);
  offset(0, -2, ti, tj, &di, &dj, transformation);
  offset(1, -2, ti, tj, &ei, &ej, transformation);
  offset(-2, -2, ti, tj, &fi, &fj, transformation);

  return !(moyo_color(fi,fj) == OTHER_COLOR(color)) && play_attack_defend_n(color, 0, 4, ai, aj, bi, bj, ci, cj, di, dj, ei, ej);
}

static int
autohelper261 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(1, 1, ti, tj, &ci, &cj, transformation);
  offset(-1, 1, ti, tj, &di, &dj, transformation);
  offset(-1, 0, ti, tj, &ei, &ej, transformation);

  return !play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, ci, cj) || !play_attack_defend_n(color, 1, 4, ai, aj, bi, bj, di, dj, ei, ej, ai, aj);
}

static int
autohelper262 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper263 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper266 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);

  return  !play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, ai, aj);
}

static int
autohelper267 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 2, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>=2 && worm[bi][bj].liberties>=2;
}

static int
autohelper269 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return  !(worm[ai][aj].attacki != -1);
}

static int
autohelper271 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &bi, &bj, transformation);
  offset(0, -2, ti, tj, &ci, &cj, transformation);

  return play_attack_defend_n(OTHER_COLOR(color), 0, 2, ai, aj, bi, bj, ai, aj) && play_attack_defend_n(OTHER_COLOR(color), 1, 1, ai, aj, ci, cj);
}

static int
autohelper273 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper274 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return  !(dragon[ai][aj].status == ALIVE);
}

static int
autohelper275 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper276 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -2, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return !(area_color(ai,aj) == OTHER_COLOR(color)) && !(area_color(bi,bj) == OTHER_COLOR(color));
}

static int
autohelper277 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -2, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);

  return (area_color(ai,aj) == OTHER_COLOR(color)) || (area_color(bi,bj) == OTHER_COLOR(color));
}

static int
autohelper278 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return (area_color(ai,aj) == OTHER_COLOR(color)) || (area_color(bi,bj) == OTHER_COLOR(color));
}

static int
autohelper282 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);

  return cut_possible(bi,bj,OTHER_COLOR(color)) && defend_against(ai,aj,color,bi,bj);
}

static int
autohelper287 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);
  offset(-1, 0, ti, tj, &di, &dj, transformation);
  offset(0, -2, ti, tj, &ei, &ej, transformation);
  offset(1, -2, ti, tj, &fi, &fj, transformation);

  return (moyo_color(fi,fj) == color) || (play_attack_defend_n(color, 1, 4, ai, aj, bi, bj, ci, cj, di, dj, bi, bj) && (play_attack_defend_n(color, 1, 4, ai, aj, ci, cj, bi, bj, ei, ej, ei, ej) || play_attack_defend_n(color, 1, 4, ai, aj, ci, cj, bi, bj, ei, ej, ci, cj)));
}

static int
autohelper296 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, 1, ti, tj, &ci, &cj, transformation);
  offset(-1, -1, ti, tj, &di, &dj, transformation);

  return (moyo_color(ci,cj) == color) && (moyo_color(di,dj) == color) && !play_attack_defend_n(OTHER_COLOR(color), 1, 3, ai, aj, bi, bj, ci, cj, ci, cj);
}

static int
autohelper297 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, Di, Dj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(1, -1, ti, tj, &ci, &cj, transformation);
  offset(1, 0, ti, tj, &Di, &Dj, transformation);

  return !(area_color(ai,aj) == OTHER_COLOR(color)) && !(area_color(bi,bj) == OTHER_COLOR(color)) && worm[ci][cj].liberties>2 && worm[Di][Dj].liberties<3;
}

static int
autohelper298 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return defend_against(ai,aj,color,bi,bj);
}

static int
autohelper300 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);

  return (area_color(ai,aj) == OTHER_COLOR(color)) || (area_color(bi,bj) == OTHER_COLOR(color));
}

static int
autohelper302 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, -2, ti, tj, &bi, &bj, transformation);
  offset(0, -3, ti, tj, &ci, &cj, transformation);

  return worm[ci][cj].liberties>1 && !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj);
}

static int
autohelper307 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==3;
}

static int
autohelper308 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==4;
}

static int
autohelper312 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);
  offset(1, 1, ti, tj, &ci, &cj, transformation);
  offset(0, 1, ti, tj, &di, &dj, transformation);

  return !(worm[di][dj].attacki != -1) && !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj) && !play_attack_defend_n(color, 1, 1, ai, aj, ci, cj);
}

static int
autohelper323 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-3, -3, ti, tj, &ai, &aj, transformation);
  offset(1, -3, ti, tj, &bi, &bj, transformation);

  return (moyo_color(ai,aj) == color) && (moyo_color(bi,bj) == color);
}

static int
autohelper339 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper342 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return !(moyo_color(ai,aj) == OTHER_COLOR(color));
}

static int
autohelper357 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return !(worm[Bi][Bj].attacki != -1) && play_attack_defend_n(color, 1, 1, ai, aj, Bi, Bj);
}

static int
autohelper367 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -2, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &bi, &bj, transformation);

  return  (dragon[ai][aj].status == DEAD) && !(dragon[bi][bj].status == DEAD);
}

static int
autohelper368 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);
  offset(1, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==3 && !defend_against(ai,aj,OTHER_COLOR(color),bi,bj);
}

static int
autohelper375 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -2, ti, tj, &Bi, &Bj, transformation);

  return  !(worm[Bi][Bj].attacki != -1)||does_defend(ai,aj,Bi,Bj);
}

static int
autohelper377 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 0, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties<4;
}

static int
autohelper379 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &bi, &bj, transformation);
  offset(1, -1, ti, tj, &Ci, &Cj, transformation);

  return !(moyo_color(ai,aj) == OTHER_COLOR(color)) && !play_attack_defend_n(color, 1, 1, bi, bj, Ci, Cj);
}

static int
autohelper382 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return  !(terri_color(ai,aj) == OTHER_COLOR(color));
}

static int
autohelper383 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);

  return  !(terri_color(ai,aj) == OTHER_COLOR(color));
}

static int
autohelper396 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);

  return  !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj);
}

static int
autohelper397 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return !play_attack_defend_n(OTHER_COLOR(color), 1, 1, ai, aj, ai, aj) && !(worm[bi][bj].attacki != -1);
}

static int
autohelper398 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1);
}

static int
autohelper423 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);
  offset(-1, -2, ti, tj, &Bi, &Bj, transformation);

  return worm[Ai][Aj].liberties>1 && !(worm[Bi][Bj].attacki != -1) && !(worm[ai][aj].attacki != -1);
}

static int
autohelper432 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].safety==CRITICAL);
}

static int
autohelper438 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 2, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>3;
}

static int
autohelper439 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>2;
}

static int
autohelper442 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, ci, cj, ei, ej, fi, fj, Bi, Bj, Di, Dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -2, ti, tj, &ci, &cj, transformation);
  offset(1, -2, ti, tj, &ei, &ej, transformation);
  offset(2, 0, ti, tj, &fi, &fj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);
  offset(2, -1, ti, tj, &Di, &Dj, transformation);

  return !play_attack_defend_n(color, 1, 5, ai, aj, Bi, Bj, ci, cj, Di, Dj, ei, ej, fi, fj);
}

static int
autohelper444 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>2;
}

static int
autohelper446 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper447 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper460 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1) && worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper461 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1);
}

static int
autohelper462 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1);
}

static int
autohelper466 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].status == DEAD);
}

static int
autohelper467 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>1;
}

static int
autohelper479 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &Bi, &Bj, transformation);

  return defend_against(ti,tj,OTHER_COLOR(color),ai,aj) && !play_attack_defend_n(OTHER_COLOR(color), 1, 1, ti, tj, Bi, Bj);
}

static int
autohelper484 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>1;
}

static int
autohelper485 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &Ai, &Aj, transformation);
  offset(-1, 1, ti, tj, &Bi, &Bj, transformation);

  return (!(worm[Ai][Aj].attacki != -1)) && (!(worm[Bi][Bj].attacki != -1));
}

static int
autohelper486 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &Ai, &Aj, transformation);
  offset(-1, 1, ti, tj, &Bi, &Bj, transformation);

  return (!(worm[Ai][Aj].attacki != -1)) && (!(worm[Bi][Bj].attacki != -1));
}

static int
autohelper490 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>=3;
}

static int
autohelper491 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(0, -2, ti, tj, &bi, &bj, transformation);

  return  (dragon[ai][aj].status == ALIVE) || (dragon[bi][bj].status == ALIVE);
}

static int
autohelper496 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>=3;
}

static int
autohelper497 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ci, Cj, Di, Dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(0, -1, ti, tj, &Ci, &Cj, transformation);
  offset(0, 2, ti, tj, &Di, &Dj, transformation);

  return (worm[Ci][Cj].liberties>1) && (worm[Di][Dj].liberties>1) && play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, bi, bj, bi, bj);
}

static int
autohelper499 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return !(dragon[ai][aj].status == DEAD) && worm[Ai][Aj].liberties>2;
}

static int
autohelper503 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties==2;
}

static int
autohelper508 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return defend_against(ai,aj,color,bi,bj) && !(worm[Ai][Aj].attacki != -1);
}

static int
autohelper514 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(2, -2, ti, tj, &bi, &bj, transformation);
  offset(1, -2, ti, tj, &ci, &cj, transformation);
  offset(1, 0, ti, tj, &di, &dj, transformation);

  return !play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, ci, cj) && defend_against(ai,aj,color,di,dj);
}

static int
autohelper515 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);
  offset(0, -2, ti, tj, &di, &dj, transformation);
  offset(1, 0, ti, tj, &ei, &ej, transformation);
  offset(-1, -2, ti, tj, &fi, &fj, transformation);

  return (!play_attack_defend_n(OTHER_COLOR(color), 0, 3, ai, aj, bi, bj, ci, cj, bi, bj) || !play_attack_defend_n(OTHER_COLOR(color), 0, 3, ai, aj, bi, bj, ci, cj, fi, fj)) &&play_attack_defend_n(OTHER_COLOR(color), 1, 4, ai, aj, ci, cj, bi, bj, ei, ej, ei, ej) &&play_attack_defend_n(color, 1, 2, ai, aj, ci, cj, ci, cj) && play_attack_defend_n(color, 1, 4, ai, aj, bi, bj, ei, ej, ci, cj, ci, cj);
}

static int
autohelper516 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);
  offset(2, 0, ti, tj, &bi, &bj, transformation);
  offset(0, 0, ti, tj, &ci, &cj, transformation);
  offset(1, -1, ti, tj, &di, &dj, transformation);
  offset(2, 1, ti, tj, &ei, &ej, transformation);
  offset(0, -1, ti, tj, &fi, &fj, transformation);

  return (!play_attack_defend_n(OTHER_COLOR(color), 0, 3, ai, aj, bi, bj, ci, cj, bi, bj) || !play_attack_defend_n(OTHER_COLOR(color), 0, 3, ai, aj, bi, bj, ci, cj, fi, fj)) &&play_attack_defend_n(OTHER_COLOR(color), 1, 4, ai, aj, ci, cj, bi, bj, ei, ej, ei, ej);
}

static int
autohelper518 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);
  offset(1, 0, ti, tj, &di, &dj, transformation);
  offset(0, -3, ti, tj, &ei, &ej, transformation);

  return !play_attack_defend_n(color, 1, 4, ai, aj, bi, bj, ci, cj, di, dj, ei, ej);
}

static int
autohelper522 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 2, ti, tj, &ai, &aj, transformation);

  return  worm[ai][aj].liberties>2;
}

static int
autohelper523 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);

  return  worm[ai][aj].liberties<=2;
}

static int
autohelper525 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return !(worm[ai][aj].attacki != -1) || does_defend(bi,bj,ai,aj);
}

static int
autohelper530 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties==2 || worm[bi][bj].liberties==2;
}

static int
autohelper532 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int bi, bj, ci, cj, di, dj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(0, -1, ti, tj, &ci, &cj, transformation);
  offset(0, 1, ti, tj, &di, &dj, transformation);
  offset(0, 0, ti, tj, &Ai, &Aj, transformation);

  return play_attack_defend_n(OTHER_COLOR(color), 1, 2, Ai, Aj, bi, bj, bi, bj) || play_attack_defend_n(OTHER_COLOR(color), 1, 2, Ai, Aj, bi, bj, ci, cj) || play_attack_defend_n(OTHER_COLOR(color), 1, 2, Ai, Aj, bi, bj, di, dj);
}

static int
autohelper546 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-3, -1, ti, tj, &Ai, &Aj, transformation);
  offset(-3, 1, ti, tj, &Bi, &Bj, transformation);

  return worm[Ai][Aj].liberties>1 && worm[Bi][Bj].liberties>1;
}

static int
autohelper547 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper550 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &ci, &cj, transformation);
  offset(1, 0, ti, tj, &di, &dj, transformation);
  offset(-1, -1, ti, tj, &Ai, &Aj, transformation);

  return (!(moyo_color(ai,aj) == color) || !(moyo_color(bi,bj) == color) || !(moyo_color(ci,cj) == color) || !(moyo_color(di,dj) == color)) && !(worm[Ai][Aj].attacki != -1);
}

static int
autohelper552 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return  !(worm[ai][aj].defendi != -1);
}

static int
autohelper553 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return !(moyo_color(ai,aj) == color) || !(moyo_color(bi,bj) == color);
}

static int
autohelper554 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return cut_possible(ai,aj,OTHER_COLOR(color)) && defend_against(bi,bj,color,ai,aj);
}

static int
autohelper555 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -2, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return cut_possible(ai,aj,OTHER_COLOR(color)) && defend_against(bi,bj,color,ai,aj);
}

static int
autohelper557 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return !(moyo_color(ai,aj) == OTHER_COLOR(color)) || !(moyo_color(bi,bj) == OTHER_COLOR(color));
}

static int
autohelper559 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2 && worm[ai][aj].liberties2>3;
}

static int
autohelper560 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &ci, &cj, transformation);

  return !play_attack_defend_n(OTHER_COLOR(color), 1, 3, ai, aj, bi, bj, ci, cj, ci, cj) && !play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj);
}

static int
autohelper561 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, 1, ti, tj, &ci, &cj, transformation);

  return !play_attack_defend_n(OTHER_COLOR(color), 1, 3, ai, aj, bi, bj, ci, cj, ci, cj) && play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj);
}

static int
autohelper569 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, -1, ti, tj, &Ai, &Aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return !play_attack_defend_n(OTHER_COLOR(color), 1, 1, ti, tj, Ai, Aj) && !play_attack_defend_n(OTHER_COLOR(color), 1, 1, ti, tj, Bi, Bj);
}

static int
autohelper575 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return !(moyo_color(ai,aj) == color);
}

static int
autohelper578 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return !(worm[Ai][Aj].attacki != -1) && !(worm[Bi][Bj].attacki != -1);
}

static int
autohelper581 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, ci, cj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &ci, &cj, transformation);
  offset(0, 1, ti, tj, &Bi, &Bj, transformation);

  return play_attack_defend_n(color, 0, 2, ai, aj, Bi, Bj, ci, cj);;
}

static int
autohelper588 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ci, Cj, Di, Dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &Ci, &Cj, transformation);
  offset(1, 0, ti, tj, &Di, &Dj, transformation);

  return !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj) && play_attack_defend_n(color, 1, 1, ai, aj, Ci, Cj) && play_attack_defend_n(color, 1, 1, ai, aj, Di, Dj);
}

static int
autohelper591 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 1, ti, tj, &ai, &aj, transformation);

  return !safe_move(ai,aj,OTHER_COLOR(color));
}

static int
autohelper603 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>1;
}

static int
autohelper604 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1) || (worm[Ai][Aj].defendi != -1);
}

static int
autohelper605 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].safety==CRITICAL);
}

static int
autohelper613 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, ci, cj, di, dj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);
  offset(1, 0, ti, tj, &di, &dj, transformation);
  offset(-1, 0, ti, tj, &Bi, &Bj, transformation);

  return  !play_attack_defend_n(color, 1, 3, ai, aj, Bi, Bj, ci, cj, ci, cj)&&!play_attack_defend_n(color, 1, 3, ai, aj, Bi, Bj, ci, cj, di, dj);
}

static int
autohelper622 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1);
}

static int
autohelper624 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);
  offset(1, 0, ti, tj, &ci, &cj, transformation);
  offset(0, -1, ti, tj, &di, &dj, transformation);
  offset(-1, -1, ti, tj, &ei, &ej, transformation);

  return !(moyo_color(di,dj) == color) || !(moyo_color(ei,ej) == color) || !play_attack_defend_n(OTHER_COLOR(color), 1, 3, ai, aj, bi, bj, ci, cj, ci, cj);
}

static int
autohelper630 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper631 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);
  offset(0, 2, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper634 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &Ai, &Aj, transformation);

  return worm[ai][aj].liberties>1 && worm[Ai][Aj].liberties==2;
}

static int
autohelper648 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper650 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper651 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);

  return (!(dragon[ai][aj].status == DEAD) && ((dragon[bi][bj].status == DEAD) || (dragon[bi][bj].status == CRITICAL))) || (!(dragon[bi][bj].status == DEAD) && ((dragon[ai][aj].status == DEAD) || (dragon[ai][aj].status == CRITICAL)));
}

static int
autohelper653 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);

  return (worm[ai][aj].liberties>1) && (worm[bi][bj].liberties>1);
}

static int
autohelper656 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &bi, &bj, transformation);
  offset(0, -1, ti, tj, &ci, &cj, transformation);

  return worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1 && !(worm[ci][cj].attacki != -1);
}

static int
autohelper658 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(2, 0, ti, tj, &bi, &bj, transformation);

  return defend_against(ai,aj,color,bi,bj);
}

static int
autohelper660 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -2, ti, tj, &ai, &aj, transformation);

  return (!(dragon[ai][aj].status == DEAD));
}

static int
autohelper663 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper664 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj) || play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, Ai, Aj);
}

static int
autohelper669 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-2, 0, ti, tj, &Bi, &Bj, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, Bi, Bj, Bi, Bj);;
}

static int
autohelper673 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, -2, ti, tj, &ci, &cj, transformation);
  offset(1, -1, ti, tj, &di, &dj, transformation);
  offset(0, -2, ti, tj, &ei, &ej, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj) || play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, ei, ej) || (play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, di, dj) && !play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, ci, cj));
}

static int
autohelper674 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);
  offset(1, 0, ti, tj, &ci, &cj, transformation);

  return  !play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, ci, cj, ai, aj)&&!play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, ci, cj, bi, bj);
}

static int
autohelper675 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 2, ti, tj, &bi, &bj, transformation);
  offset(1, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper676 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(0, -1, ti, tj, &ci, &cj, transformation);
  offset(1, -1, ti, tj, &di, &dj, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj) && !play_attack_defend_n(color, 1, 3, ai, aj, ci, cj, bi, bj, di, dj);
}

static int
autohelper686 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(0, 0, ti, tj, &Ai, &Aj, transformation);

  return  does_attack(Ai,Aj,bi,bj) && does_defend(Ai,Aj,bi,bj) && !worm[Ai][Aj].ko;
}

static int
autohelper687 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(0, 0, ti, tj, &Ai, &Aj, transformation);

  return  does_attack(Ai,Aj,bi,bj)&&does_defend(Ai,Aj,bi,bj)&&!worm[Ai][Aj].ko;
}

static int
autohelper688 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);

  return  !play_attack_defend_n(color, 1, 1, ai, aj, ai, aj) && !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj);
}

static int
autohelper689 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Bi, Bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Bi, &Bj, transformation);
  offset(1, -1, ti, tj, &Ci, &Cj, transformation);

  return  play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, Bi, Bj)  && ((!play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, bi, bj, Bi, Bj) && (!play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, bi, bj, Ci, Cj) || play_attack_defend_n(OTHER_COLOR(color), 0, 2, ai, aj, bi, bj, Ci, Cj))) || (play_attack_defend_n(OTHER_COLOR(color), 0, 2, ai, aj, bi, bj, Bi, Bj) && !play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, bi, bj, Ci, Cj)));
}

static int
autohelper690 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Bi, Bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Bi, &Bj, transformation);
  offset(1, -1, ti, tj, &Ci, &Cj, transformation);

  return  play_attack_defend_n(OTHER_COLOR(color), 1, 2, ai, aj, bi, bj, Bi, Bj)  && ((!play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, Bi, Bj) && (!play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, Ci, Cj) || play_attack_defend_n(color, 0, 2, ai, aj, bi, bj, Ci, Cj))) || (play_attack_defend_n(color, 0, 2, ai, aj, bi, bj, Bi, Bj) && !play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, Ci, Cj)));
}

static int
autohelper704 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);

  return (worm[ai][aj].attacki != -1) || (worm[bi][bj].attacki != -1);
}

static int
autohelper708 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper709 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper710 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 2, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2;
}

static int
autohelper711 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(0, 2, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>1 && worm[bi][bj].liberties>2;
}

static int
autohelper717 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(2, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 2, ti, tj, &bi, &bj, transformation);
  offset(1, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==3 && (worm[ai][aj].liberties>2 || !(worm[ai][aj].attacki != -1)) && worm[bi][bj].liberties>2;
}

static int
autohelper718 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==3;
}

static int
autohelper719 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return (worm[ai][aj].attacki != -1);
}

static int
autohelper720 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 2, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties==2;
}

static int
autohelper721 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2;
}

static int
autohelper726 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);

  return  !(worm[ai][aj].attacki != -1);
}

static int
autohelper744 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 2, ti, tj, &ai, &aj, transformation);
  offset(-2, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);

  return (worm[Ai][Aj].liberties<=4) && (worm[ai][aj].liberties>=worm[Ai][Aj].liberties-1) && (worm[bi][bj].liberties>=worm[Ai][Aj].liberties)&& (!(dragon[Ai][Aj].status == DEAD)||(worm[ai][aj].attacki != -1));
}

static int
autohelper746 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return play_attack_defend_n(color, 1, 1, ai, aj, Bi, Bj);
}

static int
autohelper747 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return play_attack_defend_n(color, 1, 1, ai, aj, Bi, Bj);
}

static int
autohelper748 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return play_attack_defend_n(color, 1, 1, ai, aj, Bi, Bj);
}

static int
autohelper749 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>1;
}

static int
autohelper751 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(-2, 0, ti, tj, &bi, &bj, transformation);

  return !(dragon[ai][aj].status == ALIVE) && (worm[bi][bj].liberties<=3);
}

static int
autohelper753 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties<=4;
}

static int
autohelper757 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[ai][aj].liberties>1 && !(dragon[bi][bj].status == ALIVE);
}

static int
autohelper758 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper759 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[ai][aj].liberties>1;
}

static int
autohelper760 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>2;
}

static int
autohelper763 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 0, ti, tj, &ai, &aj, transformation);

  return (!(worm[ai][aj].attacki != -1));
}

static int
autohelper764 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -2, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1) && worm[ai][aj].liberties>2;
}

static int
autohelper766 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj, Bi, Bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 2, ti, tj, &ai, &aj, transformation);
  offset(1, 2, ti, tj, &bi, &bj, transformation);
  offset(0, 2, ti, tj, &Ai, &Aj, transformation);
  offset(-1, 1, ti, tj, &Bi, &Bj, transformation);
  offset(1, 1, ti, tj, &Ci, &Cj, transformation);

  return worm[Ai][Aj].liberties<=2 && worm[Bi][Bj].liberties>1 && worm[Ci][Cj].liberties>1 &&!play_attack_defend_n(color, 1, 1, ti, tj, ai, aj) && !play_attack_defend_n(color, 1, 1, ti, tj, bi, bj);
}

static int
autohelper773 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &Bi, &Bj, transformation);

  return worm[ai][aj].liberties==worm[Bi][Bj].liberties ;
}

static int
autohelper777 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 0, ti, tj, &bi, &bj, transformation);

  return (worm[ai][aj].attacki != -1) && does_defend(bi,bj,ai,aj);
}

static int
autohelper780 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -3, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2;
}

static int
autohelper781 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);

  return (dragon[ai][aj].safety==CRITICAL);
}

static int
autohelper782 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2 && (dragon[ai][aj].safety==CRITICAL);
}

static int
autohelper788 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-3, 1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2;
}

static int
autohelper789 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ci, cj, di, dj, Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 2, ti, tj, &ci, &cj, transformation);
  offset(2, 2, ti, tj, &di, &dj, transformation);
  offset(-2, 0, ti, tj, &Ai, &Aj, transformation);
  offset(2, 0, ti, tj, &Bi, &Bj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[Bi][Bj].liberties==2 && worm[ci][cj].liberties>1 && worm[di][dj].liberties>1;
}

static int
autohelper791 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);
  offset(2, -1, ti, tj, &bi, &bj, transformation);
  offset(1, 0, ti, tj, &Ci, &Cj, transformation);

  return !play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, Ci, Cj);
}

static int
autohelper793 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(0, 0, ti, tj, &ci, &cj, transformation);
  offset(1, -2, ti, tj, &di, &dj, transformation);

  return  play_attack_defend_n(OTHER_COLOR(color), 1, 3, ai, aj, bi, bj, ci, cj, di, dj);
}

static int
autohelper798 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(-1, 2, ti, tj, &bi, &bj, transformation);

  return  !(worm[ai][aj].attacki != -1)&&!(worm[bi][bj].attacki != -1);
}

static int
autohelper799 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 4, ti, tj, &ai, &aj, transformation);

  return  (dragon[ai][aj].status == DEAD);
}

static int
autohelper801 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return  (terri_color(ai,aj) == OTHER_COLOR(color));
}

static int
autohelper807 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);

  return  worm[ai][aj].liberties>2;
}

static int
autohelper808 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &Bi, &Bj, transformation);

  return  !play_attack_defend_n(color, 1, 1, ai, aj, Bi, Bj);
}

static int
autohelper810 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &Bi, &Bj, transformation);

  return  (worm[Bi][Bj].attacki != -1) && does_defend(ai,aj,Bi,Bj);
}

static int
autohelper811 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -2, ti, tj, &Ai, &Aj, transformation);

  return !(worm[Ai][Aj].attacki != -1) || (worm[Ai][Aj].defendi != -1);
}

static int
autohelper812 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -2, ti, tj, &Ai, &Aj, transformation);
  offset(-2, -1, ti, tj, &Bi, &Bj, transformation);

  return  (worm[Ai][Aj].liberties>2)&&(worm[Bi][Bj].liberties>2);
}

static int
autohelper813 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);

  return !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj);
}

static int
autohelper817 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper827 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].ko;
}

static int
autohelper828 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].ko;
}

static int
autohelper829 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Bi, Bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);
  offset(1, 1, ti, tj, &Bi, &Bj, transformation);
  offset(0, 2, ti, tj, &Ci, &Cj, transformation);

  return (worm[Ai][Aj].liberties>1 || worm[Ai][Aj].ko) && (worm[Bi][Bj].liberties>1 || worm[Bi][Bj].ko) && (worm[Ci][Cj].liberties>1 || worm[Ci][Cj].ko) ;
}

static int
autohelper830 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);
  offset(0, 2, ti, tj, &Ci, &Cj, transformation);

  return (worm[Ai][Aj].liberties>1 || worm[Ai][Aj].ko) && (worm[Ci][Cj].liberties>1 || worm[Ci][Cj].ko) ;
}

static int
autohelper831 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].ko;
}

static int
autohelper832 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].ko;
}

static int
autohelper841 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(2, 0, ti, tj, &ai, &aj, transformation);
  offset(3, 1, ti, tj, &bi, &bj, transformation);

  return worm[ai][aj].liberties>2 && worm[bi][bj].liberties>2;
}

static int
autohelper855 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ei, ej, fi, fj, gi, gj, Ci, Cj, Di, Dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, 1, ti, tj, &ei, &ej, transformation);
  offset(1, 0, ti, tj, &fi, &fj, transformation);
  offset(0, 0, ti, tj, &gi, &gj, transformation);
  offset(-1, -1, ti, tj, &Ci, &Cj, transformation);
  offset(-2, 0, ti, tj, &Di, &Dj, transformation);

  return worm[Ci][Cj].liberties>1 && worm[Di][Dj].liberties>1 && (play_attack_defend_n(OTHER_COLOR(color), 1, 2, gi, gj, ei, ej, ai, aj) || !play_attack_defend_n(OTHER_COLOR(color), 1, 3, gi, gj, ei, ej, fi, fj, fi, fj)) &&!defend_against(ei,ej,color,gi,gj);
}

static int
autohelper860 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>1;
}

static int
autohelper861 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[ai][aj].liberties==2 && worm[bi][bj].liberties==2 && worm[Ai][Aj].liberties>1;
}

static int
autohelper866 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj, gi, gj, hi, hj, ii, ij;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &ci, &cj, transformation);
  offset(0, 2, ti, tj, &di, &dj, transformation);
  offset(1, 2, ti, tj, &ei, &ej, transformation);
  offset(-2, 0, ti, tj, &fi, &fj, transformation);
  offset(-2, -1, ti, tj, &gi, &gj, transformation);
  offset(1, 1, ti, tj, &hi, &hj, transformation);
  offset(-1, -1, ti, tj, &ii, &ij, transformation);

  return play_attack_defend_n(color, 1, 5, ai, aj, bi, bj, ci, cj, di, dj, ei, ej, di, dj) && play_attack_defend_n(color, 1, 5, ai, aj, bi, bj, ci, cj, di, dj, ei, ej, hi, hj) &&play_attack_defend_n(color, 1, 5, ai, aj, ci, cj, bi, bj, fi, fj, gi, gj, fi, fj) && play_attack_defend_n(color, 1, 5, ai, aj, ci, cj, bi, bj, fi, fj, gi, gj, ii, ij);
}

static int
autohelper871 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, ci, cj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -2, ti, tj, &ci, &cj, transformation);
  offset(-1, 0, ti, tj, &Bi, &Bj, transformation);

  return (worm[ci][cj].attacki != -1) && play_attack_defend_n(color, 0, 2, ai, aj, Bi, Bj, ci, cj);
}

static int
autohelper874 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[ai][aj].liberties>1 && worm[bi][bj].liberties>1;
}

static int
autohelper875 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(2, 2, ti, tj, &ai, &aj, transformation);
  offset(1, 2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[ai][aj].liberties>1;
}

static int
autohelper876 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 2, ti, tj, &ai, &aj, transformation);
  offset(-1, 2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==2 && worm[ai][aj].liberties>1;
}

static int
autohelper877 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties==3;
}

static int
autohelper880 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &Ai, &Aj, transformation);

  return  worm[Ai][Aj].liberties==2;
}

static int
autohelper883 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, -2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties>2;
}

static int
autohelper884 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>2;
}

static int
autohelper885 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ci, Cj, Di, Dj, Ei, Ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Ci, &Cj, transformation);
  offset(0, -1, ti, tj, &Di, &Dj, transformation);
  offset(-1, 1, ti, tj, &Ei, &Ej, transformation);

  return worm[bi][bj].liberties>1 && !(worm[Ci][Cj].attacki != -1) && play_attack_defend_n(color, 1, 1, ai, aj, Ci, Cj) &&!(play_attack_defend_n(color, 1, 2, ai, aj, Di, Dj, bi, bj) && play_attack_defend_n(color, 1, 2, ai, aj, Di, Dj, ai, aj)) &&(worm[Ci][Cj].liberties>2 || !play_attack_defend_n(color, 1, 2, ai, aj, Ei, Ej, bi, bj));
}

static int
autohelper886 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, Ci, Cj, Di, Dj, Ei, Ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &Ci, &Cj, transformation);
  offset(0, -1, ti, tj, &Di, &Dj, transformation);
  offset(-1, 1, ti, tj, &Ei, &Ej, transformation);

  return worm[bi][bj].liberties>1 && !(worm[Ci][Cj].attacki != -1) && play_attack_defend_n(color, 1, 1, ai, aj, Ci, Cj) &&!(play_attack_defend_n(color, 1, 2, ai, aj, Di, Dj, bi, bj) && play_attack_defend_n(color, 1, 2, ai, aj, Di, Dj, ai, aj)) &&(worm[Ci][Cj].liberties>2 || !play_attack_defend_n(color, 1, 2, ai, aj, Ei, Ej, bi, bj));
}

static int
autohelper887 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, fi, fj, Ci, Cj, Di, Dj, Ei, Ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(-2, 0, ti, tj, &fi, &fj, transformation);
  offset(-1, 0, ti, tj, &Ci, &Cj, transformation);
  offset(0, -1, ti, tj, &Di, &Dj, transformation);
  offset(-1, 1, ti, tj, &Ei, &Ej, transformation);

  return worm[bi][bj].liberties>1 && !(worm[Ci][Cj].attacki != -1) && play_attack_defend_n(color, 1, 1, ai, aj, Ci, Cj) &&!(play_attack_defend_n(color, 1, 2, ai, aj, Di, Dj, bi, bj) && play_attack_defend_n(color, 1, 2, ai, aj, Di, Dj, ai, aj)) &&(worm[Ci][Cj].liberties>2 || !play_attack_defend_n(color, 1, 2, ai, aj, Ei, Ej, bi, bj)) && !(dragon[fi][fj].safety==CRITICAL);
}

static int
autohelper888 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(0, -2, ti, tj, &ci, &cj, transformation);

  return (worm[ci][cj].attacki != -1) && !(worm[ci][cj].defendi != -1) && !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj);
}

static int
autohelper889 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);

  return (worm[ai][aj].attacki != -1) && !(worm[ai][aj].defendi != -1) && !(dragon[bi][bj].status == DEAD);
}

static int
autohelper894 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj, gi, gj, Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &ci, &cj, transformation);
  offset(0, 2, ti, tj, &di, &dj, transformation);
  offset(1, 1, ti, tj, &ei, &ej, transformation);
  offset(-1, 2, ti, tj, &fi, &fj, transformation);
  offset(0, 0, ti, tj, &gi, &gj, transformation);
  offset(-2, 0, ti, tj, &Ai, &Aj, transformation);

  return (worm[Ai][Aj].liberties>1) && play_attack_defend_n(color, 1, 6, gi, gj, ai, aj, bi, bj, ci, cj, di, dj, ei, ej, fi, fj);
}

static int
autohelper895 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);
  offset(0, -2, ti, tj, &ci, &cj, transformation);
  offset(1, -1, ti, tj, &di, &dj, transformation);

  return !play_attack_defend_n(color, 1, 1, ai, aj, bi, bj) && !play_attack_defend_n(color, 1, 1, ai, aj, ci, cj) && !play_attack_defend_n(color, 1, 1, ai, aj, di, dj);
}

static int
autohelper898 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, ei, ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(0, 1, ti, tj, &ci, &cj, transformation);
  offset(-1, -1, ti, tj, &di, &dj, transformation);
  offset(1, -1, ti, tj, &ei, &ej, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, ci, cj, ci, cj) && !play_attack_defend_n(color, 1, 5, ai, aj, bi, bj, ci, cj, bi, bj, di, dj, di, dj) && !play_attack_defend_n(color, 1, 5, ai, aj, bi, bj, ci, cj, bi, bj, ei, ej, ei, ej);
}

static int
autohelper902 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);

  return  worm[ai][aj].liberties==2;
}

static int
autohelper903 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj, Ci, Cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &Bi, &Bj, transformation);
  offset(0, 2, ti, tj, &Ci, &Cj, transformation);

  return  !(worm[Bi][Bj].attacki != -1)&&play_attack_defend_n(color, 1, 2, ai, aj, Ci, Cj, Ci, Cj);
}

static int
autohelper905 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Ai, Aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &Ai, &Aj, transformation);
  offset(-1, 0, ti, tj, &Bi, &Bj, transformation);

  return  (dragon[Ai][Aj].status == ALIVE)&&play_attack_defend_n(color, 1, 2, ai, aj, Bi, Bj, Bi, Bj);
}

static int
autohelper907 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &bi, &bj, transformation);
  offset(0, 0, ti, tj, &ci, &cj, transformation);
  offset(2, -1, ti, tj, &di, &dj, transformation);

  return  play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, di, dj);
}

static int
autohelper908 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(2, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);

  return  !(dragon[ai][aj].status == ALIVE) || !(dragon[bi][bj].status == ALIVE);
}

static int
autohelper909 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(0, -2, ti, tj, &ci, &cj, transformation);
  offset(-1, -1, ti, tj, &di, &dj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj) && proper_eye_space(ci,cj) && !play_attack_defend_n(OTHER_COLOR(color), 1, 1, ai, aj, di, dj);
}

static int
autohelper910 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 2, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &bi, &bj, transformation);

  return play_attack_defend_n(OTHER_COLOR(color), 1, 1, ai, aj, bi, bj);
}

static int
autohelper911 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj) && !play_attack_defend_n(OTHER_COLOR(color), 1, 1, ai, aj, ci, cj);
}

static int
autohelper912 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper914 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(0, -2, ti, tj, &bi, &bj, transformation);

  return proper_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper915 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==3;
}

static int
autohelper916 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);

  return proper_eye_space(ai,aj);
}

static int
autohelper917 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &ai, &aj, transformation);
  offset(0, -2, ti, tj, &bi, &bj, transformation);

  return proper_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper918 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper919 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && marginal_eye_space(bi,bj);
}

static int
autohelper920 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj, Ei, Ej;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(0, -2, ti, tj, &ci, &cj, transformation);
  offset(-1, 1, ti, tj, &di, &dj, transformation);
  offset(-1, -1, ti, tj, &Ei, &Ej, transformation);

  return marginal_eye_space(ai,aj) && marginal_eye_space(bi,bj) && marginal_eye_space(di,dj) &&(play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, bi, bj) || play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, Ei, Ej));
}

static int
autohelper921 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, Di, Dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &bi, &bj, transformation);
  offset(-1, 1, ti, tj, &ci, &cj, transformation);
  offset(-1, 0, ti, tj, &Di, &Dj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj) && (!play_attack_defend_n(color, 0, 3, ai, aj, bi, bj, ci, cj, bi, bj) || !play_attack_defend_n(color, 0, 3, ai, aj, bi, bj, ci, cj, Di, Dj));
}

static int
autohelper922 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj) && play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj);
}

static int
autohelper923 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj, di, dj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);
  offset(0, -1, ti, tj, &di, &dj, transformation);

  return eye_space(ai,aj) && eye_space(bi,bj) && safe_move(bi,bj,OTHER_COLOR(color));
}

static int
autohelper926 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper927 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper928 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper930 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].status == DEAD);
}

static int
autohelper931 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].status == DEAD);
}

static int
autohelper932 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return !(dragon[Ai][Aj].status == DEAD);
}

static int
autohelper933 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return !(dragon[Ai][Aj].status == DEAD);
}

static int
autohelper937 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].status == DEAD);
}

static int
autohelper938 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 0, ti, tj, &Ai, &Aj, transformation);

  return !(dragon[Ai][Aj].status == DEAD);
}

static int
autohelper939 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &ai, &aj, transformation);

  return proper_eye_space(ai,aj);
}

static int
autohelper942 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);
  offset(-1, -1, ti, tj, &bi, &bj, transformation);

  return proper_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper943 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);
  offset(1, -2, ti, tj, &bi, &bj, transformation);

  return proper_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper944 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -1, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper946 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper947 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper949 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, -2, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties>3;
}

static int
autohelper950 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, -1, ti, tj, &ai, &aj, transformation);

  return !(dragon[ai][aj].status == DEAD);
}

static int
autohelper951 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return !(dragon[Ai][Aj].status == DEAD);
}

static int
autohelper953 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper954 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 1, ti, tj, &ai, &aj, transformation);

  return proper_eye_space(ai,aj);
}

static int
autohelper956 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper958 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && !safe_move(bi,bj,color);
}

static int
autohelper959 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);

  return marginal_eye_space(ai,aj);
}

static int
autohelper960 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 1, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper962 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return proper_eye_space(ai,aj) || proper_eye_space(bi,bj);
}

static int
autohelper963 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(1, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return proper_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper964 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper965 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper966 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper967 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, -1, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper968 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(1, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, 0, ti, tj, &ci, &cj, transformation);

  return play_attack_defend_n(color, 1, 2, ai, aj, bi, bj, bi, bj) && marginal_eye_space(ai,aj) && proper_eye_space(ci,cj);
}

static int
autohelper969 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);

  return marginal_eye_space(ai,aj) && proper_eye_space(bi,bj);
}

static int
autohelper973 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 1, ti, tj, &Ai, &Aj, transformation);

  return !(dragon[Ai][Aj].safety==CRITICAL);
}

static int
autohelper1068 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, ci, cj, ei, ej, gi, gj, Bi, Bj, Di, Dj, Fi, Fj, Hi, Hj, Ii, Ij;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 1, ti, tj, &ci, &cj, transformation);
  offset(-1, 2, ti, tj, &ei, &ej, transformation);
  offset(-2, 0, ti, tj, &gi, &gj, transformation);
  offset(0, 1, ti, tj, &Bi, &Bj, transformation);
  offset(-1, 0, ti, tj, &Di, &Dj, transformation);
  offset(1, 0, ti, tj, &Fi, &Fj, transformation);
  offset(0, -1, ti, tj, &Hi, &Hj, transformation);
  offset(-2, 1, ti, tj, &Ii, &Ij, transformation);

  return play_attack_defend_n(color, 1, 5, ai, aj, Bi, Bj, ci, cj, Di, Dj, ei, ej, Bi, Bj) && play_attack_defend_n(color, 1, 8, ai, aj, Bi, Bj, ci, cj, Di, Dj, ei, ej, Fi, Fj, gi, gj, Hi, Hj, Ii, Ij);;
}

static int
autohelper1088 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(-1, 0, ti, tj, &bi, &bj, transformation);
  offset(-1, -1, ti, tj, &ci, &cj, transformation);

  return  play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, bi, bj);
}

static int
autohelper1090 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, bi, bj, ci, cj;
  UNUSED(patt);
  UNUSED(color);

  offset(2, -1, ti, tj, &ai, &aj, transformation);
  offset(1, -1, ti, tj, &bi, &bj, transformation);
  offset(1, -2, ti, tj, &ci, &cj, transformation);

  return  !play_attack_defend_n(color, 1, 3, ai, aj, bi, bj, ci, cj, bi, bj);
}

static int
autohelper1092 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, 1, ti, tj, &Ai, &Aj, transformation);

  return  worm[Ai][Aj].liberties>2;
}

static int
autohelper1093 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj, Bi, Bj;
  UNUSED(patt);
  UNUSED(color);

  offset(0, 0, ti, tj, &ai, &aj, transformation);
  offset(0, 1, ti, tj, &Bi, &Bj, transformation);

  return  play_attack_defend_n(color, 1, 1, ai, aj, Bi, Bj);
}

static int
autohelper1102 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, -1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==3 && seki_helper(Ai,Aj);
}

static int
autohelper1103 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, 0, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties<=3 && seki_helper(ai,aj);
}

static int
autohelper1104 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -2, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==5 && seki_helper(Ai,Aj);
}

static int
autohelper1105 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -2, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties==5 && seki_helper(ai,aj);
}

static int
autohelper1106 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties==5 && seki_helper(ai,aj);
}

static int
autohelper1107 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, -1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==4 && seki_helper(Ai,Aj);
}

static int
autohelper1108 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-2, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties==4 && seki_helper(ai,aj);
}

static int
autohelper1109 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int Ai, Aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &Ai, &Aj, transformation);

  return worm[Ai][Aj].liberties==4 && seki_helper(Ai,Aj);
}

static int
autohelper1110 (struct pattern *patt, int transformation, int ti, int tj, int color)
{
  int ai, aj;
  UNUSED(patt);
  UNUSED(color);

  offset(-1, -1, ti, tj, &ai, &aj, transformation);

  return worm[ai][aj].liberties<=5 && seki_helper(ai,aj);
}

struct pattern pat[]={
  {pat1128,6,8, "LD1",0,0,2,1,0x2,1,1,
    { 0x003c3c2c, 0x00f0f000, 0xf0f00000, 0x3f3e0000, 0xf0f00000, 0x3c3c0000, 0x003e3f00, 0x00f0f0e0},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 200,200,0,NULL, 1088,0,0,0,0,0,connect_to_live_helper,NULL,3},
  {pat422,9,8, "EC26",0,-2,2,2,0x2,2,0,
    { 0x0030fdfc, 0xc0f0c040, 0xfd300000, 0x0f3f0f04, 0xc0f0c040, 0xfd300000, 0x0f3f0f04, 0x0030fdfc},
    { 0x00109800, 0x80508000, 0x98100000, 0x08140800, 0x80508000, 0x98100000, 0x08140800, 0x00109800}
   , 130,140,0,NULL, 258,5,5,0,0,0,connect_under_helper,NULL,0},
  {pat423,10,8, "EC27",0,-2,2,2,0x2,2,1,
    { 0x0030ffff, 0xc0f0c0c0, 0xfd300000, 0x0f3f0f04, 0xc0f0c040, 0xff300000, 0x0f3f0f0f, 0x0030fdfc},
    { 0x00109900, 0x80508040, 0x98100000, 0x08140800, 0x80508000, 0x99100000, 0x08140804, 0x00109800}
   , 130,140,0,NULL, 258,5,5,0,0,0,NULL,autohelper423,0},
  {pat736,17,8, "ED46",0,0,6,2,0x4,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00182020, 0x00902000, 0x20900000, 0x201a0000, 0x20900000, 0x20180000, 0x001a2000, 0x00902020}
   , 120,120,0,NULL, 3,0,0,0,0,0,eye_stealing_helper,NULL,0},
  {pat1109,12,8, "S7",0,0,2,3,0xa,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x002a0000, 0x00202020, 0x00a00000, 0x20200000, 0x20200000, 0x002a0000, 0x00202020, 0x00a00000}
   , 120,120,0,NULL, 9,0,0,0,0,0,NULL,autohelper1109,3},
  {pat835,4,8, "CD26",0,0,2,1,0x0,1,1,
    { 0x00303c30, 0x00f0c000, 0xf0300000, 0x0c3f0000, 0xc0f00000, 0x3c300000, 0x003f0c00, 0x0030f030},
    { 0x00102010, 0x00900000, 0x20100000, 0x00190000, 0x00900000, 0x20100000, 0x00190000, 0x00102010}
   , 120,120,0,NULL, 0,0,0,0,0,0,take_valuable_helper,NULL,0},
  {pat1110,12,8, "S8",0,0,2,3,0xa,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00150000, 0x00101010, 0x00500000, 0x10100000, 0x10100000, 0x00150000, 0x00101010, 0x00500000}
   , 120,120,0,NULL, 2,0,0,0,0,0,NULL,autohelper1110,0},
  {pat218,10,8, "EB1608",0,-2,2,1,0x2,1,-2,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0x003cffff},
    { 0x00101868, 0x00508000, 0x90100000, 0x0a160100, 0x80500000, 0x18100000, 0x01160a00, 0x001090a4}
   , 88,118,1,assist_params218, 32,0,0,5,0,0,NULL,autohelper218,0},
  {pat1032,28,8, "F602",-1,0,2,7,0x2,0,5,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 70,115,1,assist_params1032, 0,0,0,5,0,0,NULL,NULL,0},
  {pat461,8,8, "EC64",0,-1,1,3,0x2,1,1,
    { 0x003fbf00, 0x80f0f0f0, 0xf8f00000, 0x3c3c0800, 0xf0f08000, 0xbf3f0000, 0x083c3c3c, 0x00f0f800},
    { 0x00190000, 0x00102010, 0x00900000, 0x20100000, 0x20100000, 0x00190000, 0x00102010, 0x00900000}
   , 100,110,0,NULL, 104,5,5,0,0,0,connect_under_helper,autohelper461,0},
  {pat424,7,8, "EC28",0,-1,2,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00206400, 0x40a04000, 0x64200000, 0x04280400, 0x40a04000, 0x64200000, 0x04280400, 0x00206400}
   , 100,110,0,NULL, 104,5,5,0,0,0,connect_under_helper,NULL,3},
  {pat99,16,8, "EB612",-1,-1,3,2,0x2,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x0010a400, 0x80904000, 0x68100000, 0x04180800, 0x40908000, 0xa4100000, 0x08180400, 0x00106800}
   , 52,102,2,assist_params99, 0,5,10,5,0,0,NULL,autohelper99,0},
  {pat532,6,8, "CC8",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3f0c, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3f0c},
    { 0x00201080, 0x00600000, 0x11200000, 0x00240204, 0x00600040, 0x10200000, 0x02240000, 0x00201108}
   , 90,101,0,NULL, 448,5,5,0,1,1,NULL,autohelper532,3},
  {pat282,12,8, "CB227",0,0,3,2,0x0,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00292400, 0x00a06010, 0x60a00000, 0x24280000, 0x60a00000, 0x24290000, 0x00282410, 0x00a06000}
   , 90,101,0,NULL, 64,5,5,0,1,1,NULL,autohelper282,3},
  {pat555,11,8, "CC31",-1,0,1,4,0x0,0,3,
    { 0x053f3f00, 0x00f0f4f4, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0500, 0x003c7c7c, 0x40f0f000},
    { 0x00251000, 0x00601010, 0x10600000, 0x10240000, 0x10600000, 0x10250000, 0x00241010, 0x00601000}
   , 90,100,0,NULL, 64,5,5,0,0,0,NULL,autohelper555,3},
  {pat673,8,8, "CC149",0,0,2,2,0x0,1,2,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x00122408, 0x00904020, 0x60100000, 0x06180000, 0x40900000, 0x24120000, 0x00180620, 0x00106080}
   , 90,100,0,NULL, 266,0,5,5,0,0,NULL,autohelper673,0},
  {pat1130,23,8, "LD3",-1,-2,3,2,0x9,1,-2,
    { 0xfffffdf7, 0xfcfcfc7c, 0xffffff00, 0xfdffffff, 0xfcfcfcfc, 0xfdffff00, 0xfffffdf7, 0xffffff7f},
    { 0x00101862, 0x00508000, 0x90100000, 0x08160100, 0x80500000, 0x18100000, 0x01160802, 0x00109024}
   , 100,100,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat669,9,8, "CC145",0,-2,2,0,0x0,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00106020, 0x40900000, 0x26100000, 0x001a0408, 0x00904080, 0x60100000, 0x041a0000, 0x00102620}
   , 89,100,0,NULL, 10,5,5,0,1,1,NULL,autohelper669,0},
  {pat827,7,8, "CD18",0,-1,2,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00106488, 0x40904000, 0x64100000, 0x06180600, 0x40904000, 0x64100000, 0x06180600, 0x00106488}
   , 100,100,0,NULL, 256,0,0,0,0,0,NULL,autohelper827,0},
  {pat846,7,4, "CD37",0,-1,2,1,0x0,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204410, 0x40204000, 0x44200000, 0x04210400, 0x40204000, 0x44200000, 0x04210400, 0x00204410}
   , 100,100,0,NULL, 0,0,0,0,0,0,two_half_helper,NULL,3},
  {pat847,7,4, "CD38",0,-1,2,1,0x0,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00108820, 0x80108000, 0x88100000, 0x08120800, 0x80108000, 0x88100000, 0x08120800, 0x00108820}
   , 100,100,0,NULL, 0,0,0,0,0,0,two_half_helper,NULL,0},
  {pat415,24,8, "EC19",0,0,2,7,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00150a00, 0x00109090, 0x80500000, 0x18100000, 0x90100000, 0x0a150000, 0x00101818, 0x00508000}
   , 90,100,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat81,18,8, "EB519",-1,-3,3,0,0x8,1,-1,
    { 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff, 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f},
    { 0x00100090, 0x00100000, 0x00100000, 0x00110200, 0x00100000, 0x00100000, 0x02110000, 0x00100018}
   , 65,100,2,assist_params81, 0,10,10,5,0,0,NULL,NULL,0},
  {pat1129,19,8, "LD2",-1,-2,3,1,0x9,1,-2,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff},
    { 0x00101868, 0x00508000, 0x90100000, 0x0a160100, 0x80500000, 0x18100000, 0x01160a00, 0x001090a4}
   , 100,100,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat533,5,2, "CC9",0,-1,2,1,0x0,1,0,
    { 0x0030fc30, 0xc0f0c000, 0xfc300000, 0x0c3f0c00, 0xc0f0c000, 0xfc300000, 0x0c3f0c00, 0x0030fc30},
    { 0x00108810, 0x80108000, 0x88100000, 0x08110800, 0x80108000, 0x88100000, 0x08110800, 0x00108810}
   , 90,100,0,NULL, 448,5,5,0,0,0,NULL,NULL,0},
  {pat832,7,8, "CD23",0,-1,2,1,0x2,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00104498, 0x40104000, 0x44100000, 0x06110600, 0x40104000, 0x44100000, 0x06110600, 0x00104498}
   , 100,100,0,NULL, 256,0,0,0,0,0,NULL,autohelper832,0},
  {pat828,7,8, "CD19",0,-1,2,1,0x2,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00208864, 0x80208000, 0x88200000, 0x09220900, 0x80208000, 0x88200000, 0x09220900, 0x00208864}
   , 100,100,0,NULL, 64,0,0,0,0,0,NULL,autohelper828,3},
  {pat379,9,8, "CB324",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3e0000, 0x003f3f2f, 0x00f0f0e0, 0xf0f00000, 0x3f3f0000, 0x003e3f3f},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200006, 0x00200040, 0x00200000, 0x00200000, 0x00200102}
   , 40,100,2,assist_params379, 10,30,10,5,0,0,NULL,autohelper379,3},
  {pat830,6,8, "CD21",0,-1,1,2,0x2,1,0,
    { 0x003cff00, 0xc0f0f0c0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3c0000, 0x0c3c3c0c, 0x00f0fc00},
    { 0x00184600, 0x40106080, 0x44900000, 0x24100400, 0x60104000, 0x46180000, 0x04102408, 0x00904400}
   , 100,100,0,NULL, 0,0,0,0,0,0,edge_ko_important_helper,autohelper830,0},
  {pat831,7,8, "CD22",0,-1,2,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00209844, 0x80608000, 0x98200000, 0x09240900, 0x80608000, 0x98200000, 0x09240900, 0x00209844}
   , 100,100,0,NULL, 64,0,0,0,0,0,NULL,autohelper831,3},
  {pat508,9,8, "EC111",0,-1,2,2,0x8,1,1,
    { 0x00fcfff0, 0xf0f0f0c0, 0xfcfc0000, 0x3c3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3c0c, 0x00fcfc3c},
    { 0x00180100, 0x00102040, 0x00900000, 0x20100000, 0x20100000, 0x01180000, 0x00102004, 0x00900000}
   , 80,100,0,NULL, 104,10,10,0,0,0,NULL,autohelper508,0},
  {pat826,6,8, "CD17",0,-1,1,2,0x2,1,0,
    { 0x003cff00, 0xc0f0f0c0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3c0000, 0x0c3c3c0c, 0x00f0fc00},
    { 0x00248900, 0x80209040, 0x88600000, 0x18200800, 0x90208000, 0x89240000, 0x08201804, 0x00608800}
   , 100,100,0,NULL, 0,0,0,0,0,0,edge_ko_important_helper,NULL,3},
  {pat825,8,8, "CD16",0,-1,2,2,0x0,1,0,
    { 0x003cff3c, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0c, 0x00f0fcf0},
    { 0x00248924, 0x80209040, 0x88600000, 0x19220800, 0x90208000, 0x89240000, 0x08221904, 0x00608860}
   , 100,100,0,NULL, 0,0,0,0,0,0,ko_important_helper,NULL,3},
  {pat737,18,8, "ED47",0,0,6,2,0x4,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00182021, 0x00902000, 0x20900000, 0x201a0000, 0x20900000, 0x20180000, 0x001a2001, 0x00902020}
   , 100,100,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat878,8,8, "CD69",0,-3,2,0,0x0,1,-2,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0f},
    { 0x00101040, 0x00500000, 0x10100000, 0x00140100, 0x00500000, 0x10100000, 0x01140000, 0x00101004}
   , 100,100,0,NULL, 0,0,0,0,0,0,special_half_eye_helper,NULL,0},
  {pat829,8,8, "CD20",0,-1,2,2,0x0,1,0,
    { 0x003cff3c, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0c, 0x00f0fcf0},
    { 0x00184618, 0x40106080, 0x44900000, 0x26110400, 0x60104000, 0x46180000, 0x04112608, 0x00904490}
   , 100,100,0,NULL, 0,0,0,0,0,0,ko_important_helper,autohelper829,0},
  {pat766,9,4, "ED76",0,-1,2,1,0x8,1,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00241824, 0x00609000, 0x90600000, 0x19260000, 0x90600000, 0x18240000, 0x00261900, 0x00609060}
   , 100,100,0,NULL, 1,0,0,0,0,0,sacrifice_another_stone_tesuji_helper,autohelper766,3},
  {pat1059,19,8, "EJ1",-1,-1,2,3,0x2,0,1,
    { 0x3fbfbfff, 0xa0fcfcfc, 0xf8f8f000, 0xffff2b00, 0xfcfca000, 0xbfbf3f00, 0x2bffffff, 0xf0f8f8fc},
    { 0x00120900, 0x00108060, 0x80100000, 0x08100000, 0x80100000, 0x09120000, 0x00100824, 0x00108000}
   , 84,99,0,NULL, 32,5,5,5,0,0,NULL,NULL,0},
  {pat636,7,8, "CC112",0,-1,2,1,0x0,1,0,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00108410, 0x80104000, 0x48100000, 0x04110800, 0x40108000, 0x84100000, 0x08110400, 0x00104810}
   , 80,99,2,assist_params636, 0,5,5,0,-1,-1,double_break_helper,NULL,0},
  {pat70,19,8, "EB508",-1,-2,3,2,0x2,0,-1,
    { 0x30ffffff, 0xf0fcf0f0, 0xfdff3000, 0x3fff3f34, 0xf0fcf070, 0xffff3000, 0x3fff3f3f, 0x30fffdfc},
    { 0x00201400, 0x00604000, 0x50200000, 0x04240000, 0x40600000, 0x14200000, 0x00240400, 0x00205000}
   , 68,98,1,assist_params70, 0,5,5,5,0,0,hane_on_4_helper,NULL,3},
  {pat1079,25,8, "EJ23",0,-3,4,2,0x2,1,1,
    { 0x00fcffff, 0xf0f0f0c0, 0xfffe0000, 0x3f3f3f2f, 0xf0f0f0e0, 0xfffc0000, 0x3f3f3f0f, 0x00feffff},
    { 0x00201069, 0x00600000, 0x10200000, 0x02260101, 0x00600000, 0x10200000, 0x01260201, 0x002010a5}
   , 87,98,0,NULL, 0,5,5,0,1,1,NULL,NULL,3},
  {pat155,17,8, "EB820",0,-2,3,2,0x2,1,1,
    { 0x0034ffff, 0xc0f0d0c0, 0xff700000, 0x1f3f0f0f, 0xd0f0c0c0, 0xff340000, 0x0f3f1f0f, 0x0070ffff},
    { 0x00209040, 0x80600000, 0x1a200000, 0x00240909, 0x00608080, 0x90200000, 0x09240000, 0x00201a05}
   , 83,98,0,NULL, 42,5,5,5,0,0,NULL,NULL,3},
  {pat658,10,8, "CC134",0,-1,2,2,0x0,0,1,
    { 0x003dff3d, 0xc0f0f0d0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3d0000, 0x0c3f3f1d, 0x00f0fcf0},
    { 0x0010a610, 0x80904080, 0x68100000, 0x04190800, 0x40908000, 0xa6100000, 0x08190408, 0x00106810}
   , 83,98,0,NULL, 64,5,5,0,5,5,NULL,autohelper658,0},
  {pat69,19,8, "EB507",-1,-2,3,2,0x2,0,-1,
    { 0x30ffffff, 0xf0fcf0f0, 0xffff3000, 0x3fff3f3c, 0xf0fcf0f0, 0xffff3000, 0x3fff3f3f, 0x30fffffc},
    { 0x00201400, 0x00604000, 0x51200000, 0x04240004, 0x40600040, 0x14200000, 0x00240400, 0x00205100}
   , 68,98,1,assist_params69, 0,5,5,5,0,0,NULL,NULL,3},
  {pat36,30,8, "EB301",-1,-3,4,1,0x8,3,-2,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110000, 0x00100010}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat15,20,8, "EB103",-1,-4,2,0,0x1,1,-3,
    { 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f},
    { 0x00101010, 0x00500000, 0x10100000, 0x00150002, 0x00500000, 0x10100000, 0x00150000, 0x00101012}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat212,16,8, "EB1602",-2,-1,1,2,0x1,1,0,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00180200, 0x00102080, 0x00900000, 0x20100000, 0x20100000, 0x02180000, 0x00102008, 0x00900000}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat151,16,8, "EB816",-1,-1,2,2,0x8,-1,1,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00180606, 0x00106080, 0x40900000, 0x25100000, 0x60100000, 0x06180000, 0x0010250a, 0x00904040}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,autohelper151,0},
  {pat550,4,4, "CC26",0,0,2,2,0x0,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 87,97,0,NULL, 0,5,5,0,0,0,diag_miai_helper,autohelper550,3},
  {pat1078,25,8, "EJ22",0,-3,4,2,0x2,1,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfffe0000, 0x3f3f3f2f, 0xf0f0f0e0, 0xfffc0000, 0x3f3f3f0f, 0x00feffff},
    { 0x00200061, 0x00200000, 0x00200000, 0x00220101, 0x00200000, 0x00200000, 0x01220001, 0x00200025}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat186,13,8, "EB1203",-1,-2,2,1,0x8,0,-1,
    { 0xf0fcfcc0, 0xfcfcf000, 0xffff3f00, 0x3cfcffff, 0xf0fcfcfc, 0xfcfcf000, 0xfffc3c00, 0x3fffff0f},
    { 0x00281840, 0x0060a000, 0x90a00000, 0x28240100, 0xa0600000, 0x18280000, 0x01242800, 0x00a09004}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat201,23,8, "EB1403",-2,-1,3,2,0x2,-1,0,
    { 0x7fffffff, 0xf7fffffc, 0xfcfcf4fc, 0xffff7f00, 0xfffff700, 0xffff7ffc, 0x7fffffff, 0xf4fcfcfc},
    { 0x00181800, 0x0050a000, 0x90900000, 0x28140000, 0xa0500000, 0x18180000, 0x00142800, 0x00909000}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat66,24,8, "EB504",-2,-2,1,3,0x1,0,-1,
    { 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00},
    { 0x00201200, 0x00600080, 0x10200000, 0x00240000, 0x00600000, 0x12200000, 0x00240008, 0x00201000}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat668,9,8, "CC144",0,-2,2,0,0x0,0,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00106020, 0x40900000, 0x26100000, 0x001a0408, 0x00904080, 0x60100000, 0x041a0000, 0x00102620}
   , 87,97,0,NULL, 10,5,5,0,0,0,NULL,NULL,0},
  {pat77,30,8, "EB515",-1,0,3,5,0x2,0,3,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00220900, 0x00208060, 0x80200000, 0x08200000, 0x80200000, 0x09220000, 0x00200824, 0x00208000}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat67,24,8, "EB505",-2,-2,1,3,0x1,0,-1,
    { 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 82,97,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat588,5,8, "CC64",0,0,2,1,0x0,1,0,
    { 0x00303c3c, 0x00f0c000, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3c300000, 0x003f0f00, 0x0030f0f0},
    { 0x00100824, 0x00108000, 0x80100000, 0x09120000, 0x80100000, 0x08100000, 0x00120900, 0x00108060}
   , 85,96,0,NULL, 330,5,5,0,1,1,NULL,autohelper588,0},
  {pat627,13,8, "CC103",0,-1,3,2,0x0,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00110280, 0x00100090, 0x00100000, 0x00100200, 0x00100000, 0x02110000, 0x02100018, 0x00100008}
   , 85,96,0,NULL, 64,5,5,0,1,1,NULL,NULL,0},
  {pat676,9,8, "CC152",0,-1,2,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00240064, 0x00201000, 0x00600000, 0x11220100, 0x10200000, 0x00240000, 0x01221100, 0x00600064}
   , 85,96,0,NULL, 258,5,5,0,1,1,NULL,autohelper676,3},
  {pat176,17,8, "EB921",0,-1,2,4,0x2,1,0,
    { 0x00f6ffff, 0xf0f0d0e0, 0xfc7c0000, 0x1f3f3f00, 0xd0f0f000, 0xfff60000, 0x3f3f1f2f, 0x007cfcfc},
    { 0x00200401, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200401, 0x00204000}
   , 81,96,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat642,9,8, "CC118",0,-1,3,2,0x0,1,0,
    { 0x0030ff3f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0c00, 0xc0f0c000, 0xff300000, 0x0c3f0f0f, 0x0030fcf0},
    { 0x00204101, 0x40200040, 0x04200000, 0x00200400, 0x00204000, 0x41200000, 0x04200005, 0x00200400}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,NULL,3},
  {pat643,10,8, "CC119",0,-1,3,2,0x0,1,0,
    { 0x0030ff3f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0c00, 0xc0f0c000, 0xff300000, 0x0c3f0f0f, 0x0030fcf0},
    { 0x00204101, 0x40200040, 0x04200000, 0x00200400, 0x00204000, 0x41200000, 0x04200005, 0x00200400}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,NULL,3},
  {pat63,21,8, "EB501",-2,-2,2,2,0x8,-1,1,
    { 0xffffffff, 0xfcfffcfc, 0xffffff30, 0xffffffff, 0xfcfffcfc, 0xffffff30, 0xffffffff, 0xffffffff},
    { 0x00180008, 0x00102000, 0x00900000, 0x22100000, 0x20100000, 0x00180000, 0x00102200, 0x00900080}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat64,22,8, "EB502",-2,-2,2,2,0x8,-1,1,
    { 0xffffffff, 0xfcfffcff, 0xffffff30, 0xffffffff, 0xfcfffcfc, 0xffffff33, 0xffffffff, 0xffffffff},
    { 0x00180020, 0x00102000, 0x00900000, 0x20120000, 0x20100000, 0x00180000, 0x00122000, 0x00900020}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat65,25,8, "EB503",-2,-3,3,1,0x8,-1,-1,
    { 0xfcfcfcfc, 0xfffffc00, 0xfffffc3c, 0xffffff3f, 0xfcfffff0, 0xfcfcfcf0, 0xffffff00, 0xfcffffff},
    { 0x00106020, 0x40900000, 0x24100000, 0x001a0400, 0x00904000, 0x60100000, 0x041a0000, 0x00102420}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat635,7,8, "C111",0,-1,2,1,0x0,0,1,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00108410, 0x80104000, 0x48100000, 0x04110800, 0x40108000, 0x84100000, 0x08110400, 0x00104810}
   , 80,95,2,assist_params635, 128,5,0,0,0,0,double_connection_helper,NULL,0},
  {pat896,7,8, "CD87",0,0,3,1,0x0,1,0,
    { 0x003c3c3c, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f0f0},
    { 0x00180408, 0x00106000, 0x40900000, 0x26100000, 0x60100000, 0x04180000, 0x00102600, 0x00904080}
   , 95,95,0,NULL, 0,0,0,0,0,0,real_connection_helper,NULL,0},
  {pat400,18,8, "EC4",-2,0,1,4,0x1,0,2,
    { 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat644,8,8, "CC120",0,0,3,2,0x0,2,1,
    { 0x00303f3f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x0030f0f0},
    { 0x00100222, 0x00100080, 0x00100000, 0x00120000, 0x00100000, 0x02100000, 0x0012000a, 0x00100020}
   , 85,95,0,NULL, 266,5,5,0,0,0,break_connection_helper,NULL,0},
  {pat364,10,4, "CB309",0,-1,2,2,0x0,1,1,
    { 0x003fff3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3f0000, 0x0c3f3f3f, 0x00f0fcf0},
    { 0x00205020, 0x40600000, 0x14200000, 0x00260400, 0x00604000, 0x50200000, 0x04260000, 0x00201420}
   , 60,95,2,assist_params364, 10,10,0,5,0,0,NULL,NULL,3},
  {pat625,11,8, "CC101",0,-1,3,2,0x0,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00200141, 0x00200040, 0x00200000, 0x00200100, 0x00200000, 0x01200000, 0x01200005, 0x00200004}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat647,10,8, "CC123",-1,0,2,2,0x0,1,1,
    { 0x0c3f3f2f, 0x00f0fcf0, 0xf0f0c000, 0xff3e0000, 0xfcf00000, 0x3f3f0c00, 0x003eff3f, 0xc0f0f0e0},
    { 0x00190009, 0x00102010, 0x00900000, 0x22100000, 0x20100000, 0x00190000, 0x00102211, 0x00900080}
   , 70,95,1,assist_params647, 10,5,5,0,0,0,NULL,NULL,0},
  {pat648,13,8, "CC124",0,-1,3,3,0x0,2,0,
    { 0x0038bf7f, 0x80f0e0c0, 0xf8b00000, 0x2f3f0900, 0xe0f08000, 0xbf380000, 0x093f2f0f, 0x00b0f8f4},
    { 0x00100408, 0x00104000, 0x40100000, 0x06100000, 0x40100000, 0x04100000, 0x00100600, 0x00104080}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,autohelper648,0},
  {pat649,11,8, "CC125",0,-1,3,2,0x0,2,0,
    { 0x0038bf3f, 0x80f0e0c0, 0xf8b00000, 0x2f3f0800, 0xe0f08000, 0xbf380000, 0x083f2f0f, 0x00b0f8f0},
    { 0x00100608, 0x00104080, 0x40100000, 0x06100000, 0x40100000, 0x06100000, 0x00100608, 0x00104080}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,NULL,0},
  {pat402,17,8, "EC6",-1,-1,2,3,0x1,1,0,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x001a8605, 0x801060a0, 0x48900000, 0x25100800, 0x60108000, 0x861a0000, 0x08102529, 0x00904840}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat650,12,8, "CC126",0,-1,3,2,0x0,2,0,
    { 0x0038bf3f, 0x80f0e0c0, 0xf8b00000, 0x2f3f0800, 0xe0f08000, 0xbf380000, 0x083f2f0f, 0x00b0f8f0},
    { 0x00100408, 0x00104000, 0x40100000, 0x06100000, 0x40100000, 0x04100000, 0x00100600, 0x00104080}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,autohelper650,0},
  {pat403,18,8, "EC7",-1,-1,2,3,0x1,1,0,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00188605, 0x80106080, 0x48900000, 0x25100800, 0x60108000, 0x86180000, 0x08102509, 0x00904840}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat634,7,8, "CC110",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3f0f, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3f0f},
    { 0x00100000, 0x00100000, 0x02100000, 0x00100009, 0x00100080, 0x00100000, 0x00100000, 0x00100201}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,autohelper634,0},
  {pat623,10,8, "CC99",0,0,3,3,0x0,2,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat404,18,8, "EC8",0,-2,3,2,0x1,2,-1,
    { 0x00fffffc, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3c, 0x00ffffff},
    { 0x00206018, 0x40a00000, 0x24200000, 0x02290402, 0x00a04000, 0x60200000, 0x04290200, 0x00202492}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat663,10,8, "CC139",0,-1,2,2,0x0,0,1,
    { 0x003fbf3f, 0x80f0f0f0, 0xf8f00000, 0x3f3f0800, 0xf0f08000, 0xbf3f0000, 0x083f3f3f, 0x00f0f8f0},
    { 0x00120912, 0x00108060, 0x80100000, 0x08110000, 0x80100000, 0x09120000, 0x00110826, 0x00108010}
   , 85,95,0,NULL, 40,5,5,0,0,0,double_threat_connection_helper,autohelper663,0},
  {pat405,18,8, "EC9",0,-3,3,1,0x1,2,-2,
    { 0x00fcfcf0, 0xf0f0f000, 0xffff0000, 0x3c3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3c00, 0x00ffff3f},
    { 0x00208060, 0x80200000, 0x09200000, 0x00220904, 0x00208040, 0x80200000, 0x09220000, 0x00200924}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat862,5,8, "CD53",-1,0,1,2,0x0,0,1,
    { 0x0c3f0c00, 0x0030fc30, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0c3f0c00, 0x0030fc30, 0xc0f0c000},
    { 0x00220000, 0x00200020, 0x00200000, 0x00200000, 0x00200000, 0x00220000, 0x00200020, 0x00200000}
   , 95,95,0,NULL, 0,0,0,0,0,0,double_attack2_helper,NULL,3},
  {pat821,9,8, "CD12",0,0,3,2,0x0,2,1,
    { 0x00303c3f, 0x00f0c000, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3c300000, 0x003f0f03, 0x0030f0f0},
    { 0x00200422, 0x00204000, 0x40200000, 0x04220000, 0x40200000, 0x04200000, 0x00220402, 0x00204020}
   , 95,95,0,NULL, 0,0,0,0,0,0,break_out_helper,NULL,3},
  {pat84,12,8, "EB522",-1,0,1,3,0x1,1,1,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 90,95,0,NULL, 0,0,0,5,0,0,pull_back_catch_helper,NULL,3},
  {pat17,30,8, "EB105",0,-2,4,3,0x8,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat582,11,8, "CC58",0,0,3,2,0x0,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00251002, 0x00601010, 0x10600000, 0x10240000, 0x10600000, 0x10250000, 0x00241012, 0x00601000}
   , 80,95,0,NULL, 64,5,5,0,5,5,NULL,NULL,3},
  {pat256,18,8, "CB201",0,-1,4,2,0x0,1,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00100a64, 0x00108080, 0x80100000, 0x09120100, 0x80100000, 0x0a100000, 0x01120908, 0x00108064}
   , 80,95,0,NULL, 32,10,0,5,0,0,NULL,NULL,0},
  {pat88,12,8, "EB601",0,-2,3,1,0x8,2,-1,
    { 0x00f0fcf8, 0xf0f0c000, 0xff3f0000, 0x0e3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0e00, 0x003fffbf},
    { 0x00209400, 0x80604000, 0x58200000, 0x04240800, 0x40608000, 0x94200000, 0x08240400, 0x00205800}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat89,12,8, "EB602",0,-2,3,1,0x8,2,-1,
    { 0x00f0fcf8, 0xf0f0c000, 0xff3f0000, 0x0e3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0e00, 0x003fffbf},
    { 0x00201400, 0x00604000, 0x52200000, 0x04240008, 0x40600080, 0x14200000, 0x00240400, 0x00205200}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat619,10,8, "CC95",0,-2,3,1,0x0,1,0,
    { 0x0030f0fc, 0xc0f00000, 0x3f300000, 0x033f0f0f, 0x00f0c0c0, 0xf0300000, 0x0f3f0300, 0x00303fff},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200402, 0x00204000, 0x40200000, 0x04200000, 0x00200402}
   , 85,95,0,NULL, 0,5,5,0,0,0,attach_connect_helper,NULL,3},
  {pat29,30,8, "EB202",0,-2,4,3,0x8,2,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat434,8,8, "EC38",0,-1,2,1,0x2,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00244000, 0x40201000, 0x04600000, 0x10200400, 0x10204000, 0x40240000, 0x04201000, 0x00600400}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,NULL,3},
  {pat626,12,8, "CC102",0,-1,3,2,0x0,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00100280, 0x00100080, 0x00100000, 0x00100200, 0x00100000, 0x02100000, 0x02100008, 0x00100008}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,NULL,0},
  {pat247,18,8, "CB8",-1,-5,3,1,0x0,1,-3,
    { 0x00f8f8f8, 0xf0f0a000, 0xbfbf0300, 0x2a3f3fff, 0xa0f0f0fc, 0xf8f80000, 0x3f3f2a00, 0x03bfbfbf},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110000, 0x00100010}
   , 45,95,2,assist_params247, 0,15,0,5,0,0,jump_out_helper,NULL,0},
  {pat237,16,8, "EB1901",0,-2,3,1,0x4,2,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00209000, 0x80600000, 0x18200000, 0x00240800, 0x00608000, 0x90200000, 0x08240000, 0x00201800}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat236,16,8, "EB1806",0,0,3,3,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100109, 0x00100040, 0x00100000, 0x02100000, 0x00100000, 0x01100000, 0x00100205, 0x00100080}
   , 80,95,0,NULL, 8,5,5,5,0,0,draw_back_helper,NULL,0},
  {pat232,12,8, "EB1802",0,-1,2,2,0x2,0,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x0010a000, 0x80900000, 0x28100000, 0x00180800, 0x00908000, 0xa0100000, 0x08180000, 0x00102800}
   , 65,95,1,assist_params232, 2,5,5,5,0,0,NULL,autohelper232,0},
  {pat401,18,8, "EC5",-1,-2,2,2,0x1,0,-1,
    { 0xfffffcfc, 0xfcfcfc3c, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcffff00, 0xfffffff0, 0xffffffff},
    { 0x00201814, 0x00608000, 0x92200000, 0x09250008, 0x80600080, 0x18200000, 0x00250900, 0x00209250}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat13,20,8, "EB101",0,-3,3,2,0x2,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x002a0401, 0x00206020, 0x40a00000, 0x24200000, 0x60200000, 0x042a0000, 0x00202421, 0x00a04000}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat438,14,8, "EC41",0,-1,3,2,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00284100, 0x40202040, 0x04a00000, 0x20200400, 0x20204000, 0x41280000, 0x04202004, 0x00a00400}
   , 85,95,0,NULL, 8,5,5,0,0,0,NULL,autohelper438,3},
  {pat222,25,8, "EB1703",0,-3,4,1,0x2,1,-1,
    { 0x00f4fcfc, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0x007fffff},
    { 0x00200004, 0x00200000, 0x00200000, 0x01200000, 0x00200000, 0x00200000, 0x00200100, 0x00200040}
   , 70,95,1,assist_params222, 0,5,5,5,0,0,NULL,NULL,3},
  {pat443,11,8, "EC46",0,-1,2,3,0x2,1,1,
    { 0x003ffffc, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3c, 0x00f0fcfc},
    { 0x00184000, 0x40102000, 0x04900000, 0x20100400, 0x20104000, 0x40180000, 0x04102000, 0x00900400}
   , 75,95,1,assist_params443, 0,5,5,0,0,0,NULL,NULL,0},
  {pat216,18,8, "EB1606",0,-2,3,2,0x4,2,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f03, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcff},
    { 0x00202010, 0x00a00000, 0x20200000, 0x00290000, 0x00a00000, 0x20200000, 0x00290000, 0x00202010}
   , 70,95,1,assist_params216, 0,5,5,5,0,0,NULL,NULL,3},
  {pat399,18,8, "EC3",-2,0,1,4,0x1,0,2,
    { 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 85,95,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat211,15,8, "EB1601",-2,-1,1,2,0x1,1,0,
    { 0xfffffc00, 0xffffff3f, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcffffff, 0xfcfcfcf0, 0xfcfcfc00},
    { 0x00180800, 0x0010a000, 0x80900000, 0x28100000, 0xa0100000, 0x08180000, 0x00102800, 0x00908000}
   , 70,95,0,NULL, 0,10,10,5,0,0,NULL,NULL,0},
  {pat457,19,8, "EC60",0,-2,3,2,0x2,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0x00fcffff},
    { 0x00202400, 0x00a04000, 0x61200000, 0x04280005, 0x40a00040, 0x24200000, 0x00280400, 0x00206101}
   , 75,95,1,assist_params457, 0,5,5,0,0,0,NULL,NULL,3},
  {pat1054,24,8, "J18",0,-3,3,2,0xa,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200110, 0x00200040, 0x00200000, 0x00210000, 0x00200000, 0x01200000, 0x00210004, 0x00200010}
   , 65,95,1,assist_params1054, 0,10,0,0,0,0,NULL,NULL,3},
  {pat631,7,8, "CC107",-1,0,1,3,0x0,0,1,
    { 0x033f0f00, 0x0030f0fc, 0xc0f00000, 0x3c300000, 0xf0300000, 0x0f3f0300, 0x00303cfc, 0x00f0c000},
    { 0x00100900, 0x00108040, 0x80100000, 0x08100000, 0x80100000, 0x09100000, 0x00100804, 0x00108000}
   , 85,95,0,NULL, 232,5,5,0,0,0,NULL,autohelper631,0},
  {pat199,21,8, "EB1401",-2,-2,2,2,0x8,0,1,
    { 0xfcfefcfc, 0xffffff20, 0xffffffff, 0xffffffff, 0xffffffff, 0xfcfefcfc, 0xffffff20, 0xffffffff},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 75,95,1,assist_params199, 0,5,5,5,0,0,NULL,NULL,3},
  {pat466,7,8, "EC69",0,0,1,3,0x1,0,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00100900, 0x00108040, 0x80100000, 0x08100000, 0x80100000, 0x09100000, 0x00100804, 0x00108000}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,autohelper466,0},
  {pat191,28,8, "EB1208",-3,-2,1,3,0x4,0,2,
    { 0xffff3f00, 0x3fffffff, 0xf0ffffff, 0xfcfcf0f0, 0xffff3f3f, 0x3fffffff, 0xf0fcfcfc, 0xfffff000},
    { 0x00281400, 0x00606000, 0x50a00000, 0x24240000, 0x60600000, 0x14280000, 0x00242400, 0x00a05000}
   , 70,95,1,assist_params191, 36,5,5,5,0,0,NULL,NULL,3},
  {pat112,14,8, "EB625",-1,-2,3,1,0x8,2,-1,
    { 0xc0f0f0fc, 0xfcf00000, 0x3f3f0f00, 0x033fffff, 0x00f0fcfc, 0xf0f0c000, 0xff3f0300, 0x0f3f3fff},
    { 0x00209004, 0x80600000, 0x18200000, 0x01240800, 0x00608000, 0x90200000, 0x08240100, 0x00201840}
   , 75,95,1,assist_params112, 0,5,5,5,0,0,NULL,NULL,3},
  {pat535,7,8, "CC11",-1,-1,2,1,0x0,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204440, 0x40204000, 0x44200000, 0x04200500, 0x40204000, 0x44200000, 0x05200400, 0x00204404}
   , 85,95,0,NULL, 96,5,5,0,0,0,defend_solid_helper,NULL,3},
  {pat536,7,8, "CC12",-1,-1,2,2,0x0,2,1,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204440, 0x40204000, 0x44200000, 0x04200500, 0x40204000, 0x44200000, 0x05200400, 0x00204404}
   , 85,95,0,NULL, 96,5,5,0,0,0,defend_bamboo_helper,NULL,3},
  {pat628,11,8, "CC104",0,-1,3,2,0x0,2,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00201941, 0x00608040, 0x90200000, 0x08240100, 0x80600000, 0x19200000, 0x01240805, 0x00209004}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat501,8,8, "EC104",0,-2,2,0,0x8,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0f},
    { 0x00201080, 0x00600000, 0x10200000, 0x00240200, 0x00600000, 0x10200000, 0x02240000, 0x00201008}
   , 85,95,0,NULL, 266,5,5,0,0,0,NULL,NULL,3},
  {pat833,5,4, "CD24",-1,0,1,2,0x0,0,1,
    { 0x0c3f0c00, 0x0030fc30, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0c3f0c00, 0x0030fc30, 0xc0f0c000},
    { 0x00220400, 0x00204020, 0x40200000, 0x04200000, 0x40200000, 0x04220000, 0x00200420, 0x00204000}
   , 95,95,0,NULL, 0,0,0,0,0,0,double_attack_helper,NULL,3},
  {pat184,16,8, "EB1201",0,0,3,3,0x4,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00242408, 0x00a05000, 0x60600000, 0x16280000, 0x50a00000, 0x24240000, 0x00281600, 0x00606080}
   , 80,95,0,NULL, 32,5,5,5,0,0,NULL,NULL,3},
  {pat119,16,8, "EB632",0,-1,4,2,0x8,3,0,
    { 0x00f0feff, 0xf0f0c080, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfef00000, 0x3f3f0f0b, 0x003cfcfc},
    { 0x00209421, 0x80604000, 0x58200000, 0x04260800, 0x40608000, 0x94200000, 0x08260401, 0x00205820}
   , 80,95,0,NULL, 0,5,5,5,0,0,clamp2_helper,NULL,3},
  {pat548,7,4, "CC24",-2,0,1,2,0x0,0,1,
    { 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000},
    { 0x00220400, 0x00204020, 0x40200000, 0x04200000, 0x40200000, 0x04220000, 0x00200420, 0x00204000}
   , 80,95,0,NULL, 290,10,5,0,0,0,NULL,NULL,3},
  {pat183,22,8, "EB1101",0,-1,3,4,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00240100, 0x00201040, 0x00600000, 0x10200000, 0x10200000, 0x01240000, 0x00201004, 0x00600000}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat122,16,8, "EB635",0,-1,2,4,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00158000, 0x80101010, 0x08500000, 0x10100800, 0x10108000, 0x80150000, 0x08101010, 0x00500800}
   , 80,95,0,NULL, 12,5,5,5,0,0,NULL,NULL,0},
  {pat179,18,8, "EB924",0,-2,2,4,0x2,1,3,
    { 0x00bfbfbf, 0xa0f0f0f0, 0xfaf80000, 0x3f3f2a0a, 0xf0f0a080, 0xbfbf0000, 0x2a3f3f3f, 0x00f8fafa},
    { 0x00160900, 0x00109060, 0x80500000, 0x18100000, 0x90100000, 0x09160000, 0x00101824, 0x00508000}
   , 80,95,0,NULL, 0,5,5,5,0,0,push_to_capture_helper,NULL,0},
  {pat177,20,8, "EB922",-1,-1,3,2,0xa,1,0,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00120800, 0x00108020, 0x80100000, 0x08100000, 0x80100000, 0x08120000, 0x00100820, 0x00108000}
   , 50,95,1,assist_params177, 10,10,0,5,0,0,NULL,NULL,0},
  {pat98,12,8, "EB611",0,0,2,3,0x2,1,0,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00160800, 0x00109020, 0x80500000, 0x18100000, 0x90100000, 0x08160000, 0x00101820, 0x00508000}
   , 60,95,1,assist_params98, 0,5,5,5,0,0,NULL,NULL,0},
  {pat175,16,8, "EB920",0,-2,2,3,0x2,1,2,
    { 0x003fefab, 0xc0b0f0f0, 0xeff00000, 0x3e3a0e0e, 0xf0b0c0c0, 0xef3f0000, 0x0e3a3e3f, 0x00f0efaa},
    { 0x00124400, 0x40104020, 0x46100000, 0x04100408, 0x40104080, 0x44120000, 0x04100420, 0x00104600}
   , 70,95,1,assist_params175, 8,5,5,5,0,0,NULL,NULL,0},
  {pat473,17,8, "EC76",0,-1,3,3,0x2,1,0,
    { 0x003f3fff, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0fc},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 85,95,0,NULL, 74,5,5,0,0,0,NULL,NULL,0},
  {pat539,8,8, "CC15",0,0,3,3,0x0,2,0,
    { 0x003c3f3c, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0c, 0x00f0f0f0},
    { 0x00140204, 0x00101080, 0x00500000, 0x11100000, 0x10100000, 0x02140000, 0x00101108, 0x00500040}
   , 85,95,0,NULL, 104,5,5,0,0,0,NULL,NULL,0},
  {pat129,16,8, "EB706",0,-2,2,4,0x2,2,1,
    { 0x0038ffff, 0xc0f0e0c0, 0xffb00000, 0x2f3f0f0f, 0xe0f0c0c0, 0xff380000, 0x0f3f2f0f, 0x00b0ffff},
    { 0x00102420, 0x00904000, 0x60100000, 0x041a0000, 0x40900000, 0x24100000, 0x001a0400, 0x00106020}
   , 80,95,0,NULL, 10,5,5,5,0,0,NULL,autohelper129,0},
  {pat161,18,8, "EB906",0,-1,4,2,0x4,3,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00109024, 0x80500000, 0x18100000, 0x01160800, 0x00508000, 0x90100000, 0x08160100, 0x00101860}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat540,8,4, "CC16",0,-1,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00206444, 0x40a04000, 0x64200000, 0x05280500, 0x40a04000, 0x64200000, 0x05280500, 0x00206444}
   , 85,95,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat156,12,8, "EB901",0,-1,2,2,0x2,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00211000, 0x00600010, 0x10200000, 0x00240000, 0x00600000, 0x10210000, 0x00240010, 0x00201000}
   , 60,95,1,assist_params156, 8,5,5,5,0,0,NULL,NULL,3},
  {pat622,8,8, "CC98",0,-1,2,1,0x0,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00180084, 0x00102000, 0x00900000, 0x21100200, 0x20100000, 0x00180000, 0x02102100, 0x00900048}
   , 85,95,0,NULL, 72,5,5,0,0,0,NULL,autohelper622,0},
  {pat474,17,8, "EC77",0,-1,3,3,0x2,2,1,
    { 0x003f3fff, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0fc},
    { 0x00181800, 0x0050a000, 0x90900000, 0x28140000, 0xa0500000, 0x18180000, 0x00142800, 0x00909000}
   , 85,95,0,NULL, 74,5,5,0,0,0,NULL,NULL,0},
  {pat152,18,8, "EB817",0,-2,4,1,0x4,3,-1,
    { 0x003cfcfc, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f00, 0x00f0ffff},
    { 0x00109040, 0x80500000, 0x1a100000, 0x0014090a, 0x00508080, 0x90100000, 0x09140000, 0x00101a06}
   , 80,95,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat834,5,4, "CD25",-1,0,1,2,0x0,0,1,
    { 0x0c3f0c00, 0x0030fc30, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0c3f0c00, 0x0030fc30, 0xc0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 95,95,0,NULL, 0,0,0,0,0,0,double_attack_helper,NULL,0},
  {pat553,7,8, "CC29",0,0,2,2,0x0,1,2,
    { 0x003c3f3c, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0c, 0x00f0f0f0},
    { 0x00241010, 0x00601000, 0x10600000, 0x10250000, 0x10600000, 0x10240000, 0x00251000, 0x00601010}
   , 85,95,0,NULL, 0,5,5,0,0,0,diag_miai2_helper,autohelper553,3},
  {pat541,8,4, "CC17",0,-1,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00109888, 0x80508000, 0x98100000, 0x0a140a00, 0x80508000, 0x98100000, 0x0a140a00, 0x00109888}
   , 85,95,0,NULL, 384,5,5,0,0,0,NULL,NULL,0},
  {pat744,14,8, "ED54",0,-1,3,2,0xa,2,0,
    { 0x00bfffff, 0xe0f0f0f0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbf0000, 0x2f3f3f3f, 0x00f8fcfc},
    { 0x00160909, 0x00109060, 0x80500000, 0x1a100000, 0x90100000, 0x09160000, 0x00101a25, 0x00508080}
   , 85,95,0,NULL, 1,10,0,0,0,0,NULL,autohelper744,0},
  {pat144,26,8, "EB809",0,-5,3,2,0x2,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3c0000, 0x0f3f3f0f, 0x00f0ffff},
    { 0x00200010, 0x00200000, 0x01200000, 0x00210004, 0x00200040, 0x00200000, 0x00210000, 0x00200110}
   , 80,95,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat692,19,8, "ED2",0,-2,3,3,0x2,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcff},
    { 0x00289044, 0x80602000, 0x18a00000, 0x21240902, 0x20608000, 0x90280000, 0x09242100, 0x00a01846}
   , 84,94,0,NULL, 0,10,0,0,0,0,NULL,NULL,3},
  {pat638,11,8, "CC114",0,0,2,3,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00260004, 0x00201020, 0x00600000, 0x11200000, 0x10200000, 0x00260000, 0x00201120, 0x00600040}
   , 84,94,0,NULL, 72,5,5,0,0,0,NULL,NULL,3},
  {pat718,19,8, "ED28",-2,-3,4,0,0x8,0,-2,
    { 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff, 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f},
    { 0x00108080, 0x80100000, 0x0a100000, 0x00100a09, 0x00108080, 0x80100000, 0x0a100000, 0x00100a09}
   , 94,94,0,NULL, 0,0,0,0,0,0,NULL,autohelper718,0},
  {pat645,13,8, "CC121",0,-2,3,1,0x0,1,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00180484, 0x00106000, 0x40900000, 0x25100200, 0x60100000, 0x04180000, 0x02102500, 0x00904048}
   , 83,94,0,NULL, 72,5,5,0,1,1,NULL,NULL,0},
  {pat146,24,8, "EB811",0,0,3,5,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00220100, 0x00200060, 0x00200000, 0x00200000, 0x00200000, 0x01220000, 0x00200024, 0x00200000}
   , 79,94,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat654,13,8, "CC130",-1,0,3,3,0x0,0,2,
    { 0x083f3f0f, 0x00f0f8f0, 0xf0f08000, 0xbf3c0000, 0xf8f00000, 0x3f3f0800, 0x003cbf3f, 0x80f0f0c0},
    { 0x00100106, 0x00100040, 0x00100000, 0x01100000, 0x00100000, 0x01100000, 0x00100106, 0x00100040}
   , 84,94,0,NULL, 0,5,5,0,0,0,safe_connection_helper,NULL,0},
  {pat717,13,8, "ED27",-2,-3,2,0,0x8,0,-2,
    { 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcff, 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f03},
    { 0x00108000, 0x80100000, 0x0a100000, 0x00100809, 0x00108080, 0x80100000, 0x08100000, 0x00100a01}
   , 94,94,0,NULL, 0,0,0,0,0,0,NULL,autohelper717,0},
  {pat160,18,8, "EB905",0,-1,4,3,0x4,2,0,
    { 0x003f3fbf, 0x00f0f0f0, 0xf0f00000, 0x3f3f0200, 0xf0f00000, 0x3f3f0000, 0x023f3f3f, 0x00f0f0f8},
    { 0x00242400, 0x00a05000, 0x60600000, 0x14280000, 0x50a00000, 0x24240000, 0x00281400, 0x00606000}
   , 78,94,0,NULL, 0,5,5,5,1,1,NULL,autohelper160,3},
  {pat526,9,8, "CC2",0,-2,2,1,0x0,1,0,
    { 0x00f0fcf0, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0f, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0x003cff3f},
    { 0x00100890, 0x00108000, 0x81100000, 0x08110204, 0x80100040, 0x08100000, 0x02110800, 0x00108118}
   , 84,94,0,NULL, 72,5,5,0,0,0,NULL,NULL,0},
  {pat624,12,8, "CC100",0,-1,3,2,0x0,2,0,
    { 0x00fcfcff, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f03, 0x00fcfcfc},
    { 0x00100002, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100002, 0x00100000}
   , 83,93,0,NULL, 64,5,5,0,0,0,NULL,autohelper624,0},
  {pat34,48,8, "EB207",0,-3,6,3,0x4,3,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 78,93,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat655,9,8, "CC131",0,0,2,2,0x0,1,1,
    { 0x003f3f3e, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3e, 0x00f0f0f0},
    { 0x00120124, 0x00100060, 0x00100000, 0x01120000, 0x00100000, 0x01120000, 0x00120124, 0x00100060}
   , 83,93,0,NULL, 200,5,5,0,0,0,NULL,NULL,0},
  {pat656,7,8, "CC132",0,-1,2,1,0x0,1,1,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00102010, 0x00900000, 0x20100000, 0x00190000, 0x00900000, 0x20100000, 0x00190000, 0x00102010}
   , 83,93,0,NULL, 64,5,5,0,0,0,wedge_helper,autohelper656,0},
  {pat653,7,8, "CC129",0,0,2,2,0x0,1,1,
    { 0x00343f3c, 0x00f0d0c0, 0xf0700000, 0x1f3f0000, 0xd0f00000, 0x3f340000, 0x003f1f0c, 0x0070f0f0},
    { 0x00100118, 0x00100040, 0x00100000, 0x02110000, 0x00100000, 0x01100000, 0x00110204, 0x00100090}
   , 83,93,0,NULL, 192,5,5,0,0,0,NULL,autohelper653,0},
  {pat78,17,8, "EB516",-2,-1,1,4,0x4,0,1,
    { 0x7f3f0c00, 0x043cff3c, 0xc0f0f4c0, 0xfcf04000, 0xff3c0400, 0x0c3f7f0c, 0x40f0fcf0, 0xf4f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 78,93,0,NULL, 128,5,5,5,0,0,NULL,NULL,0},
  {pat659,9,8, "CC135",0,-1,2,2,0x0,1,1,
    { 0x003cffbc, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0e00, 0xf0f0c000, 0xff3c0000, 0x0e3f3f0c, 0x00f0fcf8},
    { 0x00284108, 0x40202040, 0x04a00000, 0x22200400, 0x20204000, 0x41280000, 0x04202204, 0x00a00480}
   , 83,93,0,NULL, 258,5,5,0,0,0,NULL,NULL,3},
  {pat157,22,8, "EB902",0,-1,3,4,0x2,2,-1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00202110, 0x00a00040, 0x20200000, 0x00290000, 0x00a00000, 0x21200000, 0x00290004, 0x00202010}
   , 72,93,1,assist_params157, 0,5,5,5,0,0,NULL,NULL,3},
  {pat14,18,8, "EB102",0,-1,5,2,0x8,3,1,
    { 0x00f8ffff, 0xf0f0e0c0, 0xfcbc0000, 0x2f3f3f00, 0xe0f0f000, 0xfff80000, 0x3f3f2f0f, 0x00bcfcfc},
    { 0x00100602, 0x00104080, 0x40100000, 0x04100000, 0x40100000, 0x06100000, 0x0010040a, 0x00104000}
   , 78,93,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat80,35,8, "EB518",-1,0,3,6,0x2,1,1,
    { 0x2f3f3f3f, 0x00f8fcfc, 0xf0f0e000, 0xffbf0000, 0xfcf80000, 0x3f3f2f00, 0x00bfffff, 0xe0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 78,93,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat73,19,8, "EB511",0,-1,3,3,0x4,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110000, 0x00100010}
   , 68,93,1,assist_params73, 0,5,5,5,0,0,NULL,NULL,0},
  {pat666,6,8, "CC142",0,-2,1,1,0x0,0,-1,
    { 0x00fcfc00, 0xf0f0f000, 0xfcfc0000, 0x3c3c3c00, 0xf0f0f000, 0xfcfc0000, 0x3c3c3c00, 0x00fcfc00},
    { 0x00182400, 0x00906000, 0x60900000, 0x24180000, 0x60900000, 0x24180000, 0x00182400, 0x00906000}
   , 83,93,0,NULL, 40,5,5,0,0,0,extend_to_kill_helper,NULL,0},
  {pat437,14,8, "EC40",0,-1,3,2,0x2,1,0,
    { 0x0038ffff, 0xc0f0e0c0, 0xfcb00000, 0x2f3f0f00, 0xe0f0c000, 0xff380000, 0x0f3f2f0f, 0x00b0fcfc},
    { 0x00204100, 0x40200040, 0x04200000, 0x00200400, 0x00204000, 0x41200000, 0x04200004, 0x00200400}
   , 83,93,0,NULL, 8,5,5,0,0,0,NULL,NULL,3},
  {pat432,11,8, "EC36",0,-1,2,2,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00128000, 0x80100020, 0x08100000, 0x00100800, 0x00108000, 0x80120000, 0x08100020, 0x00100800}
   , 80,93,0,NULL, 256,5,5,0,3,3,NULL,autohelper432,0},
  {pat439,14,8, "EC42",-1,-2,1,2,0x1,0,1,
    { 0xfffffc00, 0xfcfcfc3c, 0xffffff00, 0xfcfcfcfc, 0xfcfcfcfc, 0xfcffff00, 0xfcfcfcf0, 0xffffff00},
    { 0x00102400, 0x00904000, 0x61100000, 0x04180004, 0x40900040, 0x24100000, 0x00180400, 0x00106100}
   , 78,93,1,assist_params439, 0,5,5,0,0,0,NULL,autohelper439,0},
  {pat657,11,8, "CC133",0,-1,3,2,0x0,1,1,
    { 0x003dff3f, 0xc0f0f0d0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3d0000, 0x0c3f3f1f, 0x00f0fcf0},
    { 0x00102210, 0x00900080, 0x20100000, 0x00190000, 0x00900000, 0x22100000, 0x00190008, 0x00102010}
   , 83,93,0,NULL, 0,5,5,0,0,0,wedge2_helper,NULL,0},
  {pat127,8,8, "EB704",0,-2,2,0,0x2,2,0,
    { 0x00b0f0f0, 0xe0f00000, 0x3f380000, 0x003f2f0f, 0x00f0e0c0, 0xf0b00000, 0x2f3f0000, 0x00383f3f},
    { 0x00104080, 0x40100000, 0x06100000, 0x00100608, 0x00104080, 0x40100000, 0x06100000, 0x00100608}
   , 78,93,0,NULL, 8,5,5,5,0,0,NULL,NULL,0},
  {pat167,21,8, "EB912",0,-1,3,4,0x2,2,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00285804, 0x4060a000, 0x94a00000, 0x29240400, 0xa0604000, 0x58280000, 0x04242900, 0x00a09440}
   , 78,93,0,NULL, 10,10,0,5,0,0,NULL,NULL,3},
  {pat478,15,8, "EC81",0,-1,3,2,0x8,2,0,
    { 0x00f8ffff, 0xf0f0e0c0, 0xfcbc0000, 0x2f3f3f00, 0xe0f0f000, 0xfff80000, 0x3f3f2f0f, 0x00bcfcfc},
    { 0x0010060a, 0x00104080, 0x40100000, 0x06100000, 0x40100000, 0x06100000, 0x0010060a, 0x00104080}
   , 83,93,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat92,7,8, "EB605",0,-1,2,1,0x8,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00200024, 0x00200000, 0x00200000, 0x01220000, 0x00200000, 0x00200000, 0x00220100, 0x00200060}
   , 40,93,2,assist_params92, 10,5,15,5,0,0,NULL,autohelper92,3},
  {pat440,16,8, "EC43",-1,-2,2,2,0x1,0,-1,
    { 0xfffffcf0, 0xfcfcfc3c, 0xffffff00, 0xfcfffffc, 0xfcfcfcfc, 0xfcffff00, 0xfffffcf0, 0xffffff3c},
    { 0x00201810, 0x00608000, 0x92200000, 0x08250008, 0x80600080, 0x18200000, 0x00250800, 0x00209210}
   , 78,93,1,assist_params440, 0,5,5,0,0,0,NULL,NULL,3},
  {pat215,12,8, "EB1605",0,0,2,3,0x2,0,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100100, 0x00100040, 0x00100000, 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100000}
   , 78,93,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat18,41,8, "EB106",-1,-2,5,3,0x8,2,1,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 78,93,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat90,7,8, "EB603",-2,-1,0,1,0x8,-1,0,
    { 0xfcfc0000, 0x3c3f3c00, 0x00fcfc30, 0xf0f0f000, 0x3c3f3c00, 0x00fcfc30, 0xf0f0f000, 0xfcfc0000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 40,93,2,assist_params90, 10,5,15,5,0,0,NULL,autohelper90,3},
  {pat231,11,8, "EB1801",0,-1,3,2,0x1,1,1,
    { 0x0033ffff, 0xc0f0c0f0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff330000, 0x0f3f0f3f, 0x0030fcfc},
    { 0x00209091, 0x80600000, 0x18200000, 0x00250a00, 0x00608000, 0x90200000, 0x0a250001, 0x00201818}
   , 78,93,0,NULL, 32,5,5,5,0,0,NULL,NULL,3},
  {pat675,11,8, "CC151",-1,0,1,3,0x0,0,1,
    { 0x3f3f0f00, 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc, 0xf0f0c000},
    { 0x00110a00, 0x00108090, 0x80100000, 0x08100000, 0x80100000, 0x0a110000, 0x00100818, 0x00108000}
   , 82,93,0,NULL, 330,5,5,0,1,1,NULL,autohelper675,0},
  {pat91,7,8, "EB604",0,-1,2,1,0x8,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00100024, 0x00100000, 0x00100000, 0x01120000, 0x00100000, 0x00100000, 0x00120100, 0x00100060}
   , 40,93,2,assist_params91, 10,5,15,5,0,0,NULL,autohelper91,0},
  {pat431,10,8, "EC35",0,-1,2,2,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00108200, 0x80100080, 0x08100000, 0x00100800, 0x00108000, 0x82100000, 0x08100008, 0x00100800}
   , 80,93,0,NULL, 256,5,5,0,3,3,NULL,NULL,0},
  {pat118,17,8, "EB631",0,-2,4,1,0x4,3,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcff},
    { 0x00205820, 0x40608000, 0x94200000, 0x08260400, 0x80604000, 0x58200000, 0x04260800, 0x00209420}
   , 78,93,0,NULL, 0,5,5,5,0,0,clamp1_helper,NULL,3},
  {pat465,7,8, "EC68",0,0,1,3,0x1,0,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00200600, 0x00204080, 0x40200000, 0x04200000, 0x40200000, 0x06200000, 0x00200408, 0x00204000}
   , 83,93,0,NULL, 256,5,5,0,0,0,NULL,NULL,3},
  {pat708,13,8, "ED18",-1,0,2,3,0x2,1,3,
    { 0x023f3f3f, 0x00f0f0f8, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0200, 0x003f3fbf, 0x00f0f0f0},
    { 0x00190600, 0x00106090, 0x40900000, 0x24100000, 0x60100000, 0x06190000, 0x00102418, 0x00904000}
   , 93,93,0,NULL, 0,0,0,0,0,0,NULL,autohelper708,0},
  {pat497,5,8, "EC100",0,-1,1,2,0x2,1,0,
    { 0x0030ff00, 0xc0f0c0c0, 0xfc300000, 0x0c3c0c00, 0xc0f0c000, 0xff300000, 0x0c3c0c0c, 0x0030fc00},
    { 0x00108200, 0x80100080, 0x08100000, 0x00100800, 0x00108000, 0x82100000, 0x08100008, 0x00100800}
   , 82,92,0,NULL, 258,5,5,0,0,0,NULL,autohelper497,0},
  {pat174,16,8, "EB919",0,-1,3,2,0x4,0,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00202400, 0x00a04000, 0x60200000, 0x04280000, 0x40a00000, 0x24200000, 0x00280400, 0x00206000}
   , 77,92,0,NULL, 0,10,0,5,0,0,NULL,NULL,3},
  {pat125,9,8, "EB702",-1,-1,1,3,0x2,1,2,
    { 0x083fff00, 0xc0f0f8f0, 0xfcf08000, 0xbc3c0c00, 0xf8f0c000, 0xff3f0800, 0x0c3cbc3c, 0x80f0fc00},
    { 0x00240800, 0x00209000, 0x80600000, 0x18200000, 0x90200000, 0x08240000, 0x00201800, 0x00608000}
   , 77,92,0,NULL, 10,5,5,5,0,0,NULL,autohelper125,3},
  {pat629,11,8, "CC105",0,-1,2,2,0x0,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00210049, 0x00200010, 0x00200000, 0x02200100, 0x00200000, 0x00210000, 0x01200211, 0x00200084}
   , 82,92,0,NULL, 256,5,5,0,0,0,NULL,NULL,3},
  {pat51,24,8, "EB316",0,0,3,5,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00251000, 0x00601010, 0x10600000, 0x10240000, 0x10600000, 0x10250000, 0x00241010, 0x00601000}
   , 77,92,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat406,24,8, "EC10",-2,-1,1,4,0x1,1,0,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x001a0400, 0x00106020, 0x40900000, 0x24100000, 0x60100000, 0x041a0000, 0x00102420, 0x00904000}
   , 82,92,0,NULL, 192,5,5,0,0,0,NULL,NULL,0},
  {pat538,8,8, "CC14",-1,-1,3,1,0x0,2,1,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204440, 0x40204000, 0x44200000, 0x04200500, 0x40204000, 0x44200000, 0x05200400, 0x00204404}
   , 82,92,0,NULL, 96,5,5,0,0,0,NULL,NULL,3},
  {pat547,6,8, "CC23",0,0,2,2,0x0,1,1,
    { 0x003c3f0c, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3f0c, 0x00f0f0c0},
    { 0x00102204, 0x00900080, 0x20100000, 0x01180000, 0x00900000, 0x22100000, 0x00180108, 0x00102040}
   , 82,92,0,NULL, 256,5,5,0,0,0,NULL,autohelper547,0},
  {pat630,12,8, "CC106",0,-1,2,3,0x0,1,1,
    { 0x003effff, 0xc0f0f0e0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3e0000, 0x0f3f3f2f, 0x00f0fcfc},
    { 0x00200049, 0x00200000, 0x00200000, 0x02200100, 0x00200000, 0x00200000, 0x01200201, 0x00200084}
   , 82,92,0,NULL, 256,5,5,0,0,0,NULL,autohelper630,3},
  {pat499,7,8, "EC102",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00290400, 0x00206010, 0x40a00000, 0x24200000, 0x60200000, 0x04290000, 0x00202410, 0x00a04000}
   , 82,92,0,NULL, 256,5,5,0,0,0,NULL,autohelper499,3},
  {pat1,22,8, "EB2",0,-1,3,4,0x2,2,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00280100, 0x00202040, 0x00a00000, 0x20200000, 0x20200000, 0x01280000, 0x00202004, 0x00a00000}
   , 72,92,1,assist_params1, 0,5,5,5,0,0,NULL,NULL,3},
  {pat417,19,8, "EC21",-1,-2,3,1,0x8,-1,0,
    { 0xf0fcfcfc, 0xfcfcf000, 0xffff3f00, 0x3fffffff, 0xf0fcfcfc, 0xfcfcf000, 0xffff3f00, 0x3fffffff},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat597,9,8, "CC73",0,-1,2,2,0x0,1,0,
    { 0x003ffff0, 0xc0f0f0f0, 0xfcf00000, 0x3c3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3c3c, 0x00f0fc3c},
    { 0x00210240, 0x00200090, 0x00200000, 0x00200100, 0x00200000, 0x02210000, 0x01200018, 0x00200004}
   , 82,92,0,NULL, 0,5,5,0,0,0,wide_break_helper,NULL,3},
  {pat425,14,8, "EC29",0,0,2,4,0x2,0,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00140200, 0x00101080, 0x00500000, 0x10100000, 0x10100000, 0x02140000, 0x00101008, 0x00500000}
   , 82,92,0,NULL, 320,5,5,0,0,0,NULL,NULL,0},
  {pat1060,20,8, "EJ2",-2,-1,2,2,0x1,0,1,
    { 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 77,92,1,assist_params1060, 0,10,0,0,0,0,NULL,NULL,3},
  {pat418,18,8, "EC22",0,-2,4,1,0x8,2,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00101820, 0x00508000, 0x90100000, 0x08160000, 0x80500000, 0x18100000, 0x00160800, 0x00109020}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat441,20,8, "EC44",-1,-1,3,2,0x4,1,1,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00204010, 0x40200000, 0x04200000, 0x00210400, 0x00204000, 0x40200000, 0x04210000, 0x00200410}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat312,9,4, "CB257",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3e3f0000, 0x003f3f3b, 0x00f0f0b0, 0xf0f00000, 0x3f3f0000, 0x003f3e3f},
    { 0x00102010, 0x00900000, 0x20100000, 0x00190000, 0x00900000, 0x20100000, 0x00190000, 0x00102010}
   , 77,92,0,NULL, 42,5,5,5,0,0,NULL,autohelper312,0},
  {pat596,8,8, "CC72",0,0,2,2,0x0,1,0,
    { 0x003f3f34, 0x00f0f0f0, 0xf0f00000, 0x3d3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3d3c, 0x00f0f070},
    { 0x00210210, 0x00200090, 0x00200000, 0x00210000, 0x00200000, 0x02210000, 0x00210018, 0x00200010}
   , 82,92,0,NULL, 0,5,5,0,0,0,wide_break_helper,NULL,3},
  {pat411,21,8, "EC15",-1,0,3,4,0x2,1,3,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00110200, 0x00100090, 0x00100000, 0x00100000, 0x00100000, 0x02110000, 0x00100018, 0x00100000}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat421,16,8, "EC25",0,-1,3,2,0x2,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00109220, 0x80500080, 0x18100000, 0x00160800, 0x00508000, 0x92100000, 0x08160008, 0x00101820}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat420,16,8, "EC24",0,-1,3,2,0x2,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00108200, 0x80100080, 0x08100000, 0x00100800, 0x00108000, 0x82100000, 0x08100008, 0x00100800}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat715,9,8, "ED25",0,-2,2,1,0x2,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00204400, 0x40204000, 0x45200000, 0x04200404, 0x40204040, 0x44200000, 0x04200400, 0x00204500}
   , 92,92,0,NULL, 8,0,0,0,0,0,save_on_second_helper,NULL,3},
  {pat529,8,4, "CC5",-2,0,2,2,0x0,0,1,
    { 0x3f3f0c00, 0x003cfe3c, 0xc0f0f080, 0xfcf00000, 0xfe3c0000, 0x0c3f3f08, 0x00f0fcf0, 0xf0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 82,92,0,NULL, 74,5,5,0,0,0,peep_connect_helper,NULL,0},
  {pat107,8,8, "EB620",0,-1,2,1,0x2,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 65,92,2,assist_params107, 30,5,5,5,0,0,NULL,NULL,0},
  {pat435,18,8, "EC39",-1,-1,2,3,0x2,-1,1,
    { 0xfd3fffff, 0xccfcfcf4, 0xfcf0fc00, 0xffffcf00, 0xfcfccc00, 0xff3ffd00, 0xcfffff7f, 0xfcf0fcfc},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat716,9,8, "ED26",0,-2,2,1,0x2,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00108800, 0x80108000, 0x8a100000, 0x08100808, 0x80108080, 0x88100000, 0x08100800, 0x00108a00}
   , 92,92,0,NULL, 0,0,0,0,0,0,save_on_second_helper,NULL,0},
  {pat208,18,8, "EB1507",-2,0,2,4,0x2,1,1,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00120100, 0x00100060, 0x00100000, 0x00100000, 0x00100000, 0x01120000, 0x00100024, 0x00100000}
   , 62,92,1,assist_params208, 0,5,5,5,0,0,NULL,NULL,0},
  {pat436,18,8, "EC39b",0,-3,3,1,0x2,0,-2,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00104800, 0x40108000, 0x86100000, 0x08100408, 0x80104080, 0x48100000, 0x04100800, 0x00108600}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat464,15,8, "EC67",0,-1,3,2,0x2,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x001092a4, 0x80500080, 0x18100000, 0x01160a00, 0x00508000, 0x92100000, 0x0a160108, 0x00101868}
   , 82,92,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat531,6,8, "CC7",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3f0c, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3f0c},
    { 0x00201080, 0x00600000, 0x11200000, 0x00240204, 0x00600040, 0x10200000, 0x02240000, 0x00201108}
   , 82,92,0,NULL, 192,5,5,0,0,0,NULL,NULL,3},
  {pat1037,25,8, "J1",-2,-1,2,3,0x5,0,1,
    { 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 82,92,0,NULL, 0,10,0,0,0,0,NULL,NULL,3},
  {pat714,14,8, "ED24",0,0,2,4,0x2,0,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120100, 0x00100060, 0x00100000, 0x00100000, 0x00100000, 0x01120000, 0x00100024, 0x00100000}
   , 92,92,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat713,14,8, "ED23",0,0,2,4,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120100, 0x00100060, 0x00100000, 0x00100000, 0x00100000, 0x01120000, 0x00100024, 0x00100000}
   , 92,92,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat525,7,8, "CC1",0,0,1,3,0x0,0,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00180600, 0x00106080, 0x40900000, 0x24100000, 0x60100000, 0x06180000, 0x00102408, 0x00904000}
   , 82,92,0,NULL, 160,5,5,0,0,0,NULL,autohelper525,0},
  {pat595,7,8, "CC71",0,-1,1,2,0x0,1,0,
    { 0x003fff00, 0xc0f0f0f0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3f0000, 0x0c3c3c3c, 0x00f0fc00},
    { 0x00214200, 0x40200090, 0x04200000, 0x00200400, 0x00204000, 0x42210000, 0x04200018, 0x00200400}
   , 82,92,0,NULL, 0,5,5,0,0,0,wide_break_helper,NULL,3},
  {pat554,8,8, "CC30",-1,0,1,3,0x0,0,2,
    { 0x053f3f00, 0x00f0f4f4, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0500, 0x003c7c7c, 0x40f0f000},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 82,92,0,NULL, 64,5,5,0,0,0,NULL,autohelper554,3},
  {pat542,9,8, "CC18",0,-1,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00206444, 0x40a04000, 0x64200000, 0x05280500, 0x40a04000, 0x64200000, 0x05280500, 0x00206444}
   , 81,91,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat470,12,8, "EC73",0,-1,1,5,0x2,1,2,
    { 0x003f7f00, 0x40f0f0f0, 0xf4f00000, 0x3c3c0400, 0xf0f04000, 0x7f3f0000, 0x043c3c3c, 0x00f0f400},
    { 0x00240800, 0x00209000, 0x80600000, 0x18200000, 0x90200000, 0x08240000, 0x00201800, 0x00608000}
   , 80,90,0,NULL, 66,5,5,0,0,0,NULL,NULL,3},
  {pat188,23,8, "EB1205",-1,-3,2,2,0x1,0,-2,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x001041a0, 0x40100040, 0x06100000, 0x00120608, 0x00104080, 0x41100000, 0x06120004, 0x00100628}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat1056,36,8, "J20",-1,-1,4,6,0xa,3,3,
    { 0xd4f4ffff, 0xfcf4d4c0, 0xfc7c5c00, 0x5f7fff00, 0xd4f4fc00, 0xfff4d400, 0xff7f5f0f, 0x5c7cfcfc},
    { 0x00201a15, 0x00608080, 0x90200000, 0x09250000, 0x80600000, 0x1a200000, 0x00250909, 0x00209050}
   , 90,90,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat594,11,8, "CC70",0,-1,3,2,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00108000, 0x80100000, 0x08100000, 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x00100800}
   , 80,90,0,NULL, 66,5,5,0,0,0,NULL,NULL,0},
  {pat468,20,8, "EC71",0,-4,3,0,0x2,2,-2,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100010, 0x00100000, 0x02100000, 0x00110008, 0x00100080, 0x00100000, 0x00110000, 0x00100210}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat494,17,8, "EC97",0,-2,3,2,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3c0000, 0x0f3f3f0f, 0x00f0ffff},
    { 0x00280400, 0x00206000, 0x41a00000, 0x24200005, 0x60200040, 0x04280000, 0x00202400, 0x00a04101}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat114,23,8, "EB627",0,-1,3,4,0x2,2,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00109280, 0x80500080, 0x18100000, 0x00140a00, 0x00508000, 0x92100000, 0x0a140008, 0x00101808}
   , 70,90,1,assist_params114, 0,5,5,5,0,0,NULL,NULL,0},
  {pat226,11,8, "EB1707",0,-1,3,1,0x2,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00244000, 0x40201000, 0x04600000, 0x10200400, 0x10204000, 0x40240000, 0x04201000, 0x00600400}
   , 75,90,0,NULL, 8,5,5,5,0,0,NULL,NULL,3},
  {pat469,20,8, "EC72",0,-4,3,0,0x2,1,-3,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100010, 0x00100000, 0x02100000, 0x00110009, 0x00100080, 0x00100000, 0x00110000, 0x00100211}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat472,7,8, "EC75",0,-2,2,1,0x2,1,0,
    { 0x0030fcf0, 0xc0f0c000, 0xfc300000, 0x0c3f0f03, 0xc0f0c000, 0xfc300000, 0x0f3f0c00, 0x0030fc3f},
    { 0x00108800, 0x80108000, 0x88100000, 0x08100801, 0x80108000, 0x88100000, 0x08100800, 0x00108801}
   , 80,90,0,NULL, 264,5,5,0,0,0,NULL,NULL,0},
  {pat187,20,8, "EB1204",0,-2,3,2,0x2,2,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00280610, 0x00206080, 0x41a00000, 0x24210004, 0x60200040, 0x06280000, 0x00212408, 0x00a04110}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat3,17,8, "EB4",0,-1,3,3,0x2,2,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 65,90,1,assist_params3, 0,5,5,5,0,0,NULL,NULL,3},
  {pat109,12,8, "EB622",0,-3,2,1,0x2,1,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3e0000, 0x0f3f3f2f, 0xc0f0f0e0, 0xfcf00000, 0x3f3f0f00, 0x003effff},
    { 0x00100808, 0x00108000, 0x80100000, 0x0a100000, 0x80100000, 0x08100000, 0x00100a00, 0x00108080}
   , 65,90,1,assist_params109, 14,5,5,5,0,0,NULL,NULL,0},
  {pat209,16,8, "EB1508",-1,-1,2,2,0x4,0,1,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00200084, 0x00200000, 0x00200000, 0x01200200, 0x00200000, 0x00200000, 0x02200100, 0x00200048}
   , 70,90,0,NULL, 0,10,5,5,0,0,NULL,NULL,3},
  {pat110,11,8, "EB623",0,-1,2,2,0x2,1,1,
    { 0x00bcffff, 0xe0f0f0c0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbc0000, 0x2f3f3f0f, 0x00f8fcfc},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 55,90,2,assist_params110, 14,5,5,5,0,0,NULL,NULL,0},
  {pat471,7,8, "EC74",0,-2,2,1,0x2,1,0,
    { 0x0030fcf0, 0xc0f0c000, 0xfc300000, 0x0c3f0f03, 0xc0f0c000, 0xfc300000, 0x0f3f0c00, 0x0030fc3f},
    { 0x00204400, 0x40204000, 0x44200000, 0x04200402, 0x40204000, 0x44200000, 0x04200400, 0x00204402}
   , 80,90,0,NULL, 72,5,5,0,0,0,NULL,NULL,3},
  {pat235,15,8, "EB1805",0,-3,2,2,0x2,1,-1,
    { 0x00f0fcff, 0xf0f0c000, 0xff3e0000, 0x0f3f3f2f, 0xc0f0f0e0, 0xfcf00000, 0x3f3f0f03, 0x003effff},
    { 0x00101822, 0x00508000, 0x90100000, 0x08160000, 0x80500000, 0x18100000, 0x00160802, 0x00109020}
   , 75,90,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat454,6,8, "EC57",0,0,1,3,0x1,0,1,
    { 0x003f0f00, 0x0030f0f0, 0xc0f00000, 0x3c300000, 0xf0300000, 0x0f3f0000, 0x00303c3c, 0x00f0c000},
    { 0x00200600, 0x00204080, 0x40200000, 0x04200000, 0x40200000, 0x06200000, 0x00200408, 0x00204000}
   , 80,90,0,NULL, 266,5,5,0,0,0,NULL,NULL,3},
  {pat453,13,8, "EC56",0,-1,2,3,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00128100, 0x80100060, 0x08100000, 0x00100800, 0x00108000, 0x81120000, 0x08100024, 0x00100800}
   , 80,90,0,NULL, 72,5,5,0,0,0,NULL,NULL,0},
  {pat204,23,8, "EB1503",-1,-3,3,1,0x8,2,0,
    { 0xf0fcfcfc, 0xfcfcf000, 0xffff3f00, 0x3fffffff, 0xf0fcfcfc, 0xfcfcf000, 0xffff3f00, 0x3fffffff},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 60,90,2,assist_params204, 0,10,-10,5,0,0,NULL,NULL,0},
  {pat452,4,8, "EC55",0,-1,1,1,0x2,1,0,
    { 0x0030fc00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0x0030fc00},
    { 0x00108800, 0x80108000, 0x88100000, 0x08100800, 0x80108000, 0x88100000, 0x08100800, 0x00108800}
   , 80,90,0,NULL, 258,5,5,0,0,0,NULL,NULL,0},
  {pat221,15,8, "EB1702",0,-2,2,2,0x2,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200100, 0x00200040, 0x01200000, 0x00200004, 0x00200040, 0x01200000, 0x00200004, 0x00200100}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat225,27,8, "EB1706",0,-2,4,3,0x2,2,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xfffc0000, 0x3f3f3f0f, 0x00fcffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200001, 0x00200000, 0x00200000, 0x00200000, 0x00200001}
   , 75,90,0,NULL, 8,5,5,5,0,0,NULL,NULL,3},
  {pat721,14,8, "ED31",0,-1,2,3,0x2,2,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00260800, 0x00209020, 0x80600000, 0x18200000, 0x90200000, 0x08260000, 0x00201820, 0x00608000}
   , 90,90,0,NULL, 1,0,0,0,0,0,NULL,autohelper721,3},
  {pat719,10,8, "ED29",-1,-2,1,1,0x1,1,-1,
    { 0xfcfcc000, 0xfc3c3c00, 0x0fffff00, 0xf0f0fcfc, 0x3c3cfcfc, 0xc0fcfc00, 0xfcf0f000, 0xffff0f00},
    { 0x00140000, 0x00101000, 0x01500000, 0x10100004, 0x10100040, 0x00140000, 0x00101000, 0x00500100}
   , 80,90,1,assist_params719, 32,0,0,0,0,0,NULL,autohelper719,0},
  {pat694,30,8, "ED4",0,-2,5,2,0x8,4,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x001041a0, 0x40100040, 0x04100000, 0x00120600, 0x00104000, 0x41100000, 0x06120004, 0x00100428}
   , 85,90,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat589,22,8, "CC65",0,-1,3,5,0x0,2,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat450,8,8, "EC53",0,0,1,3,0x2,1,2,
    { 0x003f1f00, 0x0070f0f0, 0xd0f00000, 0x3c340000, 0xf0700000, 0x1f3f0000, 0x00343c3c, 0x00f0d000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 80,90,0,NULL, 258,10,0,0,0,0,NULL,NULL,3},
  {pat94,11,8, "EB607",0,-1,2,2,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00158000, 0x80101010, 0x08500000, 0x10100800, 0x10108000, 0x80150000, 0x08101010, 0x00500800}
   , 35,90,0,NULL, 0,45,5,5,0,0,NULL,autohelper94,0},
  {pat593,11,8, "CC69",0,-1,3,1,0x0,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 80,90,0,NULL, 66,5,5,0,0,0,NULL,NULL,0},
  {pat449,8,8, "EC52",0,0,1,3,0x2,1,1,
    { 0x003f1f00, 0x0070f0f0, 0xd0f00000, 0x3c340000, 0xf0700000, 0x1f3f0000, 0x00343c3c, 0x00f0d000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 80,90,0,NULL, 258,10,0,0,0,0,NULL,NULL,3},
  {pat178,11,8, "EB923",0,-1,2,2,0x2,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00285040, 0x40602000, 0x14a00000, 0x20240500, 0x20604000, 0x50280000, 0x05242000, 0x00a01404}
   , 75,90,0,NULL, 6,10,0,5,0,0,NULL,NULL,3},
  {pat545,24,8, "CC21",0,-3,3,2,0x0,0,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00126020, 0x40900020, 0x24100000, 0x001a0400, 0x00904000, 0x60120000, 0x041a0020, 0x00102420}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat592,17,8, "CC68",0,-2,4,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200040, 0x00200000, 0x00200000, 0x00200100}
   , 70,90,1,assist_params592, 0,5,5,0,0,0,NULL,NULL,3},
  {pat448,8,8, "EC51",0,0,1,3,0x2,1,1,
    { 0x003f1f00, 0x0070f0f0, 0xd0f00000, 0x3c340000, 0xf0700000, 0x1f3f0000, 0x00343c3c, 0x00f0d000},
    { 0x00240200, 0x00201080, 0x00600000, 0x10200000, 0x10200000, 0x02240000, 0x00201008, 0x00600000}
   , 80,90,0,NULL, 258,10,0,0,0,0,NULL,NULL,3},
  {pat173,14,8, "EB918",0,-1,2,3,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00186400, 0x40906000, 0x64900000, 0x24180400, 0x60904000, 0x64180000, 0x04182400, 0x00906400}
   , 70,90,1,assist_params173, 0,5,5,5,0,0,NULL,autohelper173,0},
  {pat456,20,8, "EC59",-2,0,1,4,0x1,0,2,
    { 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000},
    { 0x00101200, 0x00500080, 0x10100000, 0x00140000, 0x00500000, 0x12100000, 0x00140008, 0x00101000}
   , 70,90,1,assist_params456, 0,5,5,0,0,0,NULL,NULL,0},
  {pat447,17,8, "EC50",-1,0,3,3,0x2,1,2,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 60,90,1,assist_params447, 10,10,0,0,0,0,NULL,autohelper447,0},
  {pat446,13,8, "EC49",-1,0,2,3,0x2,1,2,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 60,90,1,assist_params446, 10,10,0,0,0,0,NULL,autohelper446,0},
  {pat720,14,8, "ED30",0,-1,2,3,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00190400, 0x00106010, 0x40900000, 0x24100000, 0x60100000, 0x04190000, 0x00102410, 0x00904000}
   , 90,90,0,NULL, 0,0,0,0,0,0,NULL,autohelper720,0},
  {pat616,12,8, "CC92",0,-1,3,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00108000, 0x80100000, 0x08100000, 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x00100800}
   , 80,90,0,NULL, 74,5,5,0,0,0,NULL,NULL,0},
  {pat850,9,8, "CD41",-1,-1,2,1,0x0,0,-1,
    { 0x3cfcfc30, 0xf0fcfc00, 0xfcfcf000, 0xfcff3c00, 0xfcfcf000, 0xfcfc3c00, 0x3cfffc00, 0xf0fcfc30},
    { 0x00186000, 0x40902000, 0x24900000, 0x20180400, 0x20904000, 0x60180000, 0x04182000, 0x00902400}
   , 90,90,0,NULL, 0,0,0,0,0,0,backfire_helper,NULL,0},
  {pat670,15,4, "CC146",0,0,2,4,0x0,1,2,
    { 0x003f2b3f, 0x00b0b0f0, 0xa0f00000, 0x3b3b0000, 0xb0b00000, 0x2b3f0000, 0x003b3b3f, 0x00f0a0f0},
    { 0x00120012, 0x00100020, 0x00100000, 0x00110000, 0x00100000, 0x00120000, 0x00110022, 0x00100010}
   , 85,90,0,NULL, 256,0,5,0,0,0,NULL,NULL,0},
  {pat442,14,8, "EC45",-1,-1,2,2,0x1,0,1,
    { 0xffffff3c, 0xfcfcfcfc, 0xfcfcfc00, 0xfffffc00, 0xfcfcfc00, 0xffffff00, 0xfcfffffc, 0xfcfcfcf0},
    { 0x00201204, 0x00600080, 0x10200000, 0x01240000, 0x00600000, 0x12200000, 0x00240108, 0x00201040}
   , 75,90,1,assist_params442, 0,5,5,0,0,0,NULL,autohelper442,3},
  {pat185,9,8, "EB1202",0,0,2,2,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00261000, 0x00601020, 0x10600000, 0x10240000, 0x10600000, 0x10260000, 0x00241020, 0x00601000}
   , 75,90,0,NULL, 10,5,5,5,0,0,NULL,autohelper185,3},
  {pat85,25,8, "EB523",-1,0,3,4,0x2,1,1,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 45,90,2,assist_params85, 0,5,5,5,0,0,NULL,autohelper85,3},
  {pat534,7,8, "CC10",0,0,2,2,0x0,1,1,
    { 0x003f3f30, 0x00f0f0f0, 0xf0f00000, 0x3c3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3c3c, 0x00f0f030},
    { 0x00180110, 0x00102040, 0x00900000, 0x20110000, 0x20100000, 0x01180000, 0x00112004, 0x00900010}
   , 70,90,1,assist_params534, 74,5,5,0,0,0,NULL,NULL,0},
  {pat731,18,8, "ED41",0,-1,5,2,0x8,3,-1,
    { 0x00f0fcff, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0x003cfcfc},
    { 0x00201411, 0x00604000, 0x50200000, 0x04250000, 0x40600000, 0x14200000, 0x00250401, 0x00205010}
   , 90,90,0,NULL, 4,0,0,0,0,0,NULL,NULL,3},
  {pat267,11,8, "CB212",0,0,2,3,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 70,90,0,NULL, 0,10,10,0,0,0,NULL,autohelper267,0},
  {pat732,18,8, "ED42",0,-1,5,2,0x8,4,-1,
    { 0x00f0fcff, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0x003cfcfc},
    { 0x00102822, 0x00908000, 0xa0100000, 0x081a0000, 0x80900000, 0x28100000, 0x001a0802, 0x0010a020}
   , 90,90,0,NULL, 16,0,0,0,0,0,NULL,NULL,0},
  {pat1075,28,8, "EJ19",-1,-3,3,3,0x2,0,-1,
    { 0x30ffffff, 0xf0fcf0f0, 0xfffe3000, 0x3fff3f2f, 0xf0fcf0e0, 0xffff3000, 0x3fff3f3f, 0x30feffff},
    { 0x00259890, 0x80609010, 0x99600000, 0x18250a04, 0x90608040, 0x98250000, 0x0a251810, 0x00609918}
   , 90,90,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat484,5,8, "EC87",0,-1,1,1,0x2,1,0,
    { 0x003cf400, 0xc0f07000, 0x7cf00000, 0x343c0c00, 0x70f0c000, 0xf43c0000, 0x0c3c3400, 0x00f07c00},
    { 0x00188000, 0x80102000, 0x08900000, 0x20100800, 0x20108000, 0x80180000, 0x08102000, 0x00900800}
   , 80,90,0,NULL, 386,5,5,0,0,0,NULL,autohelper484,0},
  {pat121,28,8, "EB634",-3,-4,2,0,0x8,0,-3,
    { 0xf0f0e000, 0xffbf0000, 0x2f3f3f3f, 0x00f8fcff, 0x00bfffff, 0xe0f0f0f0, 0xfcf80000, 0x3f3f2f03},
    { 0x00104000, 0x40100000, 0x04100000, 0x00100402, 0x00104000, 0x40100000, 0x04100000, 0x00100402}
   , 55,90,1,assist_params121, 8,5,5,5,0,0,NULL,NULL,0},
  {pat530,7,4, "CC6",-2,0,2,2,0x0,0,1,
    { 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 80,90,0,NULL, 74,5,5,0,0,0,NULL,autohelper530,0},
  {pat130,14,8, "EB707",0,-2,2,3,0x6,2,1,
    { 0x0038ffff, 0xc0f0e0c0, 0xffb00000, 0x2f3f0f0f, 0xe0f0c0c0, 0xff380000, 0x0f3f2f0f, 0x00b0ffff},
    { 0x00102420, 0x00904000, 0x60100000, 0x041a0000, 0x40900000, 0x24100000, 0x001a0400, 0x00106020}
   , 80,90,0,NULL, 10,5,5,0,0,0,NULL,autohelper130,0},
  {pat665,9,8, "CC141",0,-2,2,0,0x0,0,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00204090, 0x40200000, 0x06200000, 0x0021060a, 0x00204080, 0x40200000, 0x06210000, 0x0020061a}
   , 80,90,0,NULL, 8,5,5,0,0,0,sente_extend_helper,NULL,3},
  {pat664,6,8, "CC140",0,0,2,1,0x0,1,0,
    { 0x003c3c3c, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f0f0},
    { 0x00240018, 0x00201000, 0x00600000, 0x12210000, 0x10200000, 0x00240000, 0x00211200, 0x00600090}
   , 80,90,0,NULL, 72,5,5,0,0,0,NULL,autohelper664,3},
  {pat809,13,8, "ED119",0,-2,3,1,0x8,1,0,
    { 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0x003f3fff},
    { 0x00108060, 0x80100000, 0x08100000, 0x00120900, 0x00108000, 0x80100000, 0x09120000, 0x00100824}
   , 90,90,0,NULL, 8,0,0,0,0,0,NULL,NULL,0},
  {pat492,14,8, "EC95",-1,-2,1,2,0x2,1,0,
    { 0x5fffff00, 0xf4f4fcfc, 0xfffed400, 0xfc7c7c2c, 0xfcf4f4e0, 0xffff5f00, 0x7c7cfcfc, 0xd4feff00},
    { 0x00240000, 0x00201000, 0x01600000, 0x10200004, 0x10200040, 0x00240000, 0x00201000, 0x00600100}
   , 70,90,1,assist_params492, 96,10,0,0,0,0,NULL,NULL,3},
  {pat662,5,8, "CC138",0,-1,1,1,0x0,1,0,
    { 0x003cfc00, 0xc0f0f000, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3c3c00, 0x00f0fc00},
    { 0x00188400, 0x80106000, 0x48900000, 0x24100800, 0x60108000, 0x84180000, 0x08102400, 0x00904800}
   , 80,90,0,NULL, 8,5,5,0,0,0,sente_cut_helper,NULL,0},
  {pat486,6,8, "EC89",0,0,1,2,0x2,1,1,
    { 0x003f1d00, 0x0070f070, 0xd0f00000, 0x3c340000, 0xf0700000, 0x1d3f0000, 0x00343c34, 0x00f0d000},
    { 0x00260000, 0x00201020, 0x00600000, 0x10200000, 0x10200000, 0x00260000, 0x00201020, 0x00600000}
   , 80,90,0,NULL, 258,5,5,0,0,0,NULL,autohelper486,3},
  {pat661,5,8, "CC137",0,-1,1,1,0x0,1,0,
    { 0x003cfc00, 0xc0f0f000, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3c3c00, 0x00f0fc00},
    { 0x00244800, 0x40209000, 0x84600000, 0x18200400, 0x90204000, 0x48240000, 0x04201800, 0x00608400}
   , 80,90,0,NULL, 8,5,5,0,0,0,sente_cut_helper,NULL,3},
  {pat544,11,8, "CC20",0,-1,4,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00206444, 0x40a04000, 0x64200000, 0x05280500, 0x40a04000, 0x64200000, 0x05280500, 0x00206444}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat79,21,8, "EB517",0,-1,4,3,0x2,2,1,
    { 0x003c3fff, 0x00f0f0c0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3c0000, 0x033f3f0f, 0x00f0f0fc},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat433,16,8, "EC37",0,-1,3,3,0x2,1,1,
    { 0x003f3fff, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0fc},
    { 0x00201080, 0x00600000, 0x10200000, 0x00240200, 0x00600000, 0x10200000, 0x02240000, 0x00201008}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat133,11,8, "EB710",0,-2,1,3,0x2,1,-1,
    { 0x00ffff00, 0xf0f0f0f0, 0xfffe0000, 0x3c3c3c2c, 0xf0f0f0e0, 0xffff0000, 0x3c3c3c3c, 0x00feff00},
    { 0x00162800, 0x00909020, 0xa0500000, 0x18180000, 0x90900000, 0x28160000, 0x00181820, 0x0050a000}
   , 75,90,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat758,9,8, "ED68",0,0,2,2,0x8,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00290229, 0x00202090, 0x00a00000, 0x22220000, 0x20200000, 0x02290000, 0x00222219, 0x00a000a0}
   , 90,90,0,NULL, 9,0,0,0,0,0,throw_in_atari_helper,autohelper758,3},
  {pat488,4,8, "EC91",0,-1,1,1,0x2,1,0,
    { 0x0030fc00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0x0030fc00},
    { 0x00108800, 0x80108000, 0x88100000, 0x08100800, 0x80108000, 0x88100000, 0x08100800, 0x00108800}
   , 80,90,0,NULL, 258,5,5,0,0,0,NULL,NULL,0},
  {pat135,8,8, "EB712",0,-1,3,0,0x8,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c},
    { 0x00209000, 0x80600000, 0x18200000, 0x00240800, 0x00608000, 0x90200000, 0x08240000, 0x00201800}
   , 85,90,0,NULL, 0,0,0,5,0,0,block_to_kill_helper,NULL,3},
  {pat451,20,8, "EC54",-1,-1,2,3,0x2,0,1,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00120900, 0x00108060, 0x80100000, 0x08100000, 0x80100000, 0x09120000, 0x00100824, 0x00108000}
   , 80,90,0,NULL, 32,5,5,0,0,0,NULL,NULL,0},
  {pat138,14,8, "EB803",0,-2,2,2,0x2,1,1,
    { 0x007fffff, 0xd0f0f0f0, 0xfff40000, 0x3f3f1f0f, 0xf0f0d0c0, 0xff7f0000, 0x1f3f3f3f, 0x00f4ffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200005, 0x00200040, 0x00200000, 0x00200000, 0x00200101}
   , 65,90,1,assist_params138, 10,10,5,5,0,0,NULL,NULL,3},
  {pat139,14,8, "EB804",0,-1,2,3,0x2,1,2,
    { 0x0037ffff, 0xc0f0d0f0, 0xfc700000, 0x1f3f0f00, 0xd0f0c000, 0xff370000, 0x0f3f1f3f, 0x0070fcfc},
    { 0x00204040, 0x40200000, 0x04200000, 0x00200500, 0x00204000, 0x40200000, 0x05200000, 0x00200404}
   , 65,90,1,assist_params139, 10,10,5,5,0,0,NULL,NULL,3},
  {pat140,12,8, "EB805",0,-2,2,2,0x2,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfff00000, 0x3f3f0f0e, 0xf0f0c0c0, 0xff3c0000, 0x0f3f3f0f, 0x00f0fffe},
    { 0x00200040, 0x00200000, 0x01200000, 0x00200104, 0x00200040, 0x00200000, 0x01200000, 0x00200104}
   , 65,90,1,assist_params140, 10,10,5,5,0,0,NULL,NULL,3},
  {pat141,15,8, "EB806",0,-2,2,3,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfff00000, 0x3f3f0f0e, 0xf0f0c0c0, 0xff3f0000, 0x0f3f3f3f, 0x00f0fffe},
    { 0x00200040, 0x00200000, 0x01200000, 0x00200104, 0x00200040, 0x00200000, 0x01200000, 0x00200104}
   , 65,90,1,assist_params141, 10,10,5,5,0,0,NULL,NULL,3},
  {pat467,10,8, "EC70",0,-1,1,4,0x2,1,2,
    { 0x003fff00, 0xc0f0f0f0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3f0000, 0x0c3c3c3c, 0x00f0fc00},
    { 0x00250800, 0x00209010, 0x80600000, 0x18200000, 0x90200000, 0x08250000, 0x00201810, 0x00608000}
   , 80,90,0,NULL, 386,5,5,0,0,0,NULL,autohelper467,3},
  {pat602,15,8, "CC78",-1,-2,3,2,0x0,2,0,
    { 0x30ffffff, 0xf0fcf0f0, 0xfffc3000, 0x3fff3f0c, 0xf0fcf0c0, 0xffff3000, 0x3fff3f3f, 0x30fcfffc},
    { 0x00100200, 0x00100080, 0x02100000, 0x00100008, 0x00100080, 0x02100000, 0x00100008, 0x00100200}
   , 70,90,1,assist_params602, 0,5,5,0,0,0,NULL,NULL,0},
  {pat25,16,8, "EB114",0,-1,3,2,0x8,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00160200, 0x001010a0, 0x00500000, 0x10100000, 0x10100000, 0x02160000, 0x00101028, 0x00500000}
   , 65,90,1,assist_params25, 32,5,5,5,0,0,NULL,NULL,0},
  {pat513,10,4, "EC116",0,-1,3,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00206400, 0x40a04000, 0x64200000, 0x04280400, 0x40a04000, 0x64200000, 0x04280400, 0x00206400}
   , 90,90,0,NULL, 72,0,0,0,0,0,NULL,NULL,3},
  {pat430,10,8, "EC34",0,-1,2,2,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00204100, 0x40200040, 0x04200000, 0x00200400, 0x00204000, 0x41200000, 0x04200004, 0x00200400}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat429,12,8, "EC33",0,-1,2,2,0x2,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00295900, 0x4060a050, 0x94a00000, 0x28240400, 0xa0604000, 0x59290000, 0x04242814, 0x00a09400}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat398,12,8, "EC2",0,0,2,3,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x001a1000, 0x00502020, 0x10900000, 0x20140000, 0x20500000, 0x101a0000, 0x00142020, 0x00901000}
   , 80,90,0,NULL, 32,10,0,0,0,0,NULL,autohelper398,0},
  {pat496,9,8, "EC99",0,-1,1,3,0x2,1,0,
    { 0x003fff00, 0xc0f0f0f0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3f0000, 0x0c3c3c3c, 0x00f0fc00},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 80,90,0,NULL, 96,5,5,0,0,0,NULL,autohelper496,3},
  {pat428,12,8, "EC32",0,-1,2,2,0x2,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00214900, 0x40208050, 0x84200000, 0x08200400, 0x80204000, 0x49210000, 0x04200814, 0x00208400}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat512,12,4, "EC115",-1,0,2,2,0x2,1,1,
    { 0x153f3f3f, 0x00f4f4f4, 0xf0f05000, 0x7f7f0000, 0xf4f40000, 0x3f3f1500, 0x007f7f7f, 0x50f0f0f0},
    { 0x00190000, 0x00102010, 0x00900000, 0x20100000, 0x20100000, 0x00190000, 0x00102010, 0x00900000}
   , 90,90,0,NULL, 72,0,0,0,0,0,NULL,NULL,0},
  {pat511,10,4, "EC114",0,-1,3,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00109800, 0x80508000, 0x98100000, 0x08140800, 0x80508000, 0x98100000, 0x08140800, 0x00109800}
   , 90,90,0,NULL, 258,0,0,0,0,0,NULL,NULL,0},
  {pat427,14,8, "EC31",0,-1,4,1,0x8,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00140808, 0x00109000, 0x80500000, 0x1a100000, 0x90100000, 0x08140000, 0x00101a00, 0x00508080}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,0},
  {pat426,14,8, "EC30",0,-2,4,0,0x8,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,0},
  {pat378,15,8, "CB323",0,-1,3,2,0x0,1,1,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00209042, 0x80600000, 0x18200000, 0x00240900, 0x00608000, 0x90200000, 0x09240002, 0x00201804}
   , 85,90,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat71,15,8, "EB509",0,-1,3,2,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00108000, 0x80100000, 0x08100000, 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x00100800}
   , 75,90,0,NULL, 2,5,5,5,0,0,NULL,NULL,0},
  {pat646,16,8, "CC122",-1,-2,3,2,0x0,1,0,
    { 0x30ffffff, 0xf0fcf0f0, 0xfffc3000, 0x3fff3f0c, 0xf0fcf0c0, 0xffff3000, 0x3fff3f3f, 0x30fcfffc},
    { 0x00100200, 0x00100080, 0x02100000, 0x00100008, 0x00100080, 0x02100000, 0x00100008, 0x00100200}
   , 70,90,1,assist_params646, 0,5,5,0,0,0,NULL,NULL,0},
  {pat510,12,4, "EC113",-1,0,2,2,0x2,1,1,
    { 0x2a3f3f3f, 0x00f8f8f8, 0xf0f0a000, 0xbfbf0000, 0xf8f80000, 0x3f3f2a00, 0x00bfbfbf, 0xa0f0f0f0},
    { 0x00260000, 0x00201020, 0x00600000, 0x10200000, 0x10200000, 0x00260000, 0x00201020, 0x00600000}
   , 90,90,0,NULL, 258,0,0,0,0,0,NULL,NULL,3},
  {pat614,9,8, "CC90",0,0,3,2,0x0,1,1,
    { 0x003c3f3d, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0d, 0x00f0f0f0},
    { 0x00200110, 0x00200040, 0x00200000, 0x00210000, 0x00200000, 0x01200000, 0x00210004, 0x00200010}
   , 80,90,0,NULL, 72,10,0,0,0,0,NULL,NULL,3},
  {pat16,19,8, "EB104",-1,-4,2,0,0x1,1,-3,
    { 0xe0f0e0e0, 0xfcb80000, 0x2f3f2f00, 0x00baffff, 0x00b8fcfc, 0xe0f0e000, 0xffba0000, 0x2f3f2f2f},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100002, 0x00100000, 0x00100000, 0x00100000, 0x00100002}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat612,12,8, "CC88",0,-2,3,1,0x0,2,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0x003cffff},
    { 0x00100048, 0x00100000, 0x02100000, 0x0210010a, 0x00100080, 0x00100000, 0x01100200, 0x00100286}
   , 70,90,1,assist_params612, 64,10,0,0,0,0,NULL,NULL,0},
  {pat504,14,8, "EC107",0,-2,4,0,0x8,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 80,90,0,NULL, 258,5,5,0,0,0,NULL,NULL,3},
  {pat617,10,8, "CC93",0,-1,2,2,0x0,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00108284, 0x80100080, 0x08100000, 0x01100a00, 0x00108000, 0x82100000, 0x0a100108, 0x00100848}
   , 80,90,0,NULL, 64,5,5,0,0,0,NULL,NULL,0},
  {pat26,23,8, "EB115",0,-2,4,3,0x2,2,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3f0000, 0x0f3f3f3f, 0x00f0ffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200005, 0x00200040, 0x00200000, 0x00200000, 0x00200101}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat618,12,8, "CC94",-2,-1,2,4,0x0,0,2,
    { 0x0cffff3f, 0xf0f0fcf0, 0xfcfcc000, 0xff3f3c00, 0xfcf0f000, 0xffff0c00, 0x3c3fff3f, 0xc0fcfcf0},
    { 0x00108004, 0x80100000, 0x08100000, 0x01100800, 0x00108000, 0x80100000, 0x08100100, 0x00100840}
   , 80,90,0,NULL, 0,5,5,0,0,0,tobi_connect_helper,NULL,0},
  {pat611,11,8, "CC87",0,-1,2,2,0x0,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00200112, 0x00200040, 0x00200000, 0x00210000, 0x00200000, 0x01200000, 0x00210006, 0x00200010}
   , 70,90,1,assist_params611, 72,10,0,0,0,0,NULL,NULL,3},
  {pat641,11,8, "CC117",-1,0,1,3,0x0,0,2,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 80,90,0,NULL, 74,5,5,0,0,0,NULL,NULL,0},
  {pat640,9,8, "CC116",0,0,2,2,0x0,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00160102, 0x00101060, 0x00500000, 0x10100000, 0x10100000, 0x01160000, 0x00101026, 0x00500000}
   , 80,90,0,NULL, 8,5,5,0,0,0,tiger_defense_helper,NULL,0},
  {pat21,19,8, "EB109",0,-2,3,2,0x2,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0x00fcffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200005, 0x00200040, 0x00200000, 0x00200000, 0x00200101}
   , 70,90,0,NULL, 0,10,5,5,0,0,NULL,NULL,3},
  {pat413,15,8, "EC17",-1,-2,4,0,0x8,1,0,
    { 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff, 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f},
    { 0x00108060, 0x80100000, 0x08100000, 0x00120900, 0x00108000, 0x80100000, 0x09120000, 0x00100824}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat412,14,8, "EC16",-1,-2,3,0,0x8,1,0,
    { 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff, 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f},
    { 0x00108060, 0x80100000, 0x08100000, 0x00120900, 0x00108000, 0x80100000, 0x09120000, 0x00100824}
   , 80,90,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat503,8,8, "EC106",0,-1,2,1,0x4,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00244440, 0x40205000, 0x44600000, 0x14200500, 0x50204000, 0x44240000, 0x05201400, 0x00604404}
   , 80,90,0,NULL, 104,5,5,0,0,0,NULL,autohelper503,3},
  {pat836,9,8, "CD27",0,-1,3,1,0x0,2,1,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00106040, 0x40900000, 0x24100000, 0x00180500, 0x00904000, 0x60100000, 0x05180000, 0x00102404}
   , 90,90,0,NULL, 0,0,0,0,0,0,common_geta_helper,NULL,0},
  {pat637,7,4, "CC113",0,-1,2,1,0x0,1,0,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00204820, 0x40208000, 0x84200000, 0x08220400, 0x80204000, 0x48200000, 0x04220800, 0x00208420}
   , 80,90,0,NULL, 0,5,5,0,0,0,double_break_helper,NULL,3},
  {pat60,11,8, "EB408",-1,0,1,3,0x2,0,2,
    { 0x2f3f3f00, 0x00f8fcfc, 0xf0f0e000, 0xfcbc0000, 0xfcf80000, 0x3f3f2f00, 0x00bcfcfc, 0xe0f0f000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,90,2,assist_params60, 2,25,0,5,0,0,jump_out_helper,NULL,0},
  {pat866,16,8, "CD57",-1,0,2,3,0x0,1,1,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00220012, 0x00200020, 0x00200000, 0x00210000, 0x00200000, 0x00220000, 0x00210022, 0x00200010}
   , 70,90,0,NULL, 8,10,10,0,0,0,NULL,autohelper866,3},
  {pat495,11,8, "EC98",0,-2,2,2,0x2,2,0,
    { 0x003cfcfd, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f01, 0x00f0ffff},
    { 0x00140408, 0x00105000, 0x42500000, 0x16100008, 0x50100080, 0x04140000, 0x00101600, 0x00504280}
   , 80,90,0,NULL, 266,5,5,0,0,0,NULL,NULL,0},
  {pat507,9,8, "EC110",0,-1,3,1,0x8,1,-1,
    { 0x00f0f0f8, 0xf0f00000, 0x3c3c0000, 0x023f3f00, 0x00f0f000, 0xf0f00000, 0x3f3f0200, 0x003c3cbc},
    { 0x00102000, 0x00900000, 0x20100000, 0x00180000, 0x00900000, 0x20100000, 0x00180000, 0x00102000}
   , 80,90,0,NULL, 72,5,5,0,0,0,NULL,NULL,0},
  {pat395,11,8, "CB340",0,0,2,3,0x0,1,1,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x00102004, 0x00900000, 0x20100000, 0x01180000, 0x00900000, 0x20100000, 0x00180100, 0x00102040}
   , 90,90,0,NULL, 258,0,0,0,0,0,NULL,NULL,0},
  {pat59,20,8, "EB407",0,-4,3,1,0x2,2,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0x003cffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 30,90,2,assist_params59, 2,25,0,5,0,0,jump_out_helper,NULL,3},
  {pat22,17,8, "EB110",0,-1,3,4,0x2,1,2,
    { 0x0033ffff, 0xc0f0c0f0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff330000, 0x0f3f0f3f, 0x0030fcfc},
    { 0x00204040, 0x40200000, 0x04200000, 0x00200500, 0x00204000, 0x40200000, 0x05200000, 0x00200404}
   , 65,90,1,assist_params22, 32,10,0,5,0,0,NULL,NULL,3},
  {pat24,17,8, "EB113",0,-1,3,3,0x6,1,1,
    { 0x0033ffff, 0xc0f0c0f0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff330000, 0x0f3f0f3f, 0x0030fcfc},
    { 0x00204040, 0x40200000, 0x04200000, 0x00200500, 0x00204000, 0x40200000, 0x05200000, 0x00200404}
   , 55,90,2,assist_params24, 32,10,10,5,0,0,NULL,NULL,3},
  {pat759,6,8, "ED69",0,0,1,2,0xa,1,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00290200, 0x00202090, 0x00a00000, 0x20200000, 0x20200000, 0x02290000, 0x00202018, 0x00a00000}
   , 90,90,0,NULL, 11,0,0,0,0,0,throw_in_atari_helper,autohelper759,3},
  {pat506,11,8, "EC109",-1,0,1,3,0x8,0,2,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00202100, 0x00a00040, 0x20200000, 0x00280000, 0x00a00000, 0x21200000, 0x00280004, 0x00202000}
   , 80,90,0,NULL, 266,5,5,0,0,0,NULL,NULL,3},
  {pat43,16,8, "EB308",0,-3,3,0,0x8,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 40,90,2,assist_params43, 0,20,5,5,0,0,NULL,NULL,0},
  {pat876,9,8, "CD67",0,0,2,2,0x0,2,0,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x002a2209, 0x00a020a0, 0x20a00000, 0x22280000, 0x20a00000, 0x222a0000, 0x00282229, 0x00a02080}
   , 90,90,0,NULL, 8,0,0,0,0,0,NULL,autohelper876,3},
  {pat610,12,8, "CC86",0,-1,3,2,0x0,1,0,
    { 0x003fff3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3f0000, 0x0c3f3f3f, 0x00f0fcf0},
    { 0x00200110, 0x00200040, 0x00200000, 0x00210000, 0x00200000, 0x01200000, 0x00210004, 0x00200010}
   , 70,90,1,assist_params610, 64,10,0,0,0,0,NULL,NULL,3},
  {pat35,30,8, "EB208",0,-3,4,2,0x8,3,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00100048, 0x00100000, 0x00100000, 0x02100100, 0x00100000, 0x00100000, 0x01100200, 0x00100084}
   , 75,90,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat397,12,8, "EC1",0,0,2,3,0x2,1,1,
    { 0x003e3f3f, 0x00f0f0e0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3e0000, 0x003f3f2f, 0x00f0f0f0},
    { 0x00181000, 0x00502000, 0x10900000, 0x20140000, 0x20500000, 0x10180000, 0x00142000, 0x00901000}
   , 80,90,0,NULL, 32,10,0,0,0,0,NULL,autohelper397,0},
  {pat874,9,8, "CD65",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00290229, 0x00202090, 0x00a00000, 0x22220000, 0x20200000, 0x02290000, 0x00222219, 0x00a000a0}
   , 90,90,0,NULL, 9,0,0,0,0,0,throw_in_atari_helper,autohelper874,3},
  {pat46,40,8, "EB311",-1,-1,3,6,0x2,1,4,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00104000, 0x40100000, 0x04100000, 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x00100400}
   , 70,90,1,assist_params46, 0,5,5,5,0,0,NULL,NULL,0},
  {pat500,9,8, "EC103",0,-2,2,1,0x2,1,-1,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00100400, 0x00104000, 0x42100000, 0x04100009, 0x40100080, 0x04100000, 0x00100400, 0x00104201}
   , 80,90,0,NULL, 72,5,5,0,0,0,NULL,NULL,0},
  {pat498,16,8, "EC101",0,-2,2,3,0x2,1,0,
    { 0x00fffdff, 0xf0f0f070, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfdff0000, 0x3f3f3f37, 0x00ffffff},
    { 0x001a0000, 0x00102020, 0x02900000, 0x20100008, 0x20100080, 0x001a0000, 0x00102020, 0x00900200}
   , 80,90,0,NULL, 258,5,5,0,0,0,NULL,NULL,0},
  {pat505,9,8, "EC108",-1,-3,1,0,0x8,0,-2,
    { 0x40f00000, 0x34300000, 0x033f0700, 0x003070fc, 0x003034fc, 0x00f04000, 0x70300000, 0x073f0300},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200040, 0x00200000, 0x00200000, 0x00200100}
   , 80,90,0,NULL, 258,5,5,0,0,0,NULL,NULL,3},
  {pat45,20,8, "EB310",0,0,3,4,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 65,90,1,assist_params45, 0,5,5,5,0,0,NULL,NULL,3},
  {pat528,7,8, "CC4",0,-1,4,1,0x0,2,0,
    { 0x003034fc, 0x00f04000, 0x70300000, 0x073f0300, 0x40f00000, 0x34300000, 0x033f0700, 0x003070fc},
    { 0x00200044, 0x00200000, 0x00200000, 0x01200100, 0x00200000, 0x00200000, 0x01200100, 0x00200044}
   , 79,89,0,NULL, 128,5,5,0,0,0,NULL,NULL,3},
  {pat217,8,8, "EB1607",-1,-1,1,2,0x2,0,2,
    { 0x083fff00, 0xc0f0f8f0, 0xfcf08000, 0xbc3c0c00, 0xf8f0c000, 0xff3f0800, 0x0c3cbc3c, 0x80f0fc00},
    { 0x0010a400, 0x80904000, 0x68100000, 0x04180800, 0x40908000, 0xa4100000, 0x08180400, 0x00106800}
   , 84,89,0,NULL, 96,0,0,5,0,0,NULL,autohelper217,0},
  {pat578,6,8, "CC54",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3c3e0000, 0x003c3f20, 0x00f0f020, 0xf0f00000, 0x3f3c0000, 0x003e3c0c},
    { 0x00201080, 0x00600000, 0x10200000, 0x00240200, 0x00600000, 0x10200000, 0x02240000, 0x00201008}
   , 79,89,0,NULL, 394,5,0,5,0,0,NULL,autohelper578,3},
  {pat822,18,8, "CD13",0,-2,4,2,0x0,1,-1,
    { 0x00fcfffc, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0c, 0x00ffffff},
    { 0x00281608, 0x00606080, 0x50a00000, 0x26240000, 0x60600000, 0x16280000, 0x00242608, 0x00a05080}
   , 89,89,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat823,18,8, "CD14",0,-2,4,2,0x0,1,-1,
    { 0x00fcfffc, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0c, 0x00ffffff},
    { 0x00142904, 0x00909040, 0xa0500000, 0x19180000, 0x90900000, 0x29140000, 0x00181904, 0x0050a040}
   , 89,89,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat44,16,8, "EB309",-1,-3,2,0,0x8,1,-1,
    { 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 64,89,1,assist_params44, 0,5,5,5,0,0,NULL,NULL,0},
  {pat489,14,8, "EC92",0,0,3,3,0x2,1,2,
    { 0x003f0f2f, 0x0030f0f0, 0xc0f00000, 0x3f320000, 0xf0300000, 0x0f3f0000, 0x00323f3f, 0x00f0c0e0},
    { 0x00290406, 0x00206010, 0x40a00000, 0x25200000, 0x60200000, 0x04290000, 0x00202512, 0x00a04040}
   , 79,89,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat493,34,8, "EC96",0,-2,4,5,0x2,2,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3f0000, 0x0f3f3f3f, 0x00f0ffff},
    { 0x00202450, 0x00a04000, 0x62200000, 0x0429010a, 0x40a00080, 0x24200000, 0x01290400, 0x00206216}
   , 79,89,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat200,26,8, "EB1402",-2,-1,3,3,0x2,-1,1,
    { 0xafffffff, 0xfafafefe, 0xfcfce8a8, 0xffbfbf00, 0xfefafa00, 0xffffafaa, 0xbfbfffff, 0xe8fcfcfc},
    { 0x00181800, 0x0050a000, 0x90900000, 0x28140000, 0xa0500000, 0x18180000, 0x00142800, 0x00909000}
   , 78,88,0,NULL, 0,-5,5,5,0,0,NULL,NULL,0},
  {pat672,10,8, "CC148",0,-2,2,1,0x0,1,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3c, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003ffffc},
    { 0x00200084, 0x00200000, 0x00200000, 0x01200200, 0x00200000, 0x00200000, 0x02200100, 0x00200048}
   , 78,88,0,NULL, 10,0,5,5,0,0,waist_helper,NULL,3},
  {pat738,7,4, "ED48",0,-1,2,1,0x8,1,0,
    { 0x00f0fcf0, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0x003cfc3c},
    { 0x00200420, 0x00204000, 0x40200000, 0x04220000, 0x40200000, 0x04200000, 0x00220400, 0x00204020}
   , 78,88,0,NULL, 256,0,10,0,0,0,NULL,NULL,3},
  {pat338,7,8, "CB283",0,-3,1,0,0x0,0,-1,
    { 0x00f0c000, 0xf0300000, 0x0f3f0000, 0x00303c3c, 0x0030f0f0, 0xc0f00000, 0x3c300000, 0x003f0f00},
    { 0x00108000, 0x80100000, 0x09100000, 0x00100804, 0x00108040, 0x80100000, 0x08100000, 0x00100900}
   , 83,88,0,NULL, 232,0,0,5,0,0,weak_connection_helper,NULL,0},
  {pat32,20,8, "EB205",-1,-3,3,0,0x2,-1,-2,
    { 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f},
    { 0x00200010, 0x00200000, 0x01200000, 0x00210004, 0x00200040, 0x00200000, 0x00210000, 0x00200110}
   , 65,88,2,assist_params32, 0,5,5,5,0,0,NULL,NULL,3},
  {pat569,9,8, "CC45",0,-2,3,1,0x0,2,1,
    { 0x0030f4fc, 0xc0f04000, 0x7c300000, 0x073f0f03, 0x40f0c000, 0xf4300000, 0x0f3f0700, 0x00307cff},
    { 0x00206010, 0x40a00000, 0x24200000, 0x00290401, 0x00a04000, 0x60200000, 0x04290000, 0x00202411}
   , 78,88,0,NULL, 256,5,5,0,0,0,NULL,autohelper569,3},
  {pat734,21,8, "ED44",0,-6,3,0,0x2,1,-4,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3f},
    { 0x00104000, 0x40100000, 0x05100000, 0x00100404, 0x00104040, 0x40100000, 0x04100000, 0x00100500}
   , 87,87,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1074,27,8, "EJ16",0,-2,3,4,0x2,2,0,
    { 0x00bfffff, 0xe0f0f0f0, 0xfef80000, 0x3f3f2f0a, 0xf0f0e080, 0xffbf0000, 0x2f3f3f3f, 0x00f8fefe},
    { 0x00296604, 0x40a06090, 0x64a00000, 0x25280400, 0x60a04000, 0x66290000, 0x04282518, 0x00a06440}
   , 87,87,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat793,20,8, "ED103",0,-1,4,2,0x2,1,1,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00209040, 0x80600000, 0x18200000, 0x00240900, 0x00608000, 0x90200000, 0x09240000, 0x00201804}
   , 87,87,0,NULL, 0,0,0,0,0,0,NULL,autohelper793,3},
  {pat1014,25,8, "F401",-2,-5,1,2,0x1,0,-3,
    { 0xfcfffc00, 0xffffff30, 0xffffffff, 0xfcfcfcfc, 0xffffffff, 0xfcfffcfc, 0xfcfcfc30, 0xffffff00},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 57,87,2,assist_params1014, 0,10,0,5,0,0,NULL,NULL,0},
  {pat1076,27,8, "EJ20",0,-1,3,5,0x2,2,1,
    { 0x003fbfbf, 0x80f0f0f0, 0xf8f00000, 0x3f3f0a00, 0xf0f08000, 0xbf3f0000, 0x0a3f3f3f, 0x00f0f8f8},
    { 0x00221901, 0x00608060, 0x90200000, 0x08240000, 0x80600000, 0x19220000, 0x00240825, 0x00209000}
   , 87,87,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat293,9,8, "CB238",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00291002, 0x00602010, 0x10a00000, 0x20240000, 0x20600000, 0x10290000, 0x00242012, 0x00a01000}
   , 82,87,0,NULL, 74,0,0,5,0,0,NULL,NULL,3},
  {pat568,12,8, "CC44",0,-2,4,2,0x0,2,1,
    { 0x0030f0ff, 0xc0f00000, 0x3c300000, 0x033f0f03, 0x00f0c000, 0xf0300000, 0x0f3f0303, 0x00303cff},
    { 0x00206010, 0x40a00000, 0x24200000, 0x00290401, 0x00a04000, 0x60200000, 0x04290000, 0x00202411}
   , 77,87,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat108,8,8, "EB621",0,-1,2,1,0x2,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 60,87,2,assist_params108, 14,5,5,5,0,0,NULL,NULL,0},
  {pat230,20,8, "EB1711",0,0,3,4,0x2,0,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120900, 0x00108060, 0x80100000, 0x08100000, 0x80100000, 0x09120000, 0x00100824, 0x00108000}
   , 87,87,0,NULL, 8,0,0,0,0,0,NULL,NULL,0},
  {pat258,16,8, "CB203",0,-2,3,1,0x0,2,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00106800, 0x40908000, 0xa4100000, 0x08180400, 0x80904000, 0x68100000, 0x04180800, 0x0010a400}
   , 82,87,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat263,7,8, "CB208",-1,0,1,3,0x0,0,1,
    { 0x033f0f00, 0x0030f0fc, 0xc0f00000, 0x3c300000, 0xf0300000, 0x0f3f0300, 0x00303cfc, 0x00f0c000},
    { 0x00100900, 0x00108040, 0x80100000, 0x08100000, 0x80100000, 0x09100000, 0x00100804, 0x00108000}
   , 82,87,0,NULL, 192,0,0,5,0,0,NULL,autohelper263,0},
  {pat586,5,8, "CC62",0,0,2,1,0x0,1,0,
    { 0x00303c3c, 0x00f0c000, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3c300000, 0x003f0f00, 0x0030f0f0},
    { 0x00100824, 0x00108000, 0x80100000, 0x09120000, 0x80100000, 0x08100000, 0x00120900, 0x00108060}
   , 82,87,0,NULL, 10,0,5,0,0,0,alive11_helper,NULL,0},
  {pat150,23,8, "EB815",0,-2,3,4,0x2,1,2,
    { 0x003fffbf, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0e03, 0xf0f0c000, 0xff3f0000, 0x0e3f3f3f, 0x00f0fcfb},
    { 0x00206010, 0x40a00000, 0x24200000, 0x00290401, 0x00a04000, 0x60200000, 0x04290000, 0x00202411}
   , 72,87,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat819,4,4, "CD10",0,-1,1,0,0x0,0,-1,
    { 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0x003c3c00},
    { 0x00209000, 0x80600000, 0x18200000, 0x00240800, 0x00608000, 0x90200000, 0x08240000, 0x00201800}
   , 87,87,0,NULL, 40,0,0,0,0,0,double_atari_helper,NULL,3},
  {pat1031,35,8, "F601",0,-1,6,3,0x4,5,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00100428, 0x00104000, 0x40100000, 0x06120000, 0x40100000, 0x04100000, 0x00120600, 0x001040a0}
   , 82,87,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat557,4,4, "CC33",0,0,2,2,0x0,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00182000, 0x00902000, 0x20900000, 0x20180000, 0x20900000, 0x20180000, 0x00182000, 0x00902000}
   , 82,87,0,NULL, 0,-5,5,0,0,0,diag_miai_helper,autohelper557,0},
  {pat475,14,8, "EC78",0,0,2,4,0x2,1,3,
    { 0x003b3f3f, 0x00f0e0f0, 0xf0b00000, 0x2f3f0000, 0xe0f00000, 0x3f3b0000, 0x003f2f3f, 0x00b0f0f0},
    { 0x00112200, 0x00900090, 0x20100000, 0x00180000, 0x00900000, 0x22110000, 0x00180018, 0x00102000}
   , 77,87,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat30,27,8, "EB203",-1,-4,3,1,0x2,0,-2,
    { 0xc0f0fcfc, 0xfcf0c000, 0xff3f0f00, 0x0f3fffff, 0xc0f0fcfc, 0xfcf0c000, 0xff3f0f00, 0x0f3fffff},
    { 0x00200440, 0x00204000, 0x40200000, 0x04200100, 0x40200000, 0x04200000, 0x01200400, 0x00204004}
   , 72,87,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat105,11,8, "EB618",0,-1,2,2,0x2,1,0,
    { 0x00bcffff, 0xe0f0f0c0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbc0000, 0x2f3f3f0f, 0x00f8fcfc},
    { 0x00100202, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x0010000a, 0x00100000}
   , 50,86,1,assist_params105, 10,16,5,5,0,0,NULL,NULL,0},
  {pat106,11,8, "EB619",0,-1,2,2,0x2,1,1,
    { 0x00bcffff, 0xe0f0f0c0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbc0000, 0x2f3f3f0f, 0x00f8fcfc},
    { 0x00100202, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x0010000a, 0x00100000}
   , 50,86,1,assist_params106, 10,16,5,5,0,0,NULL,autohelper106,0},
  {pat104,11,8, "EB617",0,-1,2,2,0x2,1,1,
    { 0x00bcffff, 0xe0f0f0c0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbc0000, 0x2f3f3f0f, 0x00f8fcfc},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 40,86,2,assist_params104, 10,16,5,5,0,0,NULL,NULL,0},
  {pat219,14,8, "EB1609",0,0,2,4,0x2,0,1,
    { 0x003f1f3f, 0x0070f0f0, 0xd0f00000, 0x3f370000, 0xf0700000, 0x1f3f0000, 0x00373f3f, 0x00f0d0f0},
    { 0x00200401, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200401, 0x00204000}
   , 81,86,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat103,12,8, "EB616",0,-3,2,1,0x2,1,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3e0000, 0x0f3f3f2f, 0xc0f0f0e0, 0xfcf00000, 0x3f3f0f00, 0x003effff},
    { 0x00100808, 0x00108000, 0x80100000, 0x0a100000, 0x80100000, 0x08100000, 0x00100a00, 0x00108080}
   , 50,86,1,assist_params103, 10,16,5,5,0,0,NULL,NULL,0},
  {pat101,8,8, "EB614",0,-1,2,1,0x2,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 50,86,1,assist_params101, 26,16,5,5,0,0,NULL,NULL,0},
  {pat783,12,8, "ED93",0,0,2,3,0x4,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00140800, 0x00109000, 0x80500000, 0x18100000, 0x90100000, 0x08140000, 0x00101800, 0x00508000}
   , 76,86,0,NULL, 10,5,5,0,0,0,NULL,NULL,0},
  {pat1036,38,8, "F704",-1,-1,3,6,0x2,1,2,
    { 0x3fffffff, 0xf0fcfcfc, 0xfcfcf000, 0xffff3f00, 0xfcfcf000, 0xffff3f00, 0x3fffffff, 0xf0fcfcfc},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 76,86,0,NULL, 0,5,0,5,0,0,NULL,NULL,3},
  {pat515,9,8, "EC118",0,0,2,2,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00122420, 0x00904020, 0x60100000, 0x041a0000, 0x40900000, 0x24120000, 0x001a0420, 0x00106020}
   , 85,86,0,NULL, 258,0,0,0,1,1,NULL,autohelper515,0},
  {pat764,14,8, "ED74",-1,-2,2,1,0x8,1,1,
    { 0xc0fcfcfc, 0xfcf0f000, 0xffff0f00, 0x3f3fffff, 0xf0f0fcfc, 0xfcfcc000, 0xff3f3f00, 0x0fffffff},
    { 0x00281064, 0x00602000, 0x10a00000, 0x21260100, 0x20600000, 0x10280000, 0x01262100, 0x00a01064}
   , 86,86,0,NULL, 10,0,0,0,0,0,NULL,autohelper764,3},
  {pat336,6,8, "CB281",-1,-2,1,0,0x0,0,-1,
    { 0x00f0c000, 0xf0300000, 0x0f3f0100, 0x00303c7c, 0x0030f0f4, 0xc0f00000, 0x3c300000, 0x013f0f00},
    { 0x00108000, 0x80100000, 0x09100000, 0x00100804, 0x00108040, 0x80100000, 0x08100000, 0x00100900}
   , 81,86,0,NULL, 138,0,0,5,0,0,threaten_connect_helper,NULL,0},
  {pat514,12,8, "EC117",0,0,2,3,0x2,0,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00281400, 0x00606000, 0x50a00000, 0x24240000, 0x60600000, 0x14280000, 0x00242400, 0x00a05000}
   , 85,86,0,NULL, 72,0,0,0,1,1,NULL,autohelper514,3},
  {pat777,9,8, "ED87",-1,-1,2,1,0x8,2,0,
    { 0x04f0fcfc, 0xf0f0c400, 0xfc3c4000, 0x4f3f3f00, 0xc4f0f000, 0xfcf00400, 0x3f3f4f00, 0x403cfcfc},
    { 0x00201800, 0x00608000, 0x90200000, 0x08240000, 0x80600000, 0x18200000, 0x00240800, 0x00209000}
   , 72,86,0,NULL, 0,7,7,0,0,0,NULL,autohelper777,3},
  {pat337,6,8, "CB282",-1,-2,1,0,0x0,0,-2,
    { 0x00f0c000, 0xf0300000, 0x0f3f0300, 0x00303cfc, 0x0030f0fc, 0xc0f00000, 0x3c300000, 0x033f0f00},
    { 0x00108000, 0x80100000, 0x09100000, 0x00100804, 0x00108040, 0x80100000, 0x08100000, 0x00100900}
   , 81,86,0,NULL, 200,0,0,5,0,0,threaten_connect1_helper,NULL,0},
  {pat786,22,8, "ED96",-2,-2,1,3,0x5,-1,0,
    { 0xffff3f00, 0x3fffffff, 0xf0fdffff, 0xfcfcf0d0, 0xffff3f1f, 0x3fffffff, 0xf0fcfcfc, 0xfffdf000},
    { 0x00252800, 0x00a09010, 0xa0600000, 0x18280000, 0x90a00000, 0x28250000, 0x00281810, 0x0060a000}
   , 85,85,0,NULL, 8,0,0,0,0,0,NULL,NULL,3},
  {pat362,20,8, "CB307",0,-2,4,1,0x0,2,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 60,85,1,assist_params362, 0,10,0,5,0,0,NULL,NULL,0},
  {pat396,11,8, "CB341",0,0,2,3,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00180001, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102001, 0x00900000}
   , 75,85,0,NULL, 8,0,10,0,0,0,NULL,autohelper396,0},
  {pat49,16,8, "EB314",0,0,3,3,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 60,85,0,NULL, 0,10,10,5,0,0,NULL,NULL,3},
  {pat351,13,8, "CB296",0,-1,3,3,0x0,2,1,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00180600, 0x00106080, 0x40900000, 0x24100000, 0x60100000, 0x06180000, 0x00102408, 0x00904000}
   , 70,85,1,assist_params351, 10,0,0,5,0,0,NULL,NULL,0},
  {pat389,12,8, "CB334",0,0,2,3,0x0,1,2,
    { 0x003f3f2f, 0x00f0f0f0, 0xf0f00000, 0x3f3e0000, 0xf0f00000, 0x3f3f0000, 0x003e3f3f, 0x00f0f0e0},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 35,85,2,assist_params389, 74,40,0,0,0,0,NULL,NULL,3},
  {pat31,24,8, "EB204",0,-2,3,3,0x8,2,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00220010, 0x00200020, 0x00200000, 0x00210000, 0x00200000, 0x00220000, 0x00210020, 0x00200010}
   , 70,85,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat388,12,8, "CB333",0,0,2,3,0x0,1,2,
    { 0x003f3f1f, 0x00f0f0f0, 0xf0f00000, 0x3f3d0000, 0xf0f00000, 0x3f3f0000, 0x003d3f3f, 0x00f0f0d0},
    { 0x00102000, 0x00900000, 0x20100000, 0x00180000, 0x00900000, 0x20100000, 0x00180000, 0x00102000}
   , 35,85,2,assist_params388, 266,0,40,0,0,0,NULL,NULL,0},
  {pat880,9,8, "CD71",0,0,2,3,0x0,1,2,
    { 0x003f3f0c, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3c, 0x00f0f0c0},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 85,85,0,NULL, 64,0,0,0,0,0,NULL,autohelper880,3},
  {pat881,10,8, "CD72",-1,0,2,3,0x0,0,1,
    { 0x023f3f0c, 0x00f0f0f8, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0200, 0x003c3fbc, 0x00f0f0c0},
    { 0x00201100, 0x00600040, 0x10200000, 0x00240000, 0x00600000, 0x11200000, 0x00240004, 0x00201000}
   , 85,85,0,NULL, 72,0,0,0,0,0,NULL,NULL,3},
  {pat365,13,4, "CB310",0,-1,2,3,0x0,1,2,
    { 0x003fbf3f, 0x80f0f0f0, 0xf8f00000, 0x3f3f0800, 0xf0f08000, 0xbf3f0000, 0x083f3f3f, 0x00f0f8f0},
    { 0x00180418, 0x00106000, 0x40900000, 0x26110000, 0x60100000, 0x04180000, 0x00112600, 0x00904090}
   , 60,85,2,assist_params365, 8,0,0,5,0,0,NULL,NULL,0},
  {pat771,29,8, "ED81",-2,-1,3,3,0x5,-1,0,
    { 0xffffffba, 0xffffffff, 0xfcfcfcfc, 0xfefffe00, 0xffffff00, 0xffffffff, 0xfefffefe, 0xfcfcfcb8},
    { 0x001aa510, 0x80906060, 0x68900000, 0x24190800, 0x60908000, 0xa51a0000, 0x08192424, 0x00906810}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat58,16,8, "EB406",-1,0,2,4,0x2,0,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 25,85,2,assist_params58, 2,25,0,5,0,0,jump_out_helper,NULL,0},
  {pat890,25,8, "CD81",-2,-3,2,2,0x0,-1,-1,
    { 0xffffffff, 0xffffffff, 0xfffffffd, 0xffffffff, 0xfffffffd, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00110048, 0x00100010, 0x00100000, 0x02100100, 0x00100000, 0x00110000, 0x01100210, 0x00100084}
   , 75,85,0,NULL, 64,10,0,0,0,0,NULL,NULL,0},
  {pat772,29,8, "ED82",-1,-1,4,3,0x5,-1,2,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00181aa5, 0x0050a080, 0x90900000, 0x29160200, 0xa0500000, 0x1a180000, 0x02162909, 0x00909068}
   , 85,85,0,NULL, 1,0,0,0,0,0,NULL,NULL,0},
  {pat892,10,8, "CD83",0,-2,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00106080, 0x40900000, 0x25100000, 0x00180604, 0x00904040, 0x60100000, 0x06180000, 0x00102508}
   , 85,85,0,NULL, 0,0,0,0,0,0,atari_ladder_helper,NULL,0},
  {pat894,13,8, "CD85",0,-1,3,3,0x0,2,0,
    { 0x003fff3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3f0000, 0x0c3f3f3f, 0x00f0fcf0},
    { 0x00168200, 0x801010a0, 0x08500000, 0x10100800, 0x10108000, 0x82160000, 0x08101028, 0x00500800}
   , 60,85,0,NULL, 10,25,0,0,0,0,NULL,autohelper894,0},
  {pat605,11,8, "CC81",0,-2,3,0,0x0,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 70,85,1,assist_params605, 2,5,5,0,0,0,NULL,autohelper605,3},
  {pat897,12,8, "CD88",0,-1,3,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00100880, 0x00108000, 0x80100000, 0x08100200, 0x80100000, 0x08100000, 0x02100800, 0x00108008}
   , 85,85,0,NULL, 266,0,0,0,0,0,NULL,NULL,0},
  {pat374,14,8, "CB319",0,-2,2,2,0x0,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0x00fcffff},
    { 0x00102000, 0x00900000, 0x22100000, 0x00180008, 0x00900080, 0x20100000, 0x00180000, 0x00102200}
   , 70,85,2,assist_params374, 10,0,0,5,0,0,NULL,NULL,0},
  {pat57,15,8, "EB405",0,0,2,4,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 25,85,2,assist_params57, 2,25,0,5,0,0,jump_out_helper,NULL,0},
  {pat864,11,8, "CD55",-1,0,3,2,0x0,0,1,
    { 0x0c3f3f3f, 0x00f0fcf0, 0xf0f0c000, 0xff3f0000, 0xfcf00000, 0x3f3f0c00, 0x003fff3f, 0xc0f0f0f0},
    { 0x00201820, 0x00608000, 0x90200000, 0x08260000, 0x80600000, 0x18200000, 0x00260800, 0x00209020}
   , 85,85,0,NULL, 1,0,0,0,0,0,setup_double_atari_helper,NULL,3},
  {pat320,14,8, "CB265",0,-1,3,2,0x0,3,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00109080, 0x80500000, 0x18100000, 0x00140a00, 0x00508000, 0x90100000, 0x0a140000, 0x00101808}
   , 55,85,1,assist_params320, 0,10,0,5,0,0,NULL,NULL,0},
  {pat603,11,8, "CC79",0,-1,3,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 70,85,1,assist_params603, 8,10,0,0,0,0,NULL,autohelper603,0},
  {pat317,16,8, "CB262",-1,0,2,3,0x0,0,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100022, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120002, 0x00100020}
   , 35,85,2,assist_params317, 42,15,0,5,0,0,NULL,NULL,0},
  {pat1080,20,8, "EJ24",0,0,4,3,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00280400, 0x00206000, 0x40a00000, 0x24200000, 0x60200000, 0x04280000, 0x00202400, 0x00a04000}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat782,16,8, "ED92",0,-2,3,1,0x8,2,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00180800, 0x0010a000, 0x80900000, 0x28100000, 0xa0100000, 0x08180000, 0x00102800, 0x00908000}
   , 85,85,0,NULL, 2,0,0,0,0,0,NULL,autohelper782,0},
  {pat315,12,8, "CB260",0,0,2,3,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 60,85,0,NULL, 10,20,0,5,0,0,NULL,NULL,3},
  {pat62,17,8, "EB410",0,-2,3,2,0x2,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3c0000, 0x0f3f3f0f, 0x00f0ffff},
    { 0x00204000, 0x40200000, 0x05200000, 0x00200404, 0x00204040, 0x40200000, 0x04200000, 0x00200500}
   , 65,85,0,NULL, 10,20,0,0,0,0,jump_out_helper,NULL,3},
  {pat882,14,8, "CD73",0,-2,3,2,0x0,2,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcff},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120002, 0x00100000, 0x00100000, 0x00120000, 0x00100022}
   , 75,85,0,NULL, 0,0,10,0,0,0,NULL,NULL,0},
  {pat891,24,8, "CD82",0,-1,4,3,0x0,2,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x001a0400, 0x00106020, 0x40900000, 0x24100000, 0x60100000, 0x041a0000, 0x00102420, 0x00904000}
   , 75,85,0,NULL, 0,10,0,0,0,0,NULL,NULL,0},
  {pat384,19,8, "CB329",-1,0,2,5,0x0,0,3,
    { 0x033f1f00, 0x0070f0fc, 0xd0f00000, 0x3c340000, 0xf0700000, 0x1f3f0300, 0x00343cfc, 0x00f0d000},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 75,85,0,NULL, 10,10,0,0,0,0,NULL,NULL,3},
  {pat372,8,8, "CB317",0,-1,2,1,0x0,1,-1,
    { 0x00fcfcf0, 0xf0f0f000, 0xfcfc0000, 0x3c3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3c00, 0x00fcfc3c},
    { 0x00240860, 0x00209000, 0x80600000, 0x18220100, 0x90200000, 0x08240000, 0x01221800, 0x00608024}
   , 70,85,0,NULL, 266,0,10,5,0,0,NULL,NULL,3},
  {pat375,12,8, "CB320",0,-1,3,2,0x0,2,1,
    { 0x007f3fff, 0x10f0f0f0, 0xf0f40000, 0x3f3f1300, 0xf0f01000, 0x3f7f0000, 0x133f3f3f, 0x00f4f0fc},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 40,85,0,NULL, 10,40,0,5,0,0,NULL,autohelper375,3},
  {pat906,10,8, "CD97",-1,0,1,3,0x0,0,2,
    { 0x0f3f3f00, 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc, 0xc0f0f000},
    { 0x00182600, 0x00906080, 0x60900000, 0x24180000, 0x60900000, 0x26180000, 0x00182408, 0x00906000}
   , 85,85,0,NULL, 32,0,0,0,0,0,make_trouble_helper,NULL,0},
  {pat974,25,8, "CM4",0,-3,4,1,0x0,3,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100060, 0x00100000, 0x00100000, 0x00120100, 0x00100000, 0x00100000, 0x01120000, 0x00100024}
   , 80,85,0,NULL, 1,0,0,5,0,0,NULL,NULL,0},
  {pat999,49,8, "F108",-3,-3,3,3,0x6,1,-2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 65,85,1,assist_params999, 0,10,0,0,0,0,NULL,NULL,0},
  {pat820,4,4, "CD11",0,-1,1,0,0x0,0,-1,
    { 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0x003c3c00},
    { 0x00106000, 0x40900000, 0x24100000, 0x00180400, 0x00904000, 0x60100000, 0x04180000, 0x00102400}
   , 85,85,0,NULL, 0,0,0,0,0,0,double_atari_helper,NULL,0},
  {pat898,9,4, "CD89",0,-1,2,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00240024, 0x00201000, 0x00600000, 0x11220000, 0x10200000, 0x00240000, 0x00221100, 0x00600060}
   , 65,85,0,NULL, 10,0,0,20,0,0,NULL,autohelper898,3},
  {pat292,9,8, "CB237",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00291202, 0x00602090, 0x10a00000, 0x20240000, 0x20600000, 0x12290000, 0x0024201a, 0x00a01000}
   , 80,85,0,NULL, 266,0,0,5,0,0,NULL,NULL,3},
  {pat283,12,8, "CB228",0,-1,3,1,0x0,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00249000, 0x80601000, 0x18600000, 0x10240800, 0x10608000, 0x90240000, 0x08241000, 0x00601800}
   , 80,85,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat376,13,8, "CB321",0,-2,3,2,0x0,1,0,
    { 0x003cfefc, 0xc0f0f080, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfe3c0000, 0x0f3f3f08, 0x00f0ffff},
    { 0x00240004, 0x00201000, 0x00600000, 0x11200001, 0x10200000, 0x00240000, 0x00201100, 0x00600041}
   , 80,85,0,NULL, 72,0,0,5,0,0,NULL,NULL,3},
  {pat276,20,8, "CB221",-4,-1,1,3,0x0,-2,1,
    { 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 50,85,2,assist_params276, 0,5,5,5,0,0,NULL,autohelper276,0},
  {pat1093,17,8, "EJ37",-1,-3,2,1,0x1,0,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0300, 0x3f3f3fff, 0xf0f0f0fc, 0xfcfc0000, 0x3f3f3f00, 0x03ffffff},
    { 0x00285884, 0x4060a000, 0x94a00000, 0x29240600, 0xa0604000, 0x58280000, 0x06242900, 0x00a09448}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,autohelper1093,3},
  {pat270,20,8, "CB215",0,-4,3,0,0x0,2,-3,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100020, 0x00100000, 0x01100000, 0x00120006, 0x00100040, 0x00100000, 0x00120000, 0x00100122}
   , 80,85,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat12,28,8, "EB13",0,-1,5,3,0x4,3,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 65,85,1,assist_params12, 0,5,5,5,0,0,NULL,NULL,0},
  {pat269,11,8, "CB214",-2,-1,2,1,0x0,-1,0,
    { 0xfcfcf0f0, 0xfcff3c00, 0x3cfcfc30, 0xf0ffff00, 0x3cfffc00, 0xf0fcfc30, 0xfffff000, 0xfcfc3c3c},
    { 0x00186060, 0x40902000, 0x24900000, 0x201a0500, 0x20904000, 0x60180000, 0x051a2000, 0x00902424}
   , 80,85,0,NULL, 0,0,0,5,0,0,NULL,autohelper269,0},
  {pat639,9,8, "CC115",0,0,2,3,0x0,1,0,
    { 0x003f3f3c, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3c, 0x00f0f0f0},
    { 0x00240008, 0x00201000, 0x00600000, 0x12200000, 0x10200000, 0x00240000, 0x00201200, 0x00600080}
   , 75,85,0,NULL, 266,5,5,0,0,0,break_hane_helper,NULL,3},
  {pat757,6,8, "ED67",0,0,1,2,0x2,1,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00290200, 0x00202090, 0x00a00000, 0x20200000, 0x20200000, 0x02290000, 0x00202018, 0x00a00000}
   , 85,85,0,NULL, 11,0,0,0,0,0,throw_in_atari_helper,autohelper757,3},
  {pat371,15,8, "CB316",-1,0,2,3,0x0,0,1,
    { 0x3f3f3f0f, 0x00fcfcfc, 0xf0f0f000, 0xfffc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcffff, 0xf0f0f0c0},
    { 0x00102001, 0x00900000, 0x20100000, 0x00180000, 0x00900000, 0x20100000, 0x00180001, 0x00102000}
   , 65,85,0,NULL, 8,0,15,5,0,0,NULL,NULL,0},
  {pat11,19,8, "EB12",0,-4,3,1,0x2,2,0,
    { 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0x003f3fff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 55,85,0,NULL, 0,20,5,5,0,0,NULL,NULL,3},
  {pat86,25,8, "EB524",0,-1,4,3,0x2,2,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00160204, 0x001010a0, 0x00500000, 0x11100000, 0x10100000, 0x02160000, 0x00101128, 0x00500040}
   , 75,85,0,NULL, 0,10,0,0,0,0,NULL,NULL,0},
  {pat784,25,8, "ED94",-2,-3,2,2,0x5,-1,-2,
    { 0xffffff1d, 0xffffffff, 0xfcffffff, 0xfffdfcf0, 0xffffff3f, 0xffffffff, 0xfcfdfffd, 0xfffffcd0},
    { 0x0014a408, 0x80905000, 0x68500000, 0x16180800, 0x50908000, 0xa4140000, 0x08181600, 0x00506880}
   , 85,85,0,NULL, 8,0,0,0,0,0,NULL,NULL,0},
  {pat257,18,8, "CB202",-2,-1,2,2,0x0,-1,1,
    { 0xffffffff, 0xfcfefffc, 0xfcfcfce0, 0xffffff00, 0xfffefc00, 0xffffff2c, 0xffffffff, 0xfcfcfcfc},
    { 0x00180008, 0x00102000, 0x00900000, 0x22100000, 0x20100000, 0x00180000, 0x00102200, 0x00900080}
   , 75,85,1,assist_params257, 0,0,0,5,0,0,NULL,NULL,0},
  {pat87,12,8, "EB525",-1,-3,1,0,0x9,0,-2,
    { 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00},
    { 0x00109000, 0x80500000, 0x18100000, 0x00140800, 0x00508000, 0x90100000, 0x08140000, 0x00101800}
   , 70,85,0,NULL, 0,0,15,0,0,0,NULL,NULL,0},
  {pat674,6,8, "CC150",0,-2,1,0,0x0,0,-1,
    { 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f00},
    { 0x00102000, 0x00900000, 0x21100000, 0x00180004, 0x00900040, 0x20100000, 0x00180000, 0x00102100}
   , 85,85,0,NULL, 72,0,0,0,0,0,NULL,autohelper674,0},
  {pat680,12,8, "CC156",0,-2,3,0,0x0,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00200010, 0x00200000, 0x01200000, 0x00210004, 0x00200040, 0x00200000, 0x00210000, 0x00200110}
   , 75,85,0,NULL, 64,10,0,0,0,0,NULL,NULL,3},
  {pat685,10,8, "CC161",-1,-1,2,2,0x0,1,0,
    { 0x083ffcfc, 0xc0f0f830, 0xfcf08000, 0xbf3f0f00, 0xf8f0c000, 0xfc3f0800, 0x0f3fbf30, 0x80f0fcfc},
    { 0x00244000, 0x40201000, 0x04600000, 0x10200400, 0x10204000, 0x40240000, 0x04201000, 0x00600400}
   , 65,85,0,NULL, 0,0,20,0,0,0,NULL,NULL,3},
  {pat695,14,8, "ED5",-1,0,2,3,0x1,0,2,
    { 0x3f3f3f3c, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00fffffc, 0xf0f0f0f0},
    { 0x00100120, 0x00100040, 0x00100000, 0x00120000, 0x00100000, 0x01100000, 0x00120004, 0x00100020}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat808,15,8, "ED118",-1,-2,3,0,0x2,0,-1,
    { 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f},
    { 0x00102000, 0x00900000, 0x20100000, 0x00180000, 0x00900000, 0x20100000, 0x00180000, 0x00102000}
   , 75,85,0,NULL, 0,10,0,0,0,0,NULL,autohelper808,0},
  {pat1091,32,8, "EJ35",-1,-4,4,1,0x1,1,-2,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff},
    { 0x00206418, 0x40a04000, 0x64200000, 0x06290402, 0x40a04000, 0x64200000, 0x04290600, 0x00206492}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat756,15,8, "ED66",0,-1,2,3,0x2,0,2,
    { 0x00bfffff, 0xe0f0f0f0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbf0000, 0x2f3f3f3f, 0x00f8fcfc},
    { 0x00146628, 0x40905080, 0x64500000, 0x161a0400, 0x50904000, 0x66140000, 0x041a1608, 0x005064a0}
   , 85,85,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat796,48,8, "ED106",0,-2,4,7,0x2,2,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3f0000, 0x0f3f3f3f, 0x00f0ffff},
    { 0x00109060, 0x80500000, 0x1a100000, 0x0016090a, 0x00508080, 0x90100000, 0x09160000, 0x00101a26}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat228,13,8, "EB1709",0,-1,3,2,0x2,2,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00206500, 0x40a04040, 0x64200000, 0x04280400, 0x40a04000, 0x65200000, 0x04280404, 0x00206400}
   , 85,85,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat9,16,8, "EB10",0,-1,3,2,0x4,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00200080, 0x00200000, 0x00200000, 0x00200200, 0x00200000, 0x00200000, 0x02200000, 0x00200008}
   , 70,85,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat100,8,8, "EB613",0,-1,2,1,0x2,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 45,85,1,assist_params100, 26,20,5,5,0,0,NULL,NULL,0},
  {pat459,19,8, "EC62",0,-3,3,1,0x2,2,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00209844, 0x80608000, 0x98200000, 0x09240900, 0x80608000, 0x98200000, 0x09240900, 0x00209844}
   , 75,85,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat710,17,8, "ED20",0,-2,3,2,0x2,1,-1,
    { 0x00fffffc, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3c, 0x00fcffff},
    { 0x00251a00, 0x00609090, 0x90600000, 0x18240000, 0x90600000, 0x1a250000, 0x00241818, 0x00609000}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,autohelper710,3},
  {pat7,18,8, "EB8",-1,-1,2,3,0x2,1,2,
    { 0xbcbfafaf, 0xa8bcfcf0, 0xe8f8f800, 0xfffaaa00, 0xfcbca800, 0xafbfbc00, 0xaafaff3f, 0xf8f8e8e8},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 40,85,0,NULL, 0,5,40,0,0,0,NULL,NULL,0},
  {pat711,17,8, "ED21",0,-2,3,2,0x2,1,-1,
    { 0x00fffffc, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3c, 0x00fcffff},
    { 0x001a2500, 0x00906060, 0x60900000, 0x24180000, 0x60900000, 0x251a0000, 0x00182424, 0x00906000}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,autohelper711,0},
  {pat366,13,8, "CB311",0,-2,2,2,0x0,1,1,
    { 0x00bfffff, 0xe0f0f0f0, 0xfff80000, 0x3f3f2f0c, 0xf0f0e0c0, 0xffbf0000, 0x2f3f3f3f, 0x00f8fffc},
    { 0x00201060, 0x00600000, 0x11200000, 0x00260104, 0x00600040, 0x10200000, 0x01260000, 0x00201124}
   , 60,85,2,assist_params366, 8,0,0,5,0,0,NULL,NULL,3},
  {pat220,15,8, "EB1701",-1,0,1,4,0x2,-1,2,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 75,85,0,NULL, 0,5,0,5,0,0,NULL,autohelper220,0},
  {pat380,14,8, "CB325",0,-2,4,1,0x0,1,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0c, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0x003cfffc},
    { 0x00200404, 0x00204000, 0x40200000, 0x05200000, 0x40200000, 0x04200000, 0x00200500, 0x00204040}
   , 80,85,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat6,18,8, "EB7",-1,-1,2,3,0x2,1,2,
    { 0xbcbfafaf, 0xa8bcfcf0, 0xe8f8f800, 0xfffaaa00, 0xfcbca800, 0xafbfbc00, 0xaafaff3f, 0xf8f8e8e8},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 40,85,0,NULL, 0,40,5,0,0,0,NULL,NULL,0},
  {pat102,8,8, "EB615",0,-1,2,1,0x2,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 55,85,0,NULL, 10,25,5,0,0,0,NULL,NULL,0},
  {pat72,19,8, "EB510",-2,-3,2,0,0x1,0,-2,
    { 0xc0f0f0f0, 0xfff30000, 0x3f3f0f3f, 0x003fffff, 0x00f3ffff, 0xf0f0c0f0, 0xff3f0000, 0x0f3f3f3f},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 70,85,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat68,19,8, "EB506",0,-2,3,2,0x2,1,0,
    { 0x00fefeff, 0xf0f0f0a0, 0xfdfc0000, 0x3f3f3f07, 0xf0f0f040, 0xfefe0000, 0x3f3f3f2b, 0x00fcfdff},
    { 0x00108000, 0x80100000, 0x08100000, 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x00100800}
   , 75,85,0,NULL, 0,0,5,5,0,0,NULL,NULL,0},
  {pat900,11,8, "CD91",0,0,3,3,0x0,3,1,
    { 0x00303f3f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x0030f0f0},
    { 0x00200500, 0x00204040, 0x40200000, 0x04200000, 0x40200000, 0x05200000, 0x00200404, 0x00204000}
   , 85,85,0,NULL, 0,0,0,0,0,0,cap_kills_helper,NULL,3},
  {pat305,13,8, "CB250",0,-2,2,2,0x0,1,-1,
    { 0x00fcffff, 0xf0f0f0c0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xfffc0000, 0x3f3f3f0f, 0x00fcffff},
    { 0x00281602, 0x00606080, 0x50a00000, 0x24240000, 0x60600000, 0x16280000, 0x0024240a, 0x00a05000}
   , 80,85,0,NULL, 32,0,0,5,0,0,NULL,NULL,3},
  {pat202,20,8, "EB1501",-1,-1,2,3,0x2,1,0,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 55,85,1,assist_params202, 0,15,0,0,0,0,NULL,NULL,3},
  {pat785,25,8, "ED95",-2,-2,2,3,0x5,-1,0,
    { 0xffff3f07, 0x3fffffff, 0xf0fdffff, 0xfdfcf0d0, 0xffff3f1f, 0x3fffffff, 0xf0fcfdff, 0xfffdf040},
    { 0x00252902, 0x00a09050, 0xa0600000, 0x18280000, 0x90a00000, 0x29250000, 0x00281816, 0x0060a000}
   , 85,85,0,NULL, 8,0,0,0,0,0,NULL,NULL,3},
  {pat753,20,8, "ED63",0,-1,3,4,0x2,1,2,
    { 0x00beffff, 0xe0f0f0e0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbe0000, 0x2f3f3f2f, 0x00f8fcfc},
    { 0x00146060, 0x40901000, 0x24500000, 0x101a0500, 0x10904000, 0x60140000, 0x051a1000, 0x00502424}
   , 85,85,0,NULL, 2,0,0,0,0,0,NULL,autohelper753,0},
  {pat1027,25,8, "F503",-2,-1,1,5,0x1,0,3,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 60,85,1,assist_params1027, 0,0,0,5,0,0,NULL,NULL,0},
  {pat1089,35,8, "EJ33",0,-3,4,3,0x2,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfdff0000, 0x3f3f3f37, 0xf0f0f070, 0xffff0000, 0x3f3f3f3f, 0x00fffdff},
    { 0x00100824, 0x00108000, 0x80100000, 0x09120000, 0x80100000, 0x08100000, 0x00120900, 0x00108060}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat477,8,8, "EC80",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 75,85,0,NULL, 192,5,5,0,0,0,NULL,NULL,0},
  {pat180,14,8, "EB925",0,0,2,4,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00281000, 0x00602000, 0x10a00000, 0x20240000, 0x20600000, 0x10280000, 0x00242000, 0x00a01000}
   , 85,85,0,NULL, 4,0,0,0,0,0,NULL,NULL,3},
  {pat479,8,8, "EC82",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00212000, 0x00a00010, 0x20200000, 0x00280000, 0x00a00000, 0x20210000, 0x00280010, 0x00202000}
   , 75,85,0,NULL, 258,5,5,0,0,0,NULL,autohelper479,3},
  {pat1085,40,8, "EJ29",0,-4,4,3,0x2,2,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00209a54, 0x80608080, 0x9a200000, 0x09250908, 0x80608080, 0x9a200000, 0x09250908, 0x00209a54}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat481,8,8, "EC84",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00212000, 0x00a00010, 0x20200000, 0x00280000, 0x00a00000, 0x20210000, 0x00280010, 0x00202000}
   , 75,85,0,NULL, 258,5,5,0,0,0,NULL,NULL,3},
  {pat730,15,8, "ED40",0,-3,3,1,0x1,1,-3,
    { 0x00f0fcf0, 0xf0f0c000, 0xff3f0000, 0x0c3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0c00, 0x003fff3f},
    { 0x00106420, 0x40904000, 0x64100000, 0x041a0401, 0x40904000, 0x64100000, 0x041a0400, 0x00106421}
   , 85,85,0,NULL, 32,0,0,0,0,0,NULL,NULL,0},
  {pat1072,20,8, "EJ14",0,-2,4,1,0x2,1,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00200094, 0x00200000, 0x00200000, 0x01210200, 0x00200000, 0x00200000, 0x02210100, 0x00200058}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1084,40,8, "EJ28",0,-4,4,3,0x2,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00209850, 0x80608000, 0x9a200000, 0x08250908, 0x80608080, 0x98200000, 0x09250800, 0x00209a14}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1083,40,8, "EJ27",-1,-3,3,4,0x2,0,1,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00221000, 0x00600020, 0x12200000, 0x00240008, 0x00600080, 0x10220000, 0x00240020, 0x00201200}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat158,12,8, "EB903",0,-1,3,1,0x8,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00181800, 0x0050a000, 0x90900000, 0x28140000, 0xa0500000, 0x18180000, 0x00142800, 0x00909000}
   , 50,85,1,assist_params158, 10,20,5,5,0,0,NULL,NULL,0},
  {pat2,22,8, "EB3",0,-1,3,4,0x2,2,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 70,85,1,assist_params2, 0,5,5,0,0,0,NULL,NULL,3},
  {pat134,11,8, "EB711",0,-1,2,2,0x2,2,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00109080, 0x80500000, 0x18100000, 0x00140a00, 0x00508000, 0x90100000, 0x0a140000, 0x00101808}
   , 70,85,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat802,20,8, "ED112",0,-2,3,2,0x8,2,0,
    { 0x00faffff, 0xf0f0e0e0, 0xffbf0000, 0x2f3f3f3f, 0xe0f0f0f0, 0xfffa0000, 0x3f3f2f2f, 0x00bfffff},
    { 0x00102400, 0x00904000, 0x60100000, 0x04180000, 0x40900000, 0x24100000, 0x00180400, 0x00106000}
   , 75,85,0,NULL, 2,10,0,0,0,0,NULL,NULL,0},
  {pat148,13,8, "EB813",0,-2,3,1,0x2,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcff},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 60,85,1,assist_params148, 8,5,5,5,0,0,NULL,NULL,3},
  {pat1025,28,8, "F501",-2,-5,1,1,0x1,0,-3,
    { 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 80,85,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat546,17,4, "CC22",0,-1,4,3,0x0,3,1,
    { 0x0033ffff, 0xc0f0c0f0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff330000, 0x0f3f0f3f, 0x0030fcfc},
    { 0x00224400, 0x40204020, 0x44200000, 0x04200400, 0x40204000, 0x44220000, 0x04200420, 0x00204400}
   , 65,85,1,assist_params546, 0,5,5,0,0,0,NULL,autohelper546,3},
  {pat567,9,2, "CC43",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120021, 0x00100020, 0x00100000, 0x00120000, 0x00100000, 0x00120000, 0x00120021, 0x00100020}
   , 75,85,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat837,18,8, "CD28",0,-1,4,2,0x0,2,1,
    { 0x007cffff, 0xd0f0f0c0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7c0000, 0x1f3f3f0f, 0x00f4fcfc},
    { 0x00249810, 0x80609000, 0x98600000, 0x18250800, 0x90608000, 0x98240000, 0x08251800, 0x00609810}
   , 75,85,1,assist_params837, 0,0,0,0,0,0,NULL,NULL,3},
  {pat838,7,8, "CD29",0,-2,2,0,0x0,0,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3c, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0c},
    { 0x00209000, 0x80600000, 0x19200000, 0x00240804, 0x00608040, 0x90200000, 0x08240000, 0x00201900}
   , 85,85,0,NULL, 0,0,0,0,0,0,atari_attack_helper,NULL,3},
  {pat839,17,8, "CD30",-1,-1,2,3,0x0,1,1,
    { 0xfeffff3f, 0xfcfcfcf8, 0xfcfcfc00, 0xfffffc00, 0xfcfcfc00, 0xfffffe00, 0xfcffffbf, 0xfcfcfcf0},
    { 0x00190200, 0x00102090, 0x00900000, 0x20100000, 0x20100000, 0x02190000, 0x00102018, 0x00900000}
   , 85,85,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat574,9,4, "CC50",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120020, 0x00100020, 0x00100000, 0x00120000, 0x00100000, 0x00120000, 0x00120020, 0x00100020}
   , 75,85,0,NULL, 266,5,5,0,0,0,NULL,NULL,0},
  {pat556,7,8, "CC32",0,0,2,2,0x0,1,2,
    { 0x003c3f3c, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0c, 0x00f0f0f0},
    { 0x00241010, 0x00601000, 0x10600000, 0x10250000, 0x10600000, 0x10240000, 0x00251000, 0x00601010}
   , 75,85,0,NULL, 128,5,5,0,0,0,diag_miai2_helper,NULL,3},
  {pat551,4,4, "CC27",0,0,2,2,0x0,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 75,85,0,NULL, 128,5,5,0,0,0,diag_miai_helper,NULL,3},
  {pat516,9,8, "EC119",0,0,2,2,0x2,0,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00122420, 0x00904020, 0x60100000, 0x041a0000, 0x40900000, 0x24120000, 0x001a0420, 0x00106020}
   , 85,85,0,NULL, 258,0,0,0,0,0,NULL,autohelper516,0},
  {pat844,10,8, "CD35",0,0,3,3,0x0,2,1,
    { 0x003c3f0f, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3f0f, 0x00f0f0c0},
    { 0x00241100, 0x00601040, 0x10600000, 0x10240000, 0x10600000, 0x11240000, 0x00241004, 0x00601000}
   , 85,85,0,NULL, 192,0,0,0,0,0,NULL,NULL,3},
  {pat537,7,8, "CC13",0,-1,2,2,0x0,2,1,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204440, 0x40204000, 0x44200000, 0x04200500, 0x40204000, 0x44200000, 0x05200400, 0x00204404}
   , 65,85,0,NULL, 32,20,0,0,0,0,defend_bamboo_helper,NULL,3},
  {pat527,9,8, "CC3",-1,0,1,3,0x0,0,1,
    { 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000, 0xfc3c0000, 0xfcf00000, 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 75,85,0,NULL, 64,5,5,0,0,0,NULL,NULL,0},
  {pat524,13,8, "EC127",0,-1,2,3,0x2,2,2,
    { 0x0035ffff, 0xc0f0d0d0, 0xfc700000, 0x1f3f0f00, 0xd0f0c000, 0xff350000, 0x0f3f1f1f, 0x0070fcfc},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 85,85,0,NULL, 64,0,0,0,0,0,NULL,NULL,3},
  {pat523,13,8, "EC126",0,-2,3,1,0x2,2,0,
    { 0x0030f4fc, 0xc0f04000, 0x7f300000, 0x073f0f0f, 0x40f0c0c0, 0xf4300000, 0x0f3f0700, 0x00307fff},
    { 0x00200004, 0x00200000, 0x01200000, 0x01200004, 0x00200040, 0x00200000, 0x00200100, 0x00200140}
   , 85,85,0,NULL, 64,0,0,0,0,0,NULL,autohelper523,3},
  {pat522,13,8, "EC125",0,-2,3,1,0x2,1,-1,
    { 0x0030f4fc, 0xc0f04000, 0x7f300000, 0x073f0f0f, 0x40f0c0c0, 0xf4300000, 0x0f3f0700, 0x00307fff},
    { 0x00200004, 0x00200000, 0x01200000, 0x01200004, 0x00200040, 0x00200000, 0x00200100, 0x00200140}
   , 85,85,0,NULL, 64,0,0,0,0,0,NULL,autohelper522,3},
  {pat581,7,8, "CC57",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0c, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3c},
    { 0x00200090, 0x00200000, 0x01200000, 0x00210204, 0x00200040, 0x00200000, 0x02210000, 0x00200118}
   , 75,85,0,NULL, 256,5,5,0,0,0,NULL,autohelper581,3},
  {pat585,13,8, "CC61",0,-2,4,0,0x0,3,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f03, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3f},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100002, 0x00100000, 0x00100000, 0x00100000, 0x00100002}
   , 65,85,1,assist_params585, 0,5,5,0,0,0,NULL,NULL,0},
  {pat229,21,8, "EB1710",-1,0,3,4,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 84,84,0,NULL, 8,0,0,0,0,0,NULL,NULL,0},
  {pat806,15,8, "ED116",0,-2,3,2,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f01, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfd},
    { 0x00284400, 0x40206000, 0x44a00000, 0x24200400, 0x60204000, 0x44280000, 0x04202400, 0x00a04400}
   , 84,84,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat123,8,8, "EB636",0,0,2,2,0x2,1,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00140200, 0x00101080, 0x00500000, 0x10100000, 0x10100000, 0x02140000, 0x00101008, 0x00500000}
   , 79,84,0,NULL, 0,0,0,5,0,0,second_line_block_helper,NULL,0},
  {pat763,16,8, "ED73",0,-1,4,2,0x8,2,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00182000, 0x00902000, 0x20900000, 0x20180000, 0x20900000, 0x20180000, 0x00182000, 0x00902000}
   , 84,84,0,NULL, 72,0,0,0,0,0,NULL,autohelper763,0},
  {pat797,20,8, "ED107",0,-2,3,2,0x2,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x002a1904, 0x0060a060, 0x90a00000, 0x29240000, 0xa0600000, 0x192a0000, 0x00242924, 0x00a09040}
   , 84,84,0,NULL, 2,0,0,0,0,0,NULL,NULL,3},
  {pat751,12,8, "ED61",0,0,3,2,0x4,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 74,84,0,NULL, 8,10,0,0,0,0,NULL,autohelper751,3},
  {pat681,17,8, "CC157",-1,-1,3,3,0x0,2,1,
    { 0x033f3fff, 0x00f0f0fc, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0300, 0x033f3fff, 0x00f0f0fc},
    { 0x00121821, 0x00508020, 0x90100000, 0x08160000, 0x80500000, 0x18120000, 0x00160821, 0x00109020}
   , 84,84,0,NULL, 2,0,0,0,0,0,NULL,NULL,0},
  {pat266,12,8, "CB211",0,0,2,4,0x0,1,2,
    { 0x003f3f03, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3f, 0x00f0f000},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 70,84,1,assist_params266, 72,0,0,5,-1,-1,NULL,autohelper266,0},
  {pat341,13,8, "CB286",0,0,4,3,0x0,2,1,
    { 0x003c3c3f, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3c0000, 0x003f3f03, 0x00f0f0f0},
    { 0x00101020, 0x00500000, 0x10100000, 0x00160000, 0x00500000, 0x10100000, 0x00160000, 0x00101020}
   , 78,83,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat259,24,8, "CB204",-3,0,1,4,0x0,-1,2,
    { 0x3f3f0f00, 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc, 0xf0f0c000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 43,83,2,assist_params259, 0,5,0,5,0,0,NULL,autohelper259,0},
  {pat907,16,8, "CD98",-1,-4,2,0,0x0,0,-2,
    { 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcff, 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03},
    { 0x00108000, 0x80100000, 0x09100000, 0x00100806, 0x00108040, 0x80100000, 0x08100000, 0x00100902}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,autohelper907,0},
  {pat812,11,8, "CD2",0,0,3,3,0x0,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00251810, 0x00609010, 0x90600000, 0x18250000, 0x90600000, 0x18250000, 0x00251810, 0x00609010}
   , 83,83,0,NULL, 672,0,0,0,0,0,NULL,autohelper812,3},
  {pat333,13,8, "CB278",-1,-3,2,2,0x0,1,-1,
    { 0x00fcfffc, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0c, 0x00ffffff},
    { 0x00281600, 0x00606080, 0x50a00000, 0x24240000, 0x60600000, 0x16280000, 0x00242408, 0x00a05000}
   , 78,83,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat159,16,8, "EB904",0,0,4,3,0x4,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00242400, 0x00a05000, 0x60600000, 0x14280000, 0x50a00000, 0x24240000, 0x00281400, 0x00606000}
   , 78,83,0,NULL, 0,5,0,0,0,0,NULL,NULL,3},
  {pat799,22,8, "ED109",0,-2,4,2,0x2,1,-2,
    { 0x00f0fcff, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f03, 0x003fffff},
    { 0x00101864, 0x00508000, 0x90100000, 0x09160100, 0x80500000, 0x18100000, 0x01160900, 0x00109064}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,autohelper799,0},
  {pat367,11,8, "CB312",0,0,2,3,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00201824, 0x00608000, 0x90200000, 0x09260000, 0x80600000, 0x18200000, 0x00260900, 0x00209060}
   , 78,83,0,NULL, 0,0,0,5,0,0,NULL,autohelper367,3},
  {pat33,23,8, "EB206",-2,0,3,4,0x2,-1,2,
    { 0x0f3f3f3f, 0x00f0fcff, 0xf0f0c000, 0xff3f0000, 0xfcf00000, 0x3f3f0f03, 0x003fffff, 0xc0f0f0f0},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 78,83,0,NULL, 0,0,5,0,0,0,NULL,NULL,3},
  {pat697,30,8, "ED7",-1,-1,3,5,0x2,1,3,
    { 0x033fffff, 0xc0f0f0fc, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0300, 0x0f3f3fff, 0x00f0fcfc},
    { 0x00245000, 0x40601000, 0x14600000, 0x10240400, 0x10604000, 0x50240000, 0x04241000, 0x00601400}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat591,26,8, "CC67",0,-2,5,2,0x0,2,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3c0000, 0x0f3f3f0f, 0x00f0ffff},
    { 0x00108400, 0x80104000, 0x48100000, 0x04100800, 0x40108000, 0x84100000, 0x08100400, 0x00104800}
   , 73,83,1,assist_params591, 0,0,10,0,0,0,NULL,autohelper591,0},
  {pat698,30,8, "ED8",-1,-1,3,5,0x2,1,3,
    { 0x033fffff, 0xc0f0f0fc, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0300, 0x0f3f3fff, 0x00f0fcfc},
    { 0x00245000, 0x40601000, 0x14600000, 0x10240400, 0x10604000, 0x50240000, 0x04241000, 0x00601400}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1100,32,8, "EJ44",0,-2,6,2,0x4,5,0,
    { 0x0035ffff, 0xc0f0d0d0, 0xfc700000, 0x1f3f0f03, 0xd0f0c000, 0xff350000, 0x0f3f1f1f, 0x0070fcff},
    { 0x00208010, 0x80200000, 0x08200000, 0x00210800, 0x00208000, 0x80200000, 0x08210000, 0x00200810}
   , 70,83,0,NULL, 0,13,0,0,0,0,NULL,NULL,3},
  {pat743,13,8, "ED53",-1,0,2,3,0x9,-1,1,
    { 0x3e3e3f3c, 0x00fcfce8, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3e3e00, 0x00ffffac, 0xf0f0f0f0},
    { 0x00102528, 0x00904040, 0x60100000, 0x061a0000, 0x40900000, 0x25100000, 0x001a0604, 0x001060a0}
   , 83,83,0,NULL, 160,0,0,0,0,0,NULL,NULL,0},
  {pat590,25,8, "CC66",-1,-1,4,3,0x0,1,1,
    { 0x04ffffff, 0xf0f0f4f0, 0xfcfc4000, 0x7f3f3f00, 0xf4f0f000, 0xffff0400, 0x3f3f7f3f, 0x40fcfcfc},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 73,83,1,assist_params590, 0,0,10,0,0,0,NULL,NULL,3},
  {pat709,18,8, "ED19",0,-2,3,3,0x2,1,-1,
    { 0x00f0ffff, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f03, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0x003cfcff},
    { 0x00102500, 0x00904040, 0x60100000, 0x04180000, 0x40900000, 0x25100000, 0x00180404, 0x00106000}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,autohelper709,0},
  {pat206,20,8, "EB1505",0,-2,4,2,0x2,3,1,
    { 0x003cfcfe, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f02, 0x00f0ffff},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110002, 0x00100000, 0x00100000, 0x00110000, 0x00100012}
   , 78,83,0,NULL, 0,0,5,0,0,0,NULL,NULL,0},
  {pat1096,28,8, "EJ40",0,-1,6,2,0x4,5,0,
    { 0x0075ffff, 0xd0f0d0d0, 0xfc740000, 0x1f3f1f00, 0xd0f0d000, 0xff750000, 0x1f3f1f1f, 0x0074fcfc},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 70,83,0,NULL, 0,13,0,0,0,0,NULL,NULL,3},
  {pat190,17,8, "EB1207",-1,-2,2,2,0x2,1,0,
    { 0xf0fefefe, 0xfcfcf0a0, 0xffff3c00, 0x3fffff3f, 0xf0fcfcf0, 0xfefef000, 0xffff3f2a, 0x3cffffff},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 58,83,1,assist_params190, 10,10,0,5,0,0,NULL,autohelper190,3},
  {pat800,32,8, "ED110",0,-4,4,2,0x2,3,-1,
    { 0x00f0fcff, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f03, 0x003fffff},
    { 0x00101864, 0x00508000, 0x90100000, 0x09160100, 0x80500000, 0x18100000, 0x01160900, 0x00109064}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat502,18,8, "EC105",0,-3,3,1,0x2,1,-2,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00101868, 0x00508000, 0x90100000, 0x0a160100, 0x80500000, 0x18100000, 0x01160a00, 0x001090a4}
   , 82,83,0,NULL, 72,0,0,0,1,1,NULL,NULL,0},
  {pat805,16,8, "ED115",0,-2,3,2,0x2,1,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfe300000, 0x0f3f0f0b, 0xc0f0c080, 0xff300000, 0x0f3f0f0f, 0x0030feff},
    { 0x00204400, 0x40204000, 0x44200000, 0x04200400, 0x40204000, 0x44200000, 0x04200400, 0x00204400}
   , 65,83,0,NULL, 10,18,0,0,0,0,NULL,NULL,3},
  {pat1077,21,8, "EJ21",-1,0,3,4,0x2,1,1,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00110200, 0x00100090, 0x00100000, 0x00100000, 0x00100000, 0x02110000, 0x00100018, 0x00100000}
   , 73,83,1,assist_params1077, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1092,21,8, "EJ36",-1,-4,4,0,0x1,2,-3,
    { 0x0030f0f0, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0x00303f3f},
    { 0x00206010, 0x40a00000, 0x25200000, 0x00290406, 0x00a04040, 0x60200000, 0x04290000, 0x00202512}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,autohelper1092,3},
  {pat1094,28,8, "EJ38",0,0,6,3,0x4,5,1,
    { 0x00353f3f, 0x00f0d0d0, 0xf0700000, 0x1f3f0000, 0xd0f00000, 0x3f350000, 0x003f1f1f, 0x0070f0f0},
    { 0x00200004, 0x00200000, 0x00200000, 0x01200000, 0x00200000, 0x00200000, 0x00200100, 0x00200040}
   , 70,83,0,NULL, 0,13,0,0,0,0,NULL,NULL,3},
  {pat1098,34,8, "EJ42",0,-1,6,3,0x4,5,1,
    { 0x0035ffff, 0xc0f0d0d0, 0xfc700000, 0x1f3f0f00, 0xd0f0c000, 0xff350000, 0x0f3f1f1f, 0x0070fcfc},
    { 0x00208004, 0x80200000, 0x08200000, 0x01200800, 0x00208000, 0x80200000, 0x08200100, 0x00200840}
   , 70,83,0,NULL, 0,13,0,0,0,0,NULL,NULL,3},
  {pat798,17,8, "ED108",0,-1,4,2,0x2,2,-1,
    { 0x00f0fcff, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0x003cfcfc},
    { 0x00101824, 0x00508000, 0x90100000, 0x09160000, 0x80500000, 0x18100000, 0x00160900, 0x00109060}
   , 83,83,0,NULL, 0,0,0,0,0,0,NULL,autohelper798,0},
  {pat120,13,8, "EB633",0,-3,3,0,0x8,2,-2,
    { 0x0030f0f0, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0x00303f3f},
    { 0x00104010, 0x40100000, 0x06100000, 0x00110408, 0x00104080, 0x40100000, 0x04110000, 0x00100610}
   , 68,83,0,NULL, 16,5,5,5,0,0,NULL,NULL,0},
  {pat903,9,8, "CD94",0,-1,2,1,0x0,1,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00201064, 0x00600000, 0x10200000, 0x01260100, 0x00600000, 0x10200000, 0x01260100, 0x00201064}
   , 82,82,0,NULL, 40,0,0,0,0,0,NULL,autohelper903,3},
  {pat1042,49,8, "J6",-1,-4,5,2,0x6,3,0,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1061,23,8, "EJ3",-2,0,2,4,0x1,1,2,
    { 0x3f3f3f0f, 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcffff, 0xf0f0f0c0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1066,38,8, "EJ8",0,-2,4,5,0x2,2,4,
    { 0x003fffff, 0xc0f0f0f0, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xff3f0000, 0x0f3f3f3f, 0x00f0ffff},
    { 0x00202450, 0x00a04000, 0x62200000, 0x0429010a, 0x40a00080, 0x24200000, 0x01290400, 0x00206216}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1047,30,8, "J11",-2,-2,2,3,0x9,0,1,
    { 0xffffdfff, 0xff7fffff, 0xdfffffff, 0xfff7ffff, 0xff7fffff, 0xdfffffff, 0xfff7ffff, 0xffffdfff},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1013,42,8, "F304",0,-2,5,4,0x8,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat391,12,8, "CB336",0,0,2,3,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 50,82,0,NULL, 0,0,32,0,0,0,NULL,NULL,3},
  {pat1010,40,8, "F301",0,-2,7,3,0x8,5,2,
    { 0x00fcffff, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0x00ffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 77,82,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat1081,25,8, "EJ25",0,0,4,4,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x002a0500, 0x00206060, 0x40a00000, 0x24200000, 0x60200000, 0x052a0000, 0x00202424, 0x00a04000}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat373,11,8, "CB318",0,-2,3,1,0x0,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0x00fcffff},
    { 0x00201800, 0x00608000, 0x91200000, 0x08240004, 0x80600040, 0x18200000, 0x00240800, 0x00209100}
   , 77,82,0,NULL, 10,0,0,5,0,0,NULL,NULL,3},
  {pat1095,19,8, "EJ39",0,-1,3,3,0x4,2,-1,
    { 0x0035ffff, 0xc0f0d0d0, 0xfc700000, 0x1f3f0f00, 0xd0f0c000, 0xff350000, 0x0f3f1f1f, 0x0070fcfc},
    { 0x00200004, 0x00200000, 0x00200000, 0x01200000, 0x00200000, 0x00200000, 0x00200100, 0x00200040}
   , 65,82,0,NULL, 0,17,0,0,0,0,NULL,NULL,3},
  {pat392,11,8, "CB337",0,0,3,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 55,82,0,NULL, 10,27,0,0,0,0,NULL,NULL,3},
  {pat868,9,8, "CD59",0,-1,3,1,0x0,2,0,
    { 0x0030f4fc, 0xc0f04000, 0x7c300000, 0x073f0f00, 0x40f0c000, 0xf4300000, 0x0f3f0700, 0x00307cfc},
    { 0x00204004, 0x40200000, 0x04200000, 0x01200400, 0x00204000, 0x40200000, 0x04200100, 0x00200440}
   , 82,82,0,NULL, 8,0,0,0,0,0,urgent_connect_helper,NULL,3},
  {pat1097,19,8, "EJ41",0,-2,3,2,0x4,2,-2,
    { 0x0075ffff, 0xd0f0d0d0, 0xff740000, 0x1f3f1f0f, 0xd0f0d0c0, 0xff750000, 0x1f3f1f1f, 0x0074ffff},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 65,82,0,NULL, 0,17,0,0,0,0,NULL,NULL,3},
  {pat394,15,8, "CB339",0,-3,3,0,0x0,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3d0000, 0x003f3f1f, 0x00f0f0d0, 0xf0f00000, 0x3f3f0000, 0x003d3f3f},
    { 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100080, 0x00100000, 0x00100000, 0x00100200}
   , 60,82,0,NULL, 10,0,22,0,0,0,NULL,NULL,0},
  {pat908,14,8, "CD99",0,-1,4,1,0x0,2,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,autohelper908,3},
  {pat407,13,8, "EC11",0,-2,3,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00206400, 0x40a04000, 0x65200000, 0x04280404, 0x40a04040, 0x64200000, 0x04280400, 0x00206500}
   , 72,82,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat408,12,8, "EC12",0,-2,3,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f03, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcff},
    { 0x00206400, 0x40a04000, 0x64200000, 0x04280401, 0x40a04000, 0x64200000, 0x04280400, 0x00206401}
   , 72,82,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat857,8,8, "CD48",0,-1,2,1,0x0,1,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00201864, 0x00608000, 0x90200000, 0x09260100, 0x80600000, 0x18200000, 0x01260900, 0x00209064}
   , 82,82,0,NULL, 32,0,0,0,0,0,no_capture_helper,NULL,3},
  {pat870,9,8, "CD61",0,-1,3,1,0x0,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204004, 0x40200000, 0x04200000, 0x01200400, 0x00204000, 0x40200000, 0x04200100, 0x00200440}
   , 82,82,0,NULL, 8,0,0,0,0,0,urgent_connect2_helper,NULL,3},
  {pat1099,24,8, "EJ43",0,-1,4,3,0x4,3,0,
    { 0x0035ffff, 0xc0f0d0d0, 0xfc700000, 0x1f3f0f00, 0xd0f0c000, 0xff350000, 0x0f3f1f1f, 0x0070fcfc},
    { 0x00208004, 0x80200000, 0x08200000, 0x01200800, 0x00208000, 0x80200000, 0x08200100, 0x00200840}
   , 65,82,0,NULL, 0,17,0,0,0,0,NULL,NULL,3},
  {pat869,9,8, "CD60",0,-1,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204804, 0x40208000, 0x84200000, 0x09200400, 0x80204000, 0x48200000, 0x04200900, 0x00208440}
   , 82,82,0,NULL, 8,0,0,0,0,0,urgent_connect_helper,NULL,3},
  {pat390,12,8, "CB335",0,0,2,3,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 50,82,0,NULL, 0,32,0,0,0,0,NULL,NULL,3},
  {pat1101,22,8, "EJ45",0,-2,4,2,0x4,3,-1,
    { 0x0035ffff, 0xc0f0d0d0, 0xfc700000, 0x1f3f0f03, 0xd0f0c000, 0xff350000, 0x0f3f1f1f, 0x0070fcff},
    { 0x00208010, 0x80200000, 0x08200000, 0x00210800, 0x00208000, 0x80200000, 0x08210000, 0x00200810}
   , 65,82,0,NULL, 0,17,0,0,0,0,NULL,NULL,3},
  {pat872,5,8, "CD63",0,-1,1,1,0x0,0,-1,
    { 0x00fc3c00, 0x30f0f000, 0xf0fc0000, 0x3c3c3000, 0xf0f03000, 0x3cfc0000, 0x303c3c00, 0x00fcf000},
    { 0x00241800, 0x00609000, 0x90600000, 0x18240000, 0x90600000, 0x18240000, 0x00241800, 0x00609000}
   , 82,82,0,NULL, 1,0,0,0,0,0,detect_trap_helper,NULL,3},
  {pat5,18,8, "EB6",-1,-1,2,3,0x2,1,2,
    { 0xbcbfafaf, 0xa8bcfcf0, 0xe8f8f800, 0xfffaaa00, 0xfcbca800, 0xafbfbc00, 0xaafaff3f, 0xf8f8e8e8},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,82,2,assist_params5, 0,12,10,0,0,0,NULL,NULL,0},
  {pat393,25,8, "CB338",0,-2,4,2,0x0,2,0,
    { 0x007f57ff, 0x507070f0, 0x55f50000, 0x37371715, 0x70705050, 0x577f0000, 0x1737373f, 0x00f555fd},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 60,82,0,NULL, 10,0,22,0,0,0,NULL,NULL,3},
  {pat824,22,8, "CD15",0,-1,5,2,0x0,3,1,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat788,14,8, "ED98",0,-1,4,1,0x8,3,-1,
    { 0x00bcfcfc, 0xe0f0f000, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xfcbc0000, 0x2f3f3f00, 0x00f8fcfc},
    { 0x00142018, 0x00901000, 0x20500000, 0x12190000, 0x10900000, 0x20140000, 0x00191200, 0x00502090}
   , 82,82,0,NULL, 32,0,0,0,0,0,NULL,autohelper788,0},
  {pat789,12,8, "ED99",0,0,4,2,0x8,2,0,
    { 0x003f3c3c, 0x00f0f030, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3f0000, 0x003f3f30, 0x00f0f0f0},
    { 0x00290008, 0x00202010, 0x00a00000, 0x22200000, 0x20200000, 0x00290000, 0x00202210, 0x00a00080}
   , 82,82,0,NULL, 9,0,0,0,0,0,NULL,autohelper789,3},
  {pat776,18,8, "ED86",0,-2,5,0,0x8,1,0,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00108000, 0x80100000, 0x08100000, 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x00100800}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat684,20,8, "CC160",0,-3,3,1,0x0,2,0,
    { 0x00bcfcfc, 0xe0f0f000, 0xfefa0000, 0x3f3f2f2b, 0xf0f0e0a0, 0xfcbc0000, 0x2f3f3f00, 0x00fafeff},
    { 0x00206084, 0x40a00000, 0x24200000, 0x01280600, 0x00a04000, 0x60200000, 0x06280100, 0x00202448}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat792,12,8, "ED102",0,0,2,3,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 82,82,0,NULL, 8,0,0,0,0,0,NULL,NULL,0},
  {pat810,8,8, "ED120",0,-2,1,1,0x2,0,-2,
    { 0x00fcfc00, 0xf0f0f000, 0xffff0000, 0x3c3c3c3c, 0xf0f0f0f0, 0xfcfc0000, 0x3c3c3c00, 0x00ffff00},
    { 0x00186800, 0x4090a000, 0xa4900000, 0x28180400, 0xa0904000, 0x68180000, 0x04182800, 0x0090a400}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,autohelper810,0},
  {pat701,24,8, "ED11",0,0,3,5,0x2,1,4,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x001a2529, 0x00906060, 0x60900000, 0x261a0000, 0x60900000, 0x251a0000, 0x001a2625, 0x009060a0}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat702,19,8, "ED12",0,-1,3,3,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00289090, 0x80602000, 0x18a00000, 0x20250a00, 0x20608000, 0x90280000, 0x0a252000, 0x00a01818}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat722,31,8, "ED32",-2,-1,2,5,0x2,1,1,
    { 0xffffffff, 0xfdfdfdfc, 0xfcfcfc54, 0xffffff00, 0xfdfdfd00, 0xffffff54, 0xffffffff, 0xfcfcfcfc},
    { 0x00210200, 0x00200090, 0x00200000, 0x00200000, 0x00200000, 0x02210000, 0x00200018, 0x00200000}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat807,15,8, "ED117",0,-2,3,2,0x2,1,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f02, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfe},
    { 0x00148800, 0x80109000, 0x88500000, 0x18100800, 0x90108000, 0x88140000, 0x08101800, 0x00508800}
   , 77,82,0,NULL, 0,0,5,0,0,0,NULL,autohelper807,0},
  {pat712,19,8, "ED22",0,-2,3,2,0x2,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0x00fcffff},
    { 0x00251a00, 0x00609090, 0x91600000, 0x18240004, 0x90600040, 0x1a250000, 0x00241818, 0x00609100}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat584,10,8, "CC60",0,-3,2,0,0x0,1,-2,
    { 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0x00303f3f, 0x0030f0f0, 0xc0f00000, 0x3f300000, 0x003f0f0f},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 55,82,0,NULL, 10,27,0,0,0,0,NULL,NULL,3},
  {pat794,18,8, "ED104",0,-2,4,1,0x2,0,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00106060, 0x40900000, 0x24100000, 0x001a0500, 0x00904000, 0x60100000, 0x051a0000, 0x00102424}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat804,29,8, "ED114",-3,-3,3,1,0xa,0,-1,
    { 0xf0f4f0f0, 0xfffe1000, 0x3f7f3f2f, 0x10ffffff, 0x10feffff, 0xf0f4f0e0, 0xffff1000, 0x3f7f3f3f},
    { 0x00209010, 0x80600000, 0x18200000, 0x00250800, 0x00608000, 0x90200000, 0x08250000, 0x00201810}
   , 77,82,0,NULL, 2,5,0,0,0,0,NULL,NULL,3},
  {pat587,7,8, "CC63",0,0,3,1,0x0,1,0,
    { 0x00303c3c, 0x00f0c000, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3c300000, 0x003f0f00, 0x0030f0f0},
    { 0x00100824, 0x00108000, 0x80100000, 0x09120000, 0x80100000, 0x08100000, 0x00120900, 0x00108060}
   , 70,82,0,NULL, 10,0,12,0,0,0,NULL,NULL,0},
  {pat677,11,8, "CC153",0,-2,3,1,0x0,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00200408, 0x00204000, 0x41200000, 0x06200004, 0x40200040, 0x04200000, 0x00200600, 0x00204180}
   , 82,82,0,NULL, 72,0,0,0,0,0,NULL,NULL,3},
  {pat723,32,8, "ED33",0,-2,4,4,0x2,3,2,
    { 0x00fcffff, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0x00ffffff},
    { 0x00100084, 0x00100000, 0x00100000, 0x01100200, 0x00100000, 0x00100000, 0x02100100, 0x00100048}
   , 82,82,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat904,16,8, "CD95",0,-1,4,2,0x0,3,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00100100, 0x00100040, 0x00100000, 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100000}
   , 60,81,0,NULL, 0,21,0,0,0,0,jump_out_helper,NULL,0},
  {pat344,23,8, "CB289",0,-1,3,4,0x0,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 76,81,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat1067,21,8, "EJ9",-1,0,3,4,0x2,-1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00110200, 0x00100090, 0x00100000, 0x00100000, 0x00100000, 0x02110000, 0x00100018, 0x00100000}
   , 81,81,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat883,15,8, "CD74",0,0,3,3,0x0,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00290400, 0x00206010, 0x40a00000, 0x24200000, 0x60200000, 0x04290000, 0x00202410, 0x00a04000}
   , 80,81,0,NULL, 10,0,0,0,1,1,NULL,autohelper883,3},
  {pat1044,35,8, "J8",0,-4,4,2,0x6,2,-2,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200040, 0x00200000, 0x02200000, 0x00200108, 0x00200080, 0x00200000, 0x01200000, 0x00200204}
   , 81,81,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat458,10,8, "EC61",0,-1,1,3,0x2,1,0,
    { 0x00ffff00, 0xf0f0f0f0, 0xfcfc0000, 0x3c3c3c00, 0xf0f0f000, 0xffff0000, 0x3c3c3c3c, 0x00fcfc00},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 60,80,1,assist_params458, 10,10,0,0,0,0,NULL,NULL,3},
  {pat858,22,8, "CD49",0,-2,4,2,0x0,2,1,
    { 0x0070ffff, 0xd0f0c0c0, 0xff340000, 0x0f3f1f0f, 0xc0f0d0c0, 0xff700000, 0x1f3f0f0f, 0x0034ffff},
    { 0x00202110, 0x00a00040, 0x20200000, 0x00290001, 0x00a00000, 0x21200000, 0x00290004, 0x00202011}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat598,21,8, "CC74",0,-3,3,2,0x0,2,0,
    { 0x00f0fcff, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f03, 0x003fffff},
    { 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100080, 0x00100000, 0x00100000, 0x00100200}
   , 50,80,1,assist_params598, 0,20,0,0,0,0,NULL,NULL,0},
  {pat599,18,8, "CC75",0,-3,2,2,0x0,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00100200, 0x00100080, 0x02100000, 0x00100008, 0x00100080, 0x02100000, 0x00100008, 0x00100200}
   , 50,80,1,assist_params599, 0,20,0,0,0,0,NULL,NULL,0},
  {pat848,13,8, "CD39",0,-1,4,2,0x0,2,2,
    { 0x0030fff3, 0xc0f0c0c0, 0xfc300000, 0x0c3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0c0f, 0x0030fc3c},
    { 0x00106260, 0x40900080, 0x24100000, 0x001a0500, 0x00904000, 0x62100000, 0x051a0008, 0x00102424}
   , 80,80,0,NULL, 2,0,0,0,0,0,NULL,NULL,0},
  {pat509,4,4, "EC112",0,-1,1,1,0x2,1,0,
    { 0x0030fc00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0x0030fc00},
    { 0x00204400, 0x40204000, 0x44200000, 0x04200400, 0x40204000, 0x44200000, 0x04200400, 0x00204400}
   , 80,80,0,NULL, 72,0,0,0,0,0,NULL,NULL,3},
  {pat851,5,8, "CD42",0,0,1,2,0x0,0,2,
    { 0x003f3c00, 0x00f0f030, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3f0000, 0x003c3c30, 0x00f0f000},
    { 0x00182400, 0x00906000, 0x60900000, 0x24180000, 0x60900000, 0x24180000, 0x00182400, 0x00906000}
   , 80,80,0,NULL, 0,0,0,0,0,0,two_bird_helper,NULL,0},
  {pat855,8,8, "CD46",0,-1,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00209040, 0x80600000, 0x18200000, 0x00240900, 0x00608000, 0x90200000, 0x09240000, 0x00201804}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,autohelper855,3},
  {pat863,5,8, "CD54",-2,0,0,1,0x0,-1,1,
    { 0x3c3c0000, 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000, 0xf0f00000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 60,80,0,NULL, 8,20,0,0,0,0,only_atari_helper,NULL,0},
  {pat604,11,8, "CC80",0,-2,3,0,0x0,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 50,80,2,assist_params604, 64,0,20,0,0,0,NULL,autohelper604,0},
  {pat410,20,8, "EC14",-1,0,3,3,0x1,0,1,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 70,80,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat852,11,8, "CD43",0,-1,2,2,0x0,1,0,
    { 0x00fffffc, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3c, 0x00fcfcfc},
    { 0x00220284, 0x002000a0, 0x00200000, 0x01200200, 0x00200000, 0x02220000, 0x02200128, 0x00200048}
   , 80,80,0,NULL, 0,0,0,0,0,0,kosumi_tesuji_helper,NULL,3},
  {pat386,16,8, "CB331",0,-3,3,0,0x0,1,-2,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 55,80,0,NULL, 10,5,20,0,0,0,NULL,NULL,0},
  {pat608,15,8, "CC84",0,-1,3,2,0x0,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00100220, 0x00100080, 0x00100000, 0x00120000, 0x00100000, 0x02100000, 0x00120008, 0x00100020}
   , 60,80,1,assist_params608, 0,10,0,0,0,0,NULL,NULL,0},
  {pat849,12,8, "CD40",0,-1,3,2,0x0,1,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00200060, 0x00200000, 0x00200000, 0x00220100, 0x00200000, 0x00200000, 0x01220000, 0x00200024}
   , 80,80,0,NULL, 0,0,0,0,0,0,trap_helper,NULL,3},
  {pat385,17,8, "CB330",-1,0,2,4,0x0,0,2,
    { 0x0f3f1f03, 0x0070fcfc, 0xd0f0c000, 0xfc340000, 0xfc700000, 0x1f3f0f00, 0x0034fcff, 0xc0f0d000},
    { 0x00200001, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200001, 0x00200000}
   , 70,80,0,NULL, 10,10,0,0,0,0,NULL,NULL,3},
  {pat387,17,8, "CB332",0,-1,4,2,0x0,2,0,
    { 0x00fcfdff, 0xf0f0f040, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfdfc0000, 0x3f3f3f07, 0x00fcfcfc},
    { 0x00100002, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100002, 0x00100000}
   , 55,80,0,NULL, 10,5,20,0,0,0,NULL,NULL,0},
  {pat583,10,8, "CC59",0,-3,2,0,0x0,1,-2,
    { 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0x00303f3f, 0x0030f0f0, 0xc0f00000, 0x3f300000, 0x003f0f0f},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 46,80,2,assist_params583, 10,0,0,20,0,0,NULL,NULL,3},
  {pat519,15,8, "EC122",0,-1,2,3,0x2,1,1,
    { 0x007f7fff, 0x50f0f0f0, 0xf4f40000, 0x3f3f1700, 0xf0f05000, 0x7f7f0000, 0x173f3f3f, 0x00f4f4fc},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 60,80,0,NULL, 256,0,20,0,0,0,NULL,NULL,3},
  {pat381,17,8, "CB326",0,0,4,4,0x0,2,2,
    { 0x003f3f2f, 0x00f0f0f0, 0xf0f00000, 0x3f3e0000, 0xf0f00000, 0x3f3f0000, 0x003e3f3f, 0x00f0f0e0},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 70,80,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat520,15,8, "EC123",0,-1,2,3,0x2,1,1,
    { 0x00bfbfff, 0xa0f0f0f0, 0xf8f80000, 0x3f3f2b00, 0xf0f0a000, 0xbfbf0000, 0x2b3f3f3f, 0x00f8f8fc},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 60,80,0,NULL, 64,20,0,0,0,0,NULL,NULL,0},
  {pat377,10,8, "CB322",0,-1,3,1,0x0,2,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00148004, 0x80101000, 0x08500000, 0x11100800, 0x10108000, 0x80140000, 0x08101100, 0x00500840}
   , 75,80,0,NULL, 40,0,0,5,0,0,NULL,autohelper377,0},
  {pat370,11,8, "CB315",-1,-2,2,1,0x0,0,-1,
    { 0xf0fcf0e0, 0xfcfc3000, 0x3fff3c00, 0x30feff3c, 0x30fcfcf0, 0xf0fcf000, 0xfffe3000, 0x3cff3f2c},
    { 0x00201040, 0x00600000, 0x10200000, 0x00240100, 0x00600000, 0x10200000, 0x01240000, 0x00201004}
   , 55,80,1,assist_params370, 10,0,0,5,0,0,NULL,NULL,3},
  {pat521,11,8, "EC124",0,0,2,3,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00121800, 0x00508020, 0x90100000, 0x08140000, 0x80500000, 0x18120000, 0x00140820, 0x00109000}
   , 60,80,0,NULL, 64,20,0,0,0,0,NULL,NULL,0},
  {pat363,10,8, "CB308",0,-2,3,1,0x0,1,-1,
    { 0x00f0fcf0, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0c, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0x003cff3c},
    { 0x00201800, 0x00608000, 0x90200000, 0x08240000, 0x80600000, 0x18200000, 0x00240800, 0x00209000}
   , 60,80,1,assist_params363, 0,10,0,5,0,0,NULL,NULL,3},
  {pat549,16,8, "CC25",0,0,3,3,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00202400, 0x00a04000, 0x60200000, 0x04280000, 0x40a00000, 0x24200000, 0x00280400, 0x00206000}
   , 70,80,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat609,11,8, "CC85",0,-1,2,2,0x0,2,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00100221, 0x00100080, 0x00100000, 0x00120000, 0x00100000, 0x02100000, 0x00120009, 0x00100020}
   , 60,80,1,assist_params609, 0,10,0,0,0,0,NULL,NULL,0},
  {pat358,12,8, "CB303",0,0,2,3,0x0,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00112428, 0x00904010, 0x60100000, 0x061a0000, 0x40900000, 0x24110000, 0x001a0610, 0x001060a0}
   , 75,80,0,NULL, 160,0,0,5,0,0,NULL,NULL,0},
  {pat355,13,8, "CB300",0,-1,3,2,0x0,2,0,
    { 0x00b8fcff, 0xe0f0e000, 0xfcb80000, 0x2f3f2f00, 0xe0f0e000, 0xfcb80000, 0x2f3f2f03, 0x00b8fcfc},
    { 0x00100008, 0x00100000, 0x00100000, 0x02100000, 0x00100000, 0x00100000, 0x00100200, 0x00100080}
   , 40,80,2,assist_params355, 42,20,-10,0,0,0,NULL,NULL,0},
  {pat843,17,8, "CD34",-1,-1,2,3,0x0,0,2,
    { 0x3fffff3f, 0xf0fcfcfc, 0xfcfcf000, 0xffff3c00, 0xfcfcf000, 0xffff3f00, 0x3cffffff, 0xf0fcfcf0},
    { 0x00180400, 0x00106000, 0x40900000, 0x24100000, 0x60100000, 0x04180000, 0x00102400, 0x00904000}
   , 70,80,1,assist_params843, 0,0,0,0,0,0,NULL,NULL,0},
  {pat352,16,8, "CB297",0,-1,4,3,0x0,3,0,
    { 0x00f0fcff, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0x003cfcfc},
    { 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x40100000, 0x04100000, 0x00100400, 0x00104000}
   , 65,80,1,assist_params352, 0,0,0,5,0,0,NULL,NULL,0},
  {pat879,6,8, "CD70",0,-1,3,0,0x0,2,0,
    { 0x003030f0, 0x00f00000, 0x30300000, 0x003f0300, 0x00f00000, 0x30300000, 0x033f0000, 0x0030303c},
    { 0x00201080, 0x00600000, 0x10200000, 0x00240200, 0x00600000, 0x10200000, 0x02240000, 0x00201008}
   , 80,80,0,NULL, 8,0,0,0,0,0,block_attack_defend_helper,NULL,3},
  {pat0,16,8, "EB1",0,-3,3,1,0x2,2,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 40,80,2,assist_params0, 8,15,5,5,0,0,NULL,autohelper0,3},
  {pat859,22,8, "CD50",0,-1,4,3,0x0,2,2,
    { 0x0034ffff, 0xc0f0d0c0, 0xfc700000, 0x1f3f0f00, 0xd0f0c000, 0xff340000, 0x0f3f1f0f, 0x0070fcfc},
    { 0x00200844, 0x00208000, 0x80200000, 0x09200100, 0x80200000, 0x08200000, 0x01200900, 0x00208044}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat601,18,8, "CC77",-2,0,2,5,0x0,0,2,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,80,2,assist_params601, 0,5,0,0,0,0,jump_out_helper,NULL,0},
  {pat860,9,8, "CD51",0,-1,3,1,0x0,2,1,
    { 0x003c3cfc, 0x00f0f000, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3c3c0000, 0x033f3f00, 0x00f0f0fc},
    { 0x00241800, 0x00609000, 0x90600000, 0x18240000, 0x90600000, 0x18240000, 0x00241800, 0x00609000}
   , 80,80,0,NULL, 32,0,0,0,0,0,threaten_capture_helper,autohelper860,3},
  {pat343,14,8, "CB288",-1,0,2,3,0x0,0,1,
    { 0x3d3f3f3f, 0x00fcfcf4, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3d00, 0x00ffff7f, 0xf0f0f0f0},
    { 0x00101820, 0x00508000, 0x90100000, 0x08160000, 0x80500000, 0x18100000, 0x00160800, 0x00109020}
   , 65,80,1,assist_params343, 34,0,0,5,0,0,NULL,NULL,0},
  {pat679,15,8, "CC155",0,-1,3,2,0x0,1,0,
    { 0x007d7fff, 0x50f0f0d0, 0xf4f40000, 0x3f3f1700, 0xf0f05000, 0x7f7d0000, 0x173f3f1f, 0x00f4f4fc},
    { 0x00240044, 0x00201000, 0x00600000, 0x11200100, 0x10200000, 0x00240000, 0x01201100, 0x00600044}
   , 70,80,0,NULL, 64,10,0,0,0,0,NULL,NULL,3},
  {pat233,16,8, "EB1803",0,-1,3,2,0x4,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00201800, 0x00608000, 0x90200000, 0x08240000, 0x80600000, 0x18200000, 0x00240800, 0x00209000}
   , 55,80,1,assist_params233, 0,5,5,5,0,0,NULL,NULL,3},
  {pat10,18,8, "EB11",0,-1,3,3,0x2,2,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 50,80,1,assist_params10, 0,10,5,5,0,0,NULL,NULL,3},
  {pat19,16,8, "EB107",0,-1,3,2,0x2,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 65,80,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat889,10,8, "CD80",-1,0,2,2,0x0,0,1,
    { 0x0a3e3f0e, 0x00f0f8e8, 0xf0f08000, 0xbf3c0000, 0xf8f00000, 0x3f3e0a00, 0x003cbfae, 0x80f0f0c0},
    { 0x00201900, 0x00608040, 0x90200000, 0x08240000, 0x80600000, 0x19200000, 0x00240804, 0x00209000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,autohelper889,3},
  {pat1088,35,8, "EJ32",0,-3,4,3,0x2,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfdff0000, 0x3f3f3f37, 0xf0f0f070, 0xffff0000, 0x3f3f3f3f, 0x00fffdff},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,autohelper1088,0},
  {pat733,18,8, "ED43",0,-1,3,3,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00156862, 0x40909010, 0xa4500000, 0x181a0500, 0x90904000, 0x68150000, 0x051a1812, 0x0050a424}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat899,10,8, "CD90",-1,-1,1,2,0x0,-1,-1,
    { 0xf8ff1f00, 0x3c7cf8f0, 0xd0fcbc00, 0xbcf4f000, 0xf87c3c00, 0x1ffff800, 0xf0f4bc3c, 0xbcfcd000},
    { 0x00110500, 0x00104050, 0x40100000, 0x04100000, 0x40100000, 0x05110000, 0x00100414, 0x00104000}
   , 80,80,0,NULL, 0,0,0,0,0,0,stupid_defense_helper,NULL,0},
  {pat27,18,8, "EB116",0,-2,4,1,0x2,2,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f00, 0x00f0ffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200001, 0x00200000, 0x00200000, 0x00200000, 0x00200001}
   , 65,80,0,NULL, 0,15,0,0,0,0,NULL,NULL,3},
  {pat318,19,8, "CB263",0,-1,4,2,0x0,2,1,
    { 0x003fbfff, 0x80f0f0f0, 0xf8f00000, 0x3f3f0b00, 0xf0f08000, 0xbf3f0000, 0x0b3f3f3f, 0x00f0f8fc},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 55,80,0,NULL, 42,20,5,0,0,0,NULL,NULL,3},
  {pat775,8,8, "ED85",0,-2,2,0,0x8,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0f},
    { 0x00201080, 0x00600000, 0x10200000, 0x00240200, 0x00600000, 0x10200000, 0x02240000, 0x00201008}
   , 80,80,0,NULL, 256,0,0,0,0,0,NULL,NULL,3},
  {pat774,8,8, "ED84",0,-2,2,0,0x8,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0f},
    { 0x00102040, 0x00900000, 0x20100000, 0x00180100, 0x00900000, 0x20100000, 0x01180000, 0x00102004}
   , 80,80,0,NULL, 64,0,0,0,0,0,NULL,NULL,0},
  {pat313,9,8, "CB258",0,0,2,3,0x0,1,2,
    { 0x003f3f01, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3d, 0x00f0f000},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 60,80,1,assist_params313, 74,10,0,5,0,0,NULL,NULL,0},
  {pat901,13,8, "CD92",0,0,3,4,0x0,2,1,
    { 0x00303f3f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x0030f0f0},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 80,80,0,NULL, 266,0,0,0,0,0,NULL,NULL,3},
  {pat773,9,8, "ED83",-1,0,1,2,0x1,0,1,
    { 0x3f3d3f00, 0x00fcfcdc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3d3f00, 0x00fcfcdc, 0xf0f0f000},
    { 0x00101a00, 0x00508080, 0x90100000, 0x08140000, 0x80500000, 0x1a100000, 0x00140808, 0x00109000}
   , 80,80,0,NULL, 20,0,0,0,0,0,NULL,autohelper773,0},
  {pat37,16,8, "EB302",0,-1,3,2,0x2,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00124000, 0x40100020, 0x04100000, 0x00100400, 0x00104000, 0x40120000, 0x04100020, 0x00100400}
   , 75,80,0,NULL, 0,5,0,0,0,0,NULL,NULL,0},
  {pat905,5,8, "CD96",0,0,2,1,0x0,1,1,
    { 0x003c3c0c, 0x00f0f000, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3f00, 0x00f0f0c0},
    { 0x00102004, 0x00900000, 0x20100000, 0x01180000, 0x00900000, 0x20100000, 0x00180100, 0x00102040}
   , 75,80,0,NULL, 10,5,0,0,0,0,NULL,autohelper905,0},
  {pat770,29,8, "ED80",-2,-2,3,2,0x5,0,-1,
    { 0xfffffdea, 0xffffff7f, 0xffffffff, 0xfefefffe, 0xffffffff, 0xfdffffff, 0xfffefef6, 0xffffffae},
    { 0x00289440, 0x80606000, 0x58a00000, 0x24240900, 0x60608000, 0x94280000, 0x09242400, 0x00a05804}
   , 80,80,0,NULL, 1,0,0,0,0,0,NULL,NULL,3},
  {pat978,47,8, "F3",-3,-6,1,3,0x5,-1,-2,
    { 0xffff0300, 0x3f3f3fff, 0x03ffffff, 0xf0f0f0fc, 0x3f3f3fff, 0x03ffffff, 0xf0f0f0fc, 0xffff0300},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat767,19,8, "ED77",0,-2,4,1,0x8,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100808, 0x00108000, 0x80100000, 0x0a100000, 0x80100000, 0x08100000, 0x00100a00, 0x00108080}
   , 80,80,0,NULL, 32,0,0,0,0,0,NULL,NULL,0},
  {pat691,16,8, "ED1",0,-2,4,1,0x4,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcff},
    { 0x00108040, 0x80100000, 0x08100000, 0x00100902, 0x00108000, 0x80100000, 0x09100000, 0x00100806}
   , 80,80,0,NULL, 32,0,0,0,0,0,NULL,NULL,0},
  {pat1015,29,8, "F402",-2,-1,1,6,0x1,0,3,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 35,80,2,assist_params1015, 0,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat1016,28,8, "F403",-2,-6,1,1,0x1,0,-4,
    { 0xfcf0f000, 0xffff0f00, 0x3f3fffff, 0xc0fcfcfc, 0x0fffffff, 0xf0f0fcfc, 0xfcfcc000, 0xff3f3f00},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140000, 0x00500000, 0x10100000, 0x00140000, 0x00101000}
   , 60,80,0,NULL, 0,20,0,0,0,0,NULL,NULL,0},
  {pat1017,28,8, "F404",-2,-6,1,1,0x1,1,-4,
    { 0xfcf0f000, 0xffff0f00, 0x3f3fffff, 0xc0fcfcfc, 0x0fffffff, 0xf0f0fcfc, 0xfcfcc000, 0xff3f3f00},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140000, 0x00500000, 0x10100000, 0x00140000, 0x00101000}
   , 60,80,0,NULL, 0,20,0,0,0,0,NULL,NULL,0},
  {pat765,23,8, "ED75",0,-2,4,2,0x8,3,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0x00ffffff},
    { 0x00100018, 0x00100000, 0x00100000, 0x02110000, 0x00100000, 0x00100000, 0x00110200, 0x00100090}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat286,13,8, "CB231",-1,-1,2,2,0x0,0,2,
    { 0x2a3fbf3f, 0x80f8f8f8, 0xf8f0a000, 0xbfbf0800, 0xf8f88000, 0xbf3f2a00, 0x08bfbfbf, 0xa0f0f8f0},
    { 0x0010061a, 0x00104080, 0x40100000, 0x06110000, 0x40100000, 0x06100000, 0x0011060a, 0x00104090}
   , 20,80,2,assist_params286, 10,10,0,5,0,0,NULL,NULL,0},
  {pat284,17,8, "CB229",-1,-4,2,0,0x0,0,-3,
    { 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f},
    { 0x00104090, 0x40100000, 0x04100000, 0x00110602, 0x00104000, 0x40100000, 0x06110000, 0x0010041a}
   , 30,80,2,assist_params284, 0,0,0,5,0,0,NULL,NULL,0},
  {pat50,20,8, "EB315",0,0,3,4,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 55,80,1,assist_params50, 0,5,5,5,0,0,NULL,NULL,0},
  {pat1086,30,8, "EJ30",-1,-2,3,3,0x2,1,0,
    { 0xffffffff, 0xfcfcfcfc, 0xfefeff00, 0xffffffeb, 0xfcfcfcac, 0xffffff00, 0xffffffff, 0xfffefeff},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 60,80,0,NULL, 0,20,0,0,0,0,NULL,NULL,3},
  {pat53,12,8, "EB401",0,0,2,4,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 20,80,2,assist_params53, 2,25,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat762,29,8, "ED72",-2,-1,3,5,0x9,0,2,
    { 0xfffffffc, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffff00, 0xffffffff, 0xfffffffc, 0xfcfcfcfc},
    { 0x00282514, 0x00a06040, 0x60a00000, 0x25290000, 0x60a00000, 0x25280000, 0x00292504, 0x00a06050}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat54,16,8, "EB402",-1,0,2,4,0x2,0,2,
    { 0x2f3f3f3f, 0x00f8fcfc, 0xf0f0e000, 0xffbf0000, 0xfcf80000, 0x3f3f2f00, 0x00bfffff, 0xe0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 20,80,2,assist_params54, 2,25,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat1028,32,8, "F504",0,-6,3,1,0x2,1,-4,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x40100000, 0x04100000, 0x00100400, 0x00104000}
   , 65,80,1,assist_params1028, 0,0,0,5,0,0,NULL,NULL,0},
  {pat274,10,8, "CB219",0,-1,3,1,0x0,2,0,
    { 0x00b8fcfc, 0xe0f0e000, 0xfcb80000, 0x2f3f2f00, 0xe0f0e000, 0xfcb80000, 0x2f3f2f00, 0x00b8fcfc},
    { 0x00104408, 0x40104000, 0x44100000, 0x06100400, 0x40104000, 0x44100000, 0x04100600, 0x00104480}
   , 65,80,0,NULL, 130,10,0,5,0,0,NULL,autohelper274,0},
  {pat1029,28,8, "F505",-1,-1,2,5,0x2,1,3,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 70,80,1,assist_params1029, 0,0,0,5,0,0,NULL,NULL,0},
  {pat1082,30,8, "EJ26",0,0,4,5,0x2,1,4,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x002a0500, 0x00206060, 0x40a00000, 0x24200000, 0x60200000, 0x052a0000, 0x00202424, 0x00a04000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat729,21,8, "ED39",-2,0,2,4,0x1,0,2,
    { 0x3f3f3f03, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcff, 0xf0f0f000},
    { 0x00100002, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100002, 0x00100000}
   , 75,80,1,assist_params729, 0,0,0,0,0,0,NULL,NULL,0},
  {pat728,15,8, "ED38",0,-2,3,2,0x2,2,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f02, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfe},
    { 0x00156060, 0x40901010, 0x24500000, 0x101a0500, 0x10904000, 0x60150000, 0x051a1010, 0x00502424}
   , 80,80,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat55,19,8, "EB403",0,-3,3,1,0x2,2,0,
    { 0x00f4fcfc, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0x007fffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 20,80,2,assist_params55, 2,25,0,5,0,0,jump_out_far_helper,NULL,3},
  {pat671,6,8, "CC147",0,0,2,1,0x0,1,0,
    { 0x003c3c3c, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f0f0},
    { 0x00240008, 0x00201000, 0x00600000, 0x12200000, 0x10200000, 0x00240000, 0x00201200, 0x00600080}
   , 80,80,0,NULL, 0,0,0,0,0,0,safe_cut_helper,NULL,3},
  {pat83,16,8, "EB521",0,-3,3,0,0xa,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 60,80,0,NULL, 0,10,5,5,0,0,NULL,NULL,0},
  {pat1038,49,8, "J2",-3,-3,3,3,0x9,2,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1039,53,8, "J3",-3,-3,3,4,0x9,2,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1040,53,8, "J4",-2,-6,4,1,0x9,0,-2,
    { 0xfcfcfcf0, 0xffffff00, 0xffffffff, 0xfcffffff, 0xffffffff, 0xfcfcfcfc, 0xfffffc00, 0xffffff3f},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat748,10,8, "ED58",0,-3,2,0,0x2,0,-1,
    { 0x00f0f050, 0xf0f00000, 0x3f3c0000, 0x003d3d0f, 0x00f0f0c0, 0xf0f00000, 0x3d3d0000, 0x003c3f17},
    { 0x0010a000, 0x80900000, 0x28100000, 0x00180800, 0x00908000, 0xa0100000, 0x08180000, 0x00102800}
   , 80,80,0,NULL, 10,0,0,0,0,0,NULL,autohelper748,0},
  {pat111,13,8, "EB624",-1,-2,2,1,0x1,0,-1,
    { 0xfcfcfcc0, 0xfcfcfc00, 0xffffff00, 0xfcfcfffc, 0xfcfcfcfc, 0xfcfcfc00, 0xfffcfc00, 0xffffff0c},
    { 0x00201840, 0x00608000, 0x90200000, 0x08240100, 0x80600000, 0x18200000, 0x01240800, 0x00209004}
   , 60,80,1,assist_params111, 0,5,5,5,0,0,NULL,NULL,3},
  {pat678,15,8, "CC154",0,0,4,3,0x0,2,1,
    { 0x00303c3f, 0x00f0c000, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3c300000, 0x003f0f03, 0x0030f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 70,80,0,NULL, 72,10,0,0,0,0,NULL,NULL,3},
  {pat842,12,8, "CD33",0,-1,3,2,0x0,2,0,
    { 0x003cff3f, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0f, 0x00f0fcf0},
    { 0x00182601, 0x00906080, 0x60900000, 0x24180000, 0x60900000, 0x26180000, 0x00182409, 0x00906000}
   , 80,80,0,NULL, 0,0,0,0,0,0,fight_ko2_helper,NULL,0},
  {pat249,16,8, "CB10",0,0,5,4,0x0,3,2,
    { 0x003b3f3f, 0x00f0e0f0, 0xf0b00000, 0x2f3f0000, 0xe0f00000, 0x3f3b0000, 0x003f2f3f, 0x00b0f0f0},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 35,80,2,assist_params249, 0,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat1043,36,8, "J7",-2,-2,3,3,0x9,1,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat682,9,8, "CC158",0,0,3,2,0x0,2,1,
    { 0x00333f3f, 0x00f0c0f0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f330000, 0x003f0f3f, 0x0030f0f0},
    { 0x00220011, 0x00200020, 0x00200000, 0x00210000, 0x00200000, 0x00220000, 0x00210021, 0x00200010}
   , 80,80,0,NULL, 64,0,0,0,0,0,NULL,NULL,3},
  {pat683,18,8, "CC159",0,-2,4,1,0x0,3,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100090, 0x00100000, 0x00100000, 0x00110200, 0x00100000, 0x00100000, 0x02110000, 0x00100018}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat803,18,8, "ED113",0,-2,3,2,0x8,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200018, 0x00200000, 0x00200000, 0x02210000, 0x00200000, 0x00200000, 0x00210200, 0x00200090}
   , 40,80,0,NULL, 34,40,0,0,0,0,NULL,NULL,3},
  {pat246,15,8, "CB7",-1,-5,3,0,0x0,1,-3,
    { 0x80f0f0c0, 0xf8f00000, 0x3f3f0b00, 0x003cbfff, 0x00f0f8fc, 0xf0f08000, 0xbf3c0000, 0x0b3f3f0f},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140000, 0x00500000, 0x10100000, 0x00140000, 0x00101000}
   , 35,80,2,assist_params246, 0,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat686,4,8, "CC162",0,0,1,1,0x0,0,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00102400, 0x00904000, 0x60100000, 0x04180000, 0x40900000, 0x24100000, 0x00180400, 0x00106000}
   , 80,80,0,NULL, 10,0,0,0,0,0,NULL,autohelper686,0},
  {pat687,4,8, "CC163",0,0,1,1,0x0,0,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00201800, 0x00608000, 0x90200000, 0x08240000, 0x80600000, 0x18200000, 0x00240800, 0x00209000}
   , 80,80,0,NULL, 10,0,0,0,0,0,NULL,autohelper687,3},
  {pat688,12,8, "CC164",0,0,3,2,0x0,1,0,
    { 0x003f3f3e, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3e, 0x00f0f0f0},
    { 0x00100a24, 0x00108080, 0x80100000, 0x09120000, 0x80100000, 0x0a100000, 0x00120908, 0x00108060}
   , 80,80,0,NULL, 10,0,0,0,0,0,NULL,autohelper688,0},
  {pat689,6,8, "CC165",0,0,2,1,0x0,1,1,
    { 0x003c3c3c, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f0f0},
    { 0x00180024, 0x00102000, 0x00900000, 0x21120000, 0x20100000, 0x00180000, 0x00122100, 0x00900060}
   , 80,80,0,NULL, 64,0,0,0,0,0,NULL,autohelper689,0},
  {pat690,6,8, "CC166",0,0,2,1,0x0,1,1,
    { 0x003c3c3c, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f0f0},
    { 0x00240018, 0x00201000, 0x00600000, 0x12210000, 0x10200000, 0x00240000, 0x00211200, 0x00600090}
   , 80,80,0,NULL, 256,0,0,0,0,0,NULL,autohelper690,3},
  {pat172,11,8, "EB917",0,-1,2,2,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x001a0400, 0x00106020, 0x40900000, 0x24100000, 0x60100000, 0x041a0000, 0x00102420, 0x00904000}
   , 55,80,0,NULL, 10,20,0,5,0,0,NULL,NULL,0},
  {pat116,13,8, "EB629",-1,-2,2,1,0x8,0,-1,
    { 0xfcfcf0c0, 0xfcfc3c00, 0x3fffff00, 0xf0fcffff, 0x3cfcfcfc, 0xf0fcfc00, 0xfffcf000, 0xffff3f0f},
    { 0x00102080, 0x00900000, 0x20100000, 0x00180200, 0x00900000, 0x20100000, 0x02180000, 0x00102008}
   , 75,80,0,NULL, 2,5,0,0,0,0,NULL,NULL,0},
  {pat693,10,8, "ED3",-1,-1,2,1,0x8,1,0,
    { 0xf0fcfcf0, 0xfcfcf000, 0xfcfc3c00, 0x3cffff00, 0xf0fcfc00, 0xfcfcf000, 0xffff3c00, 0x3cfcfc3c},
    { 0x00180810, 0x0010a000, 0x80900000, 0x28110000, 0xa0100000, 0x08180000, 0x00112800, 0x00908010}
   , 70,80,0,NULL, 8,10,0,0,0,0,NULL,NULL,0},
  {pat1087,28,8, "EJ31",-1,-2,3,3,0x2,1,1,
    { 0xff7fffff, 0xdcfcfcfc, 0xfdf5ff00, 0xffffdfd4, 0xfcfcdc5c, 0xff7fff00, 0xdfffffff, 0xfff5fdfc},
    { 0x00219000, 0x80600010, 0x18200000, 0x00240800, 0x00608000, 0x90210000, 0x08240010, 0x00201800}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat724,13,8, "ED34",0,-2,2,2,0x8,2,0,
    { 0x00fcfcff, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f03, 0x00ffffff},
    { 0x00102401, 0x00904000, 0x60100000, 0x04180000, 0x40900000, 0x24100000, 0x00180401, 0x00106000}
   , 70,80,1,assist_params724, 0,0,0,0,0,0,NULL,NULL,0},
  {pat234,20,8, "EB1804",0,-1,4,2,0x4,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00181800, 0x0050a000, 0x90900000, 0x28140000, 0xa0500000, 0x18180000, 0x00142800, 0x00909000}
   , 55,80,1,assist_params234, 8,5,5,5,0,0,NULL,NULL,0},
  {pat242,20,8, "CB3",0,-2,5,2,0x0,3,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 20,80,2,assist_params242, 0,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat1073,25,8, "EJ15",-1,-1,3,3,0x2,0,1,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00211800, 0x00608010, 0x90200000, 0x08240000, 0x80600000, 0x18210000, 0x00240810, 0x00209000}
   , 80,80,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat725,13,8, "ED35",0,-2,2,2,0x8,2,-1,
    { 0x00fcfcff, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f03, 0x00ffffff},
    { 0x0010a411, 0x80904000, 0x68100000, 0x04190800, 0x40908000, 0xa4100000, 0x08190401, 0x00106810}
   , 70,80,1,assist_params725, 0,0,0,0,0,0,NULL,NULL,0},
  {pat700,14,8, "ED10",0,0,2,4,0x2,0,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120100, 0x00100060, 0x00100000, 0x00100000, 0x00100000, 0x01120000, 0x00100024, 0x00100000}
   , 80,80,0,NULL, 32,0,0,0,0,0,NULL,NULL,0},
  {pat136,12,8, "EB801",0,0,2,4,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00120400, 0x00104020, 0x40100000, 0x04100000, 0x40100000, 0x04120000, 0x00100420, 0x00104000}
   , 65,80,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat739,11,8, "ED49",0,-1,2,2,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00149820, 0x80509000, 0x98500000, 0x18160800, 0x90508000, 0x98140000, 0x08161800, 0x00509820}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat153,29,8, "EB818",-1,-5,3,1,0x2,1,-4,
    { 0xf0f0fcfc, 0xfcfcc000, 0xff3f3c00, 0x0fffff3f, 0xc0fcfcf0, 0xfcf0f000, 0xffff0f00, 0x3c3fffff},
    { 0x00106404, 0x40904000, 0x64100000, 0x05180400, 0x40904000, 0x64100000, 0x04180500, 0x00106440}
   , 65,80,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat145,18,8, "EB810",0,-2,3,2,0x2,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfdfc0000, 0x3f3f3f07, 0xf0f0f040, 0xffff0000, 0x3f3f3f3f, 0x00fcfdff},
    { 0x00200110, 0x00200040, 0x00200000, 0x00210000, 0x00200000, 0x01200000, 0x00210004, 0x00200010}
   , 60,80,1,assist_params145, 0,10,0,0,0,0,NULL,NULL,3},
  {pat741,19,8, "ED51",0,0,3,4,0x4,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00150102, 0x00101050, 0x00500000, 0x10100000, 0x10100000, 0x01150000, 0x00101016, 0x00500000}
   , 70,80,1,assist_params741, 0,0,0,0,0,0,NULL,NULL,0},
  {pat706,11,8, "ED16",0,0,1,5,0x2,1,3,
    { 0x003f0f00, 0x0030f0f0, 0xc0f00000, 0x3c300000, 0xf0300000, 0x0f3f0000, 0x00303c3c, 0x00f0c000},
    { 0x001a0800, 0x0010a020, 0x80900000, 0x28100000, 0xa0100000, 0x081a0000, 0x00102820, 0x00908000}
   , 50,80,0,NULL, 10,0,30,0,0,0,NULL,NULL,0},
  {pat1062,20,8, "EJ4",-1,-1,2,3,0x2,-1,2,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00160900, 0x00109060, 0x80500000, 0x18100000, 0x90100000, 0x09160000, 0x00101824, 0x00508000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat726,13,8, "ED36",-1,-2,2,1,0x1,1,-1,
    { 0xfcfcfc30, 0xfcfcfc00, 0xffffff00, 0xfcfffcfc, 0xfcfcfcfc, 0xfcfcfc00, 0xfcfffc00, 0xffffff30},
    { 0x00142400, 0x00905000, 0x60500000, 0x14180000, 0x50900000, 0x24140000, 0x00181400, 0x00506000}
   , 40,80,0,NULL, 0,40,0,0,0,0,NULL,autohelper726,0},
  {pat740,20,8, "ED50",0,-2,3,3,0x2,2,-2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcff},
    { 0x002a6510, 0x40a06060, 0x64a00000, 0x24290400, 0x60a04000, 0x652a0000, 0x04292424, 0x00a06410}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat166,17,8, "EB911",0,-2,2,3,0x2,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0x00fcffff},
    { 0x00201000, 0x00600000, 0x11200000, 0x00240004, 0x00600040, 0x10200000, 0x00240000, 0x00201100}
   , 45,80,0,NULL, 10,35,0,0,0,0,NULL,NULL,3},
  {pat154,21,8, "EB819",0,-3,3,2,0xa,1,-1,
    { 0x00b0fcff, 0xe0f0c000, 0xff3a0000, 0x0f3f2f2f, 0xc0f0e0e0, 0xfcb00000, 0x2f3f0f03, 0x003affff},
    { 0x00200805, 0x00208000, 0x80200000, 0x09200000, 0x80200000, 0x08200000, 0x00200901, 0x00208040}
   , 60,80,0,NULL, 0,10,5,5,0,0,NULL,NULL,3},
  {pat1071,39,8, "EJ13",-2,-2,4,3,0x8,0,2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 80,80,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1057,34,8, "J21",0,-2,5,3,0xa,2,2,
    { 0x00fcffff, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0x00ffffff},
    { 0x00200008, 0x00200000, 0x00200000, 0x02200000, 0x00200000, 0x00200000, 0x00200200, 0x00200080}
   , 70,80,0,NULL, 0,10,0,0,0,0,NULL,NULL,3},
  {pat1049,49,8, "J13",-1,-2,5,4,0xa,3,0,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00200084, 0x00200000, 0x00200000, 0x01200200, 0x00200000, 0x00200000, 0x02200100, 0x00200048}
   , 75,80,1,assist_params1049, 0,0,0,0,0,0,NULL,NULL,3},
  {pat207,18,8, "EB1506",-2,0,2,4,0x2,1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 60,80,0,NULL, 0,20,-5,0,0,0,NULL,autohelper207,0},
  {pat1058,34,8, "J22",0,-2,5,3,0xa,2,2,
    { 0x007cffff, 0xd0f0f0c0, 0xfff70000, 0x3f3f1f3f, 0xf0f0d0f0, 0xff7c0000, 0x1f3f3f0f, 0x00f7ffff},
    { 0x00200008, 0x00200000, 0x00200000, 0x02200000, 0x00200000, 0x00200000, 0x00200200, 0x00200080}
   , 70,80,0,NULL, 0,10,0,0,0,0,NULL,NULL,3},
  {pat323,17,8, "CB268",0,-2,4,2,0x0,3,1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00100840, 0x00108000, 0x80100000, 0x08100100, 0x80100000, 0x08100000, 0x01100800, 0x00108004}
   , 10,79,2,assist_params323, 8,0,40,5,0,0,NULL,autohelper323,0},
  {pat1045,32,8, "J9",0,-1,3,6,0x2,1,5,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00208110, 0x80200040, 0x08200000, 0x00210800, 0x00208000, 0x81200000, 0x08210004, 0x00200810}
   , 79,79,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1035,33,8, "F703",-1,-1,3,5,0x2,1,2,
    { 0x3fffffff, 0xf0fcfcfc, 0xfcfcf000, 0xffff3f00, 0xfcfcf000, 0xffff3f00, 0x3fffffff, 0xf0fcfcfc},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 79,79,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat781,8,8, "ED91",0,-1,2,1,0x8,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00200404, 0x00204000, 0x40200000, 0x05200000, 0x40200000, 0x04200000, 0x00200500, 0x00204040}
   , 79,79,0,NULL, 10,0,0,0,0,0,NULL,autohelper781,3},
  {pat1041,33,8, "J5",-1,-3,4,2,0x9,1,-1,
    { 0xfffffffc, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xfffffffc, 0xffffffff},
    { 0x00200210, 0x00200080, 0x00200000, 0x00210000, 0x00200000, 0x02200000, 0x00210008, 0x00200010}
   , 79,79,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1034,36,8, "F702",0,0,3,8,0x2,1,4,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 74,79,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat1033,40,8, "F701",-1,0,2,9,0x2,0,5,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 74,79,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat856,11,8, "CD47",0,-1,3,1,0x0,3,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110000, 0x00100010}
   , 78,78,0,NULL, 0,0,0,0,0,0,threaten_helper,NULL,0},
  {pat1064,22,8, "EJ6",0,-3,3,2,0x2,1,1,
    { 0x00fcffff, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0x00ffffff},
    { 0x00106088, 0x40900000, 0x25100000, 0x02180604, 0x00904040, 0x60100000, 0x06180200, 0x00102588}
   , 78,78,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1048,42,8, "J12",-2,-2,3,4,0xa,1,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 78,78,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat875,8,8, "CD66",0,-1,2,1,0x0,0,-1,
    { 0x00fcfc3c, 0xf0f0f000, 0xfcfc0000, 0x3f3f3c00, 0xf0f0f000, 0xfcfc0000, 0x3c3f3f00, 0x00fcfcf0},
    { 0x00288824, 0x8020a000, 0x88a00000, 0x29220800, 0xa0208000, 0x88280000, 0x08222900, 0x00a08860}
   , 78,78,0,NULL, 8,0,0,0,0,0,NULL,autohelper875,3},
  {pat815,13,8, "CD5",0,-1,3,2,0x0,3,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00109024, 0x80500000, 0x18100000, 0x01160800, 0x00508000, 0x90100000, 0x08160100, 0x00101860}
   , 40,78,1,assist_params815, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1011,41,8, "F302",0,-2,6,3,0x8,5,2,
    { 0x00fcffff, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0x00ffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 73,78,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat491,9,8, "EC94",0,-3,1,1,0x2,1,0,
    { 0x00fcf800, 0xf0f0b000, 0xbfff0000, 0x383c3c3c, 0xb0f0f0f0, 0xf8fc0000, 0x3c3c3800, 0x00ffbf00},
    { 0x00240000, 0x00201000, 0x01600000, 0x10200004, 0x10200040, 0x00240000, 0x00201000, 0x00600100}
   , 78,78,0,NULL, 96,0,0,0,0,0,NULL,autohelper491,3},
  {pat888,8,8, "CD79",0,0,2,2,0x0,1,2,
    { 0x003e3f0e, 0x00f0f0e0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3e0000, 0x003c3f2e, 0x00f0f0c0},
    { 0x00241800, 0x00609000, 0x90600000, 0x18240000, 0x90600000, 0x18240000, 0x00241800, 0x00609000}
   , 78,78,0,NULL, 8,0,0,0,0,0,NULL,autohelper888,3},
  {pat769,20,8, "ED79",0,-2,3,2,0x2,1,1,
    { 0x007effff, 0xd0f0f0e0, 0xfff50000, 0x3f3f1f1f, 0xf0f0d0d0, 0xff7e0000, 0x1f3f3f2f, 0x00f5ffff},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240001, 0x00600000, 0x10200000, 0x00240000, 0x00201001}
   , 78,78,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat761,23,8, "ED71",0,-1,4,3,0x2,2,1,
    { 0x003f3fff, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0fc},
    { 0x00242400, 0x00a05000, 0x60600000, 0x14280000, 0x50a00000, 0x24240000, 0x00281400, 0x00606000}
   , 68,78,1,assist_params761, 0,0,0,0,0,0,NULL,NULL,3},
  {pat346,18,8, "CB291",-2,0,1,4,0x0,-1,2,
    { 0x3f3f0f00, 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc, 0xf0f0c000},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 72,77,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat1090,35,8, "EJ34",0,-3,4,3,0x2,0,2,
    { 0x00ffffff, 0xf0f0f0f0, 0xfdff0000, 0x3f3f3f37, 0xf0f0f070, 0xffff0000, 0x3f3f3f3f, 0x00fffdff},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 77,77,0,NULL, 0,0,0,0,0,0,NULL,autohelper1090,0},
  {pat780,20,8, "ED90",0,0,3,4,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00221800, 0x00608020, 0x90200000, 0x08240000, 0x80600000, 0x18220000, 0x00240820, 0x00209000}
   , 77,77,0,NULL, 0,0,0,0,0,0,NULL,autohelper780,3},
  {pat1005,45,8, "F205",0,-4,8,0,0x8,6,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100040, 0x00100000, 0x00100000, 0x00100100}
   , 77,77,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1020,26,8, "F407",-2,-1,1,6,0x1,0,3,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 70,77,1,assist_params1020, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1026,28,8, "F502",-2,0,1,6,0x1,0,2,
    { 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 72,77,1,assist_params1026, 0,0,0,5,0,0,NULL,NULL,3},
  {pat345,18,8, "CB290",-2,0,1,4,0x0,-1,2,
    { 0x3f3f0f00, 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc, 0xf0f0c000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 72,77,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat382,17,4, "CB327",-2,0,2,4,0x0,0,2,
    { 0x3f3f3f30, 0x00fffcfc, 0xf0f0f030, 0xfcff0000, 0xfcff0000, 0x3f3f3f30, 0x00fffcfc, 0xf0f0f030},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 16,76,2,assist_params382, 8,0,0,0,0,0,NULL,autohelper382,3},
  {pat383,16,4, "CB328",0,0,3,4,0x0,1,2,
    { 0x00303f3f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x0030f0f0},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 16,76,2,assist_params383, 8,0,0,0,0,0,NULL,autohelper383,0},
  {pat976,52,8, "F1",-3,-1,1,9,0x5,-1,4,
    { 0xffffab00, 0xbfbfbfff, 0xa8fcfcfc, 0xf8f8f800, 0xbfbfbf00, 0xabffffff, 0xf8f8f8fc, 0xfcfca800},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 76,76,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat369,17,8, "CB314",0,-3,3,1,0x0,2,-1,
    { 0x00fcf8fc, 0xf0f0b000, 0xbfff0000, 0x3b3f3f3f, 0xb0f0f0f0, 0xf8fc0000, 0x3f3f3b00, 0x00ffbfff},
    { 0x00249004, 0x80601000, 0x18600000, 0x11240800, 0x10608000, 0x90240000, 0x08241100, 0x00601840}
   , 60,75,1,assist_params369, 8,0,0,5,0,0,NULL,NULL,3},
  {pat613,9,8, "CC89",0,0,3,2,0x0,2,1,
    { 0x003c3f3e, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0e, 0x00f0f0f0},
    { 0x00100220, 0x00100080, 0x00100000, 0x00120000, 0x00100000, 0x02100000, 0x00120008, 0x00100020}
   , 55,75,1,assist_params613, 18,10,0,0,0,0,NULL,autohelper613,0},
  {pat325,15,8, "CB270",0,-4,2,0,0x0,1,-2,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00101090, 0x00500000, 0x10100000, 0x00150200, 0x00500000, 0x10100000, 0x02150000, 0x00101018}
   , 60,75,1,assist_params325, 8,0,0,5,0,0,NULL,NULL,0},
  {pat224,21,8, "EB1705",-1,0,3,4,0x2,0,2,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 65,75,0,NULL, 0,10,0,0,0,0,NULL,autohelper224,0},
  {pat223,21,8, "EB1704",-1,0,3,4,0x2,0,2,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 65,75,0,NULL, 0,10,0,0,0,0,NULL,autohelper223,0},
  {pat171,9,8, "EB916",0,0,2,2,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00221000, 0x00600020, 0x10200000, 0x00240000, 0x00600000, 0x10220000, 0x00240020, 0x00201000}
   , 40,75,1,assist_params171, 10,0,20,5,0,0,NULL,NULL,3},
  {pat735,23,8, "ED45",0,-1,4,3,0x2,1,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat213,12,8, "EB1603",0,0,2,3,0x2,0,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100100, 0x00100040, 0x00100000, 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100000}
   , 60,75,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat517,18,8, "EC120",0,-1,2,4,0x2,1,0,
    { 0x00bfffff, 0xe0f0f0f0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbf0000, 0x2f3f3f3f, 0x00f8fcfc},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 75,75,0,NULL, 72,0,0,0,0,0,NULL,NULL,3},
  {pat147,14,8, "EB812",0,-1,3,2,0x2,1,2,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00280440, 0x00206000, 0x40a00000, 0x24200100, 0x60200000, 0x04280000, 0x01202400, 0x00a04004}
   , 60,75,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat704,5,4, "ED14",-1,0,1,2,0x1,0,1,
    { 0x0c3f0c00, 0x0030fc30, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0c3f0c00, 0x0030fc30, 0xc0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 40,75,0,NULL, 40,35,0,0,0,0,NULL,autohelper704,0},
  {pat518,21,8, "EC121",-1,-1,2,4,0x2,0,3,
    { 0x0b3fffff, 0xc0f0f8fc, 0xfcf08000, 0xbf3f0f00, 0xf8f0c000, 0xff3f0b00, 0x0f3fbfff, 0x80f0fcfc},
    { 0x00149a20, 0x80509080, 0x98500000, 0x18160800, 0x90508000, 0x9a140000, 0x08161808, 0x00509820}
   , 55,75,0,NULL, 0,0,20,0,0,0,NULL,autohelper518,0},
  {pat361,11,8, "CB306",0,0,3,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200024, 0x00200000, 0x00200000, 0x01220000, 0x00200000, 0x00200000, 0x00220100, 0x00200060}
   , 40,75,1,assist_params361, 0,10,0,5,0,0,NULL,NULL,3},
  {pat260,24,8, "CB205",-3,0,1,4,0x0,-1,1,
    { 0x3f3f0f00, 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc, 0xf0f0c000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 40,75,2,assist_params260, 0,0,0,5,0,0,NULL,NULL,0},
  {pat76,11,8, "EB514",0,0,2,3,0x1,2,2,
    { 0x003f0f3f, 0x0030f0f0, 0xc0f00000, 0x3f330000, 0xf0300000, 0x0f3f0000, 0x00333f3f, 0x00f0c0f0},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 50,75,1,assist_params76, 2,5,5,5,0,0,NULL,NULL,3},
  {pat261,24,8, "CB206",-3,0,1,4,0x0,0,1,
    { 0x3f3f0f00, 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc, 0xf0f0c000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 40,75,2,assist_params261, 0,0,0,5,0,0,NULL,autohelper261,0},
  {pat277,25,8, "CB222",-4,-1,1,3,0x0,-1,1,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 50,75,2,assist_params277, 0,0,0,5,0,0,NULL,autohelper277,0},
  {pat359,9,8, "CB304",0,0,2,2,0x0,2,1,
    { 0x003b373f, 0x00f060f0, 0x70b00000, 0x273f0000, 0x60f00000, 0x373b0000, 0x003f273f, 0x00b070f0},
    { 0x00111021, 0x00500010, 0x10100000, 0x00160000, 0x00500000, 0x10110000, 0x00160011, 0x00101020}
   , 15,75,2,assist_params359, 10,40,0,0,0,0,NULL,NULL,0},
  {pat278,25,8, "CB223",-4,-1,1,3,0x0,-2,0,
    { 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 50,75,2,assist_params278, 0,0,0,5,0,0,NULL,autohelper278,0},
  {pat241,15,8, "CB2",-2,-4,2,1,0x0,0,-2,
    { 0xf4fcf400, 0xfcfc7400, 0x7fff7f00, 0x74fcfcfc, 0x74fcfcfc, 0xf4fcf400, 0xfcfc7400, 0x7fff7f00},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 20,75,2,assist_params241, 32,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat281,12,8, "CB226",0,0,3,2,0x0,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00292400, 0x00a06010, 0x60a00000, 0x24280000, 0x60a00000, 0x24290000, 0x00282410, 0x00a06000}
   , 70,75,1,assist_params281, 32,0,0,5,0,0,NULL,NULL,3},
  {pat243,12,8, "CB4",-4,-2,0,2,0x0,-2,0,
    { 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 10,75,2,assist_params243, 0,20,0,5,0,0,jump_out_helper,NULL,0},
  {pat38,22,8, "EB303",-1,-1,2,4,0x2,0,2,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 60,75,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat244,10,8, "CB5",-1,-4,3,0,0x0,1,-2,
    { 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0f},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140000, 0x00500000, 0x10100000, 0x00140000, 0x00101000}
   , 30,75,2,assist_params244, 2,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat558,18,8, "CC34",-1,-2,2,2,0x0,-1,1,
    { 0x3fffffff, 0xf0fcfcfc, 0xfffff000, 0xffff3f3f, 0xfcfcf0f0, 0xffff3f00, 0x3fffffff, 0xf0ffffff},
    { 0x00100012, 0x00100000, 0x02100000, 0x00110008, 0x00100080, 0x00100000, 0x00110002, 0x00100210}
   , 65,75,1,assist_params558, 0,5,5,0,0,0,NULL,NULL,0},
  {pat245,14,8, "CB6",-1,-4,3,1,0x0,1,-2,
    { 0x00f8f8f8, 0xf0f0a000, 0xbfbf0000, 0x2a3f3f3f, 0xa0f0f0f0, 0xf8f80000, 0x3f3f2a00, 0x00bfbfbf},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110000, 0x00100010}
   , 30,75,2,assist_params245, 2,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat347,17,8, "CB292",0,-2,5,0,0x0,3,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 70,75,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat307,9,8, "CB252",0,-3,3,0,0x0,2,-2,
    { 0x00f0c0c0, 0xf0300000, 0x0f3c0000, 0x00303f0f, 0x0030f0c0, 0xc0f00000, 0x3f300000, 0x003c0f0f},
    { 0x00100080, 0x00100000, 0x01100000, 0x00100204, 0x00100040, 0x00100000, 0x02100000, 0x00100108}
   , 70,75,0,NULL, 0,0,0,5,0,0,NULL,autohelper307,0},
  {pat28,30,8, "EB201",-3,-1,2,3,0x2,-2,0,
    { 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 60,75,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat170,9,8, "EB915",0,0,2,2,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00221000, 0x00600020, 0x10200000, 0x00240000, 0x00600000, 0x10220000, 0x00240020, 0x00201000}
   , 40,75,1,assist_params170, 10,20,0,5,0,0,NULL,NULL,3},
  {pat314,9,8, "CB259",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 35,75,2,assist_params314, 10,15,15,0,0,0,NULL,NULL,0},
  {pat316,16,8, "CB261",-2,0,2,3,0x0,0,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 10,75,2,assist_params316, 42,30,0,5,0,0,NULL,NULL,0},
  {pat575,9,4, "CC51",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00210010, 0x00200010, 0x00200000, 0x00210000, 0x00200000, 0x00210000, 0x00210010, 0x00200010}
   , 25,75,0,NULL, 8,10,40,0,0,0,NULL,autohelper575,3},
  {pat319,16,8, "CB264",-1,0,2,3,0x0,1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00102020, 0x00900000, 0x20100000, 0x001a0000, 0x00900000, 0x20100000, 0x001a0000, 0x00102020}
   , 40,75,1,assist_params319, 0,10,0,5,0,0,NULL,NULL,0},
  {pat559,6,4, "CC35",0,0,2,2,0x0,1,1,
    { 0x003c3f0c, 0x00f0f0c0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3f0c, 0x00f0f0c0},
    { 0x00182000, 0x00902000, 0x20900000, 0x20180000, 0x20900000, 0x20180000, 0x00182000, 0x00902000}
   , 45,75,1,assist_params559, 64,5,5,0,0,0,NULL,autohelper559,0},
  {pat573,9,4, "CC49",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00210010, 0x00200010, 0x00200000, 0x00210000, 0x00200000, 0x00210000, 0x00210010, 0x00200010}
   , 25,75,2,assist_params573, 8,10,0,0,0,0,NULL,NULL,3},
  {pat96,12,8, "EB609",0,0,2,3,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00210800, 0x00208010, 0x80200000, 0x08200000, 0x80200000, 0x08210000, 0x00200810, 0x00208000}
   , 45,75,1,assist_params96, 0,10,5,5,0,0,NULL,NULL,3},
  {pat632,18,8, "CC108",0,0,4,4,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 55,75,1,assist_params632, 256,5,5,0,0,0,NULL,NULL,0},
  {pat20,20,8, "EB108",-1,-3,2,1,0x2,0,-2,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 65,75,1,assist_params20, 0,0,0,5,0,0,NULL,NULL,3},
  {pat339,7,4, "CB284",0,0,2,2,0x0,1,1,
    { 0x003f3f0c, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3c, 0x00f0f0c0},
    { 0x00190000, 0x00102010, 0x00900000, 0x20100000, 0x20100000, 0x00190000, 0x00102010, 0x00900000}
   , 70,75,0,NULL, 104,0,0,5,0,0,NULL,autohelper339,0},
  {pat227,16,8, "EB1708",-1,0,2,4,0x2,0,2,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 65,75,0,NULL, 0,10,0,0,0,0,NULL,autohelper227,0},
  {pat4,21,8, "EB5",0,-4,3,1,0x2,2,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 60,75,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat576,11,4, "CC52",0,-2,3,1,0x0,1,-1,
    { 0x00f4f0f0, 0xf0f01000, 0x3f7f0000, 0x103f3f3f, 0x10f0f0f0, 0xf0f40000, 0x3f3f1000, 0x007f3f3f},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210002, 0x00200000, 0x00200000, 0x00210000, 0x00200012}
   , 40,75,1,assist_params576, 0,20,0,0,0,0,NULL,NULL,3},
  {pat993,42,8, "F102",-2,-2,3,4,0xa,0,2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1068,35,8, "EJ10",0,-3,4,3,0x8,2,-1,
    { 0x00fffefe, 0xf0f0f0b0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfeff0000, 0x3f3f3f3a, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,autohelper1068,3},
  {pat994,42,8, "F103",-2,-2,3,4,0xa,1,2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat984,54,8, "F9",-2,-3,6,2,0x9,2,-1,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1063,25,8, "EJ5",0,-2,4,2,0x2,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200058, 0x00200000, 0x00200000, 0x02210100, 0x00200000, 0x00200000, 0x01210200, 0x00200094}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat995,42,8, "F104",-3,-4,2,2,0xa,-1,-2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1055,45,8, "J19",-1,-3,3,5,0xa,0,1,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00220100, 0x00200060, 0x00200000, 0x00200000, 0x00200000, 0x01220000, 0x00200024, 0x00200000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1053,70,8, "J17",-2,-3,7,3,0x9,4,-1,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat795,23,8, "ED105",0,-1,3,4,0x2,2,3,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00259894, 0x80609010, 0x98600000, 0x19250a00, 0x90608000, 0x98250000, 0x0a251910, 0x00609858}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1052,56,8, "J16",-2,-3,4,4,0x9,2,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1051,56,8, "J15",-2,-3,4,4,0x9,1,2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1050,56,8, "J14",-2,-3,4,4,0x9,1,1,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100080, 0x00100000, 0x00100000, 0x00100200, 0x00100000, 0x00100000, 0x02100000, 0x00100008}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat986,54,8, "F11",-2,-3,6,2,0x9,2,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat987,26,8, "F12",-4,-2,1,3,0x9,-2,0,
    { 0xfff00000, 0x3f3f0f0f, 0x033fffff, 0xc0f0f0fc, 0x0f3f3fff, 0x00f0ffff, 0xf0f0c0c0, 0xff3f0300},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 65,75,1,assist_params987, 0,0,0,0,0,0,NULL,NULL,3},
  {pat801,14,8, "ED111",0,-2,2,2,0x2,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xfffc0000, 0x3f3f3f0f, 0xf0f0f0c0, 0xffff0000, 0x3f3f3f3f, 0x00fcffff},
    { 0x00210900, 0x00208050, 0x80200000, 0x08200000, 0x80200000, 0x09210000, 0x00200814, 0x00208000}
   , 75,75,0,NULL, 11,0,0,0,0,0,NULL,autohelper801,3},
  {pat988,39,8, "F13",-4,-2,1,4,0x9,-2,1,
    { 0xffff0300, 0x3f3f3fff, 0x03ffffff, 0xf0f0f0fc, 0x3f3f3fff, 0x03ffffff, 0xf0f0f0fc, 0xffff0300},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat989,36,8, "F14",-3,-4,2,1,0x9,0,-2,
    { 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1030,24,8, "F506",-1,0,2,5,0x2,0,3,
    { 0x3f3f2f3f, 0x00bcfcfc, 0xe0f0f000, 0xfffb0000, 0xfcbc0000, 0x2f3f3f00, 0x00fbffff, 0xf0f0e0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 60,75,1,assist_params1030, 0,0,0,5,0,0,NULL,NULL,0},
  {pat893,18,8, "CD84",-2,0,2,4,0x0,0,1,
    { 0x053f3f0c, 0x00f0f5f5, 0xf0f04040, 0x7f3c0000, 0xf5f00000, 0x3f3f0505, 0x003c7f7c, 0x40f0f0c0},
    { 0x00101904, 0x00508040, 0x90100000, 0x09140000, 0x80500000, 0x19100000, 0x00140904, 0x00109040}
   , 75,75,0,NULL, 2,0,0,0,0,0,NULL,NULL,0},
  {pat992,36,8, "F101",-2,-4,3,1,0xa,0,-2,
    { 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat814,13,8, "CD4",0,-1,3,3,0x0,3,1,
    { 0x003ffffc, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3c, 0x00f0fcfc},
    { 0x002a9480, 0x80606020, 0x58a00000, 0x24240a00, 0x60608000, 0x942a0000, 0x0a242420, 0x00a05808}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1002,55,8, "F202",0,0,4,10,0x2,2,7,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100004, 0x00100000, 0x00100000, 0x01100000, 0x00100000, 0x00100000, 0x00100100, 0x00100040}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1012,42,8, "F303",0,-2,5,4,0x8,2,3,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 55,75,2,assist_params1012, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1018,30,8, "F405",-2,0,1,7,0x1,1,3,
    { 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat884,15,8, "CD75",0,0,3,3,0x0,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00160800, 0x00109020, 0x80500000, 0x18100000, 0x90100000, 0x08160000, 0x00101820, 0x00508000}
   , 75,75,0,NULL, 10,0,0,0,0,0,NULL,autohelper884,0},
  {pat1001,55,8, "F201",0,-1,4,9,0x2,2,6,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00100010, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110000, 0x00100010}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1019,30,8, "F406",-2,-6,1,1,0x1,1,-3,
    { 0xfcf0f000, 0xffff0f00, 0x3f3fffff, 0xc0fcfcfc, 0x0fffffff, 0xf0f0fcfc, 0xfcfcc000, 0xff3f3f00},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140000, 0x00500000, 0x10100000, 0x00140000, 0x00101000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1008,45,8, "F208",-1,-2,7,2,0x8,4,1,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 75,75,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1021,28,8, "F408",-1,-1,2,5,0x2,0,3,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 70,75,1,assist_params1021, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1007,55,8, "F207",-1,0,3,10,0x2,1,7,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100100, 0x00100040, 0x00100000, 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100000}
   , 74,74,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1006,55,8, "F206",-1,0,3,10,0x2,1,7,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 74,74,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1004,41,8, "F204",0,-4,8,0,0x8,6,-2,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003f3f3f},
    { 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100040, 0x00100000, 0x00100000, 0x00100100}
   , 74,74,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat990,33,8, "F15",-3,-4,2,2,0x9,-1,-2,
    { 0xfcf0c0c0, 0xff3f0f03, 0x0f3fffff, 0xc0f0ffff, 0x0f3fffff, 0xc0f0fcff, 0xfff0c000, 0xff3f0f0f},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 74,74,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1003,40,8, "F203",-1,-2,6,2,0x8,5,0,
    { 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 74,74,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1000,46,8, "F109",-1,-3,3,6,0xa,1,2,
    { 0xc3ffffff, 0xfcf0f0fc, 0xffff0f00, 0x3f3fffff, 0xf0f0fcfc, 0xffffc300, 0xff3f3fff, 0x0fffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 68,73,1,assist_params1000, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1024,31,4, "F411",-1,0,3,6,0x2,0,3,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 68,73,1,assist_params1024, 0,0,0,0,0,0,NULL,NULL,0},
  {pat971,12,8, "CM1",-1,-1,2,3,0x0,1,2,
    { 0x3cff3f0f, 0x30fcfcf0, 0xf0fcf000, 0xfffc3000, 0xfcfc3000, 0x3fff3c00, 0x30fcff3f, 0xf0fcf0c0},
    { 0x00182400, 0x00906000, 0x60900000, 0x24180000, 0x60900000, 0x24180000, 0x00182400, 0x00906000}
   , 63,73,1,assist_params971, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1065,38,8, "EJ7",-2,-1,2,7,0x2,1,5,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 62,72,1,assist_params1065, 0,0,0,0,0,0,NULL,NULL,0},
  {pat885,11,8, "CD76",-1,0,2,2,0x0,1,1,
    { 0x053f3f3f, 0x00f0f4f4, 0xf0f04000, 0x7f3f0000, 0xf4f00000, 0x3f3f0500, 0x003f7f7f, 0x40f0f0f0},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 72,72,0,NULL, 32,0,0,0,0,0,NULL,autohelper885,0},
  {pat1022,42,8, "F409",-2,-1,2,7,0x1,1,4,
    { 0xffffff3f, 0xffffffff, 0xfcfcfcfc, 0xfffffc00, 0xffffff00, 0xffffffff, 0xfcffffff, 0xfcfcfcf0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 72,72,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat1009,114,8, "F209",-2,-3,3,15,0xe,0,6,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 72,72,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat445,16,8, "EC48",0,-2,3,2,0x2,2,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xff300000, 0x0f3f0f0f, 0x0030ffff},
    { 0x00102100, 0x00900040, 0x21100000, 0x00180004, 0x00900040, 0x21100000, 0x00180004, 0x00102100}
   , 52,72,1,assist_params445, 0,5,5,0,0,0,NULL,NULL,0},
  {pat977,42,8, "F2",-3,-5,1,3,0x5,-1,-2,
    { 0xffff0300, 0x3f3f3fff, 0x03ffffff, 0xf0f0f0fc, 0x3f3f3fff, 0x03ffffff, 0xf0f0f0fc, 0xffff0300},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 72,72,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat886,12,8, "CD77",0,-1,3,1,0x0,2,0,
    { 0x00b4fcfc, 0xe0f0d000, 0xfc780000, 0x1f3f2f00, 0xd0f0e000, 0xfcb40000, 0x2f3f1f00, 0x0078fcfc},
    { 0x00106000, 0x40900000, 0x24100000, 0x00180400, 0x00904000, 0x60100000, 0x04180000, 0x00102400}
   , 72,72,0,NULL, 32,0,0,0,0,0,NULL,autohelper886,0},
  {pat983,42,8, "F8",-2,-3,4,2,0x9,2,-1,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 72,72,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat985,42,8, "F10",-2,-3,4,2,0x9,2,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 72,72,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat887,12,8, "CD78",0,0,3,2,0x0,2,1,
    { 0x003d3f3f, 0x00f0f0d0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3d0000, 0x003f3f1f, 0x00f0f0f0},
    { 0x00241800, 0x00609000, 0x90600000, 0x18240000, 0x90600000, 0x18240000, 0x00241800, 0x00609000}
   , 72,72,0,NULL, 32,0,0,0,0,0,NULL,autohelper887,3},
  {pat980,45,8, "F5",-3,-5,1,3,0x5,0,-3,
    { 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 71,72,0,NULL, 0,0,0,0,-2,1,NULL,NULL,3},
  {pat979,45,8, "F4",-3,-5,1,3,0x5,0,-2,
    { 0xffffff00, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 71,71,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat811,10,8, "CD1",-1,0,1,3,0x0,0,2,
    { 0x053f3f00, 0x00f0f4f4, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0500, 0x003c7c7c, 0x40f0f000},
    { 0x00242800, 0x00a09000, 0xa0600000, 0x18280000, 0x90a00000, 0x28240000, 0x00281800, 0x0060a000}
   , 60,70,1,assist_params811, 160,0,0,0,0,0,NULL,autohelper811,3},
  {pat268,7,8, "CB213",0,-2,2,0,0x0,1,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0x003f3f0c, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0x003c3f3c},
    { 0x00102060, 0x00900000, 0x20100000, 0x001a0100, 0x00900000, 0x20100000, 0x011a0000, 0x00102024}
   , 65,70,0,NULL, 8,0,0,5,0,0,NULL,NULL,0},
  {pat264,15,4, "CB209",-1,0,1,4,0x0,0,2,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 65,70,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat255,10,4, "CB106",0,-2,4,2,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 25,70,2,assist_params255, 2,10,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat813,8,8, "CD3",-2,-1,1,1,0x0,-1,0,
    { 0xfcfcf000, 0xfcfc3c00, 0x3cfcfc00, 0xf0fcfc00, 0x3cfcfc00, 0xf0fcfc00, 0xfcfcf000, 0xfcfc3c00},
    { 0x00249000, 0x80601000, 0x18600000, 0x10240800, 0x10608000, 0x90240000, 0x08241000, 0x00601800}
   , 50,70,1,assist_params813, 8,0,0,0,0,0,NULL,autohelper813,3},
  {pat288,15,8, "CB233",0,-2,3,1,0x0,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200005, 0x00200040, 0x00200000, 0x00200000, 0x00200101}
   , 20,70,2,assist_params288, 0,0,0,5,0,0,NULL,NULL,3},
  {pat265,11,8, "CB210",0,-1,1,4,0x0,1,3,
    { 0x00ffff00, 0xf0f0f0f0, 0xfcfc0000, 0x3c3c3c00, 0xf0f0f000, 0xffff0000, 0x3c3c3c3c, 0x00fcfc00},
    { 0x00210200, 0x00200090, 0x00200000, 0x00200000, 0x00200000, 0x02210000, 0x00200018, 0x00200000}
   , 65,70,0,NULL, 32,0,0,5,0,0,NULL,NULL,3},
  {pat998,36,8, "F107",0,-3,5,2,0x6,1,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200100, 0x00200000, 0x00200000, 0x01200000, 0x00200004}
   , 70,70,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat841,7,8, "CD32",0,-1,3,0,0x0,0,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c},
    { 0x00209040, 0x80600000, 0x18200000, 0x00240900, 0x00608000, 0x90200000, 0x09240000, 0x00201804}
   , 70,70,0,NULL, 0,0,0,0,0,0,fight_ko_helper,autohelper841,3},
  {pat727,11,8, "ED37",0,-1,2,2,0x2,2,0,
    { 0x00bcffff, 0xe0f0f0c0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbc0000, 0x2f3f3f0f, 0x00f8fcfc},
    { 0x00186200, 0x40902080, 0x24900000, 0x20180400, 0x20904000, 0x62180000, 0x04182008, 0x00902400}
   , 50,70,1,assist_params727, 10,10,0,0,0,0,NULL,NULL,0},
  {pat490,7,8, "EC93",0,-2,1,2,0x2,1,0,
    { 0x003bfa00, 0xc0f0a0b0, 0xbcb00000, 0x283c0c00, 0xa0f0c000, 0xfa3b0000, 0x0c3c2838, 0x00b0bc00},
    { 0x00214000, 0x40200010, 0x04200000, 0x00200400, 0x00204000, 0x40210000, 0x04200010, 0x00200400}
   , 60,70,0,NULL, 96,5,5,0,0,0,NULL,autohelper490,3},
  {pat1046,42,8, "J10",-2,-4,4,1,0x9,2,0,
    { 0xfcfcfcfc, 0xffffff00, 0xffffffff, 0xffffffff, 0xffffffff, 0xfcfcfcfc, 0xffffff00, 0xffffffff},
    { 0x00200000, 0x00200000, 0x02200000, 0x00200008, 0x00200080, 0x00200000, 0x00200000, 0x00200200}
   , 65,70,1,assist_params1046, 0,0,0,0,0,0,NULL,NULL,3},
  {pat115,16,8, "EB628",-1,-3,2,0,0x1,0,-2,
    { 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200001, 0x00200000, 0x00200000, 0x00200000, 0x00200001}
   , 35,70,1,assist_params115, 8,5,5,5,0,0,NULL,NULL,3},
  {pat746,8,8, "ED56",-1,-2,1,1,0x2,-1,0,
    { 0x30fcf000, 0xf0fc3000, 0x3fff3000, 0x30fc3c3c, 0x30fcf0f0, 0xf0fc3000, 0x3cfc3000, 0x30ff3f00},
    { 0x00242000, 0x00a01000, 0x20600000, 0x10280000, 0x10a00000, 0x20240000, 0x00281000, 0x00602000}
   , 70,70,0,NULL, 10,0,0,0,0,0,NULL,autohelper746,3},
  {pat747,8,8, "ED57",0,-3,2,0,0x2,0,-1,
    { 0x00f0c0c0, 0xf0300000, 0x0f3c0000, 0x00303f0f, 0x0030f0c0, 0xc0f00000, 0x3f300000, 0x003c0f0f},
    { 0x00108080, 0x80100000, 0x08100000, 0x00100a00, 0x00108000, 0x80100000, 0x0a100000, 0x00100808}
   , 70,70,0,NULL, 10,0,0,0,0,0,NULL,autohelper747,0},
  {pat210,15,8, "EB1509",0,0,2,4,0x2,1,3,
    { 0x003f2f2f, 0x00b0f0f0, 0xe0f00000, 0x3f3a0000, 0xf0b00000, 0x2f3f0000, 0x003a3f3f, 0x00f0e0e0},
    { 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x40100000, 0x04100000, 0x00100400, 0x00104000}
   , 45,70,1,assist_params210, 0,10,5,5,0,0,NULL,NULL,0},
  {pat251,16,4, "CB102",0,-2,6,2,0x0,4,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 25,70,2,assist_params251, 0,0,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat192,12,8, "EB1209",0,-1,2,2,0x2,1,0,
    { 0x007effff, 0xd0f0f0e0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7e0000, 0x1f3f3f2f, 0x00f4fcfc},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 30,70,0,NULL, 42,30,10,0,0,0,NULL,autohelper192,3},
  {pat621,13,8, "CC97",0,-1,2,3,0x0,1,1,
    { 0x003fff3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3f0000, 0x0c3f3f3f, 0x00f0fcf0},
    { 0x00184000, 0x40102000, 0x04900000, 0x20100400, 0x20104000, 0x40180000, 0x04102000, 0x00900400}
   , 60,70,0,NULL, 8,5,5,0,0,0,NULL,NULL,0},
  {pat981,33,4, "F6",-3,-3,2,2,0x9,-1,-1,
    { 0xfffffcf0, 0xffffff3f, 0xffffffff, 0xfcffffff, 0xffffffff, 0xfcffffff, 0xfffffcf0, 0xffffff3f},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 70,70,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat572,9,2, "CC48",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100001, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100001, 0x00100000}
   , 10,70,2,assist_params572, 0,5,5,0,0,0,jump_out_helper,NULL,0},
  {pat607,9,8, "CC83",0,0,2,2,0x0,0,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00122021, 0x00900020, 0x20100000, 0x001a0000, 0x00900000, 0x20120000, 0x001a0021, 0x00102020}
   , 40,70,1,assist_params607, 10,10,0,0,0,0,NULL,NULL,0},
  {pat240,21,4, "CB1",-2,-1,2,6,0x0,0,4,
    { 0xffffff00, 0xfcfcfcfc, 0xfcfcfc00, 0xfcfcfc00, 0xfcfcfc00, 0xffffff00, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 25,70,2,assist_params240, 0,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat543,11,8, "CC19",0,-1,4,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00206444, 0x40a04000, 0x64200000, 0x05280500, 0x40a04000, 0x64200000, 0x05280500, 0x00206444}
   , 60,70,0,NULL, 64,5,5,0,0,0,NULL,NULL,3},
  {pat444,7,8, "EC47",0,0,1,3,0x2,0,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 50,70,1,assist_params444, 0,5,5,0,0,0,NULL,autohelper444,3},
  {pat565,9,8, "CC41",0,0,2,2,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x001a0419, 0x00106020, 0x40900000, 0x26110000, 0x60100000, 0x041a0000, 0x00112621, 0x00904090}
   , 60,70,0,NULL, 0,5,5,0,0,0,NULL,NULL,0},
  {pat787,13,8, "ED97",0,-1,4,1,0x4,1,1,
    { 0x00bcfcfc, 0xe0f0f000, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xfcbc0000, 0x2f3f3f00, 0x00f8fcfc},
    { 0x00106080, 0x40900000, 0x24100000, 0x00180600, 0x00904000, 0x60100000, 0x06180000, 0x00102408}
   , 70,70,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat97,14,8, "EB610",0,0,2,4,0x2,1,3,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140000, 0x00500000, 0x10100000, 0x00140000, 0x00101000}
   , 45,70,1,assist_params97, 0,5,5,5,0,0,NULL,NULL,0},
  {pat95,7,8, "EB608",0,0,2,2,0x2,1,1,
    { 0x003c3f3c, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0c, 0x00f0f0f0},
    { 0x00140200, 0x00101080, 0x00500000, 0x10100000, 0x10100000, 0x02140000, 0x00101008, 0x00500000}
   , 35,70,0,NULL, 10,25,5,5,0,0,NULL,NULL,0},
  {pat865,14,4, "CD56",-1,0,2,3,0x0,1,1,
    { 0x0f3f3f3f, 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0xfcf00000, 0x3f3f0f00, 0x003fffff, 0xc0f0f0f0},
    { 0x00220012, 0x00200020, 0x00200000, 0x00210000, 0x00200000, 0x00220000, 0x00210022, 0x00200010}
   , 70,70,0,NULL, 2,0,0,0,0,0,NULL,NULL,3},
  {pat74,16,8, "EB512",0,-1,3,2,0x2,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00118000, 0x80100010, 0x08100000, 0x00100800, 0x00108000, 0x80110000, 0x08100010, 0x00100800}
   , 45,70,1,assist_params74, 0,5,5,5,0,0,NULL,NULL,0},
  {pat48,9,8, "EB313",-1,0,3,2,0x4,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 55,70,0,NULL, 10,5,10,0,0,0,NULL,autohelper48,0},
  {pat368,11,8, "CB313",-2,0,1,3,0x0,0,1,
    { 0x3f3f0f00, 0x003cfffc, 0xc0f0f0c0, 0xfcf00000, 0xff3c0000, 0x0f3f3f0c, 0x00f0fcfc, 0xf0f0c000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 65,70,0,NULL, 10,0,5,0,0,0,NULL,autohelper368,0},
  {pat302,9,8, "CB247",-1,0,1,3,0x0,0,3,
    { 0x0f3f0f00, 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc, 0xc0f0c000},
    { 0x001a0500, 0x00106060, 0x40900000, 0x24100000, 0x60100000, 0x051a0000, 0x00102424, 0x00904000}
   , 65,70,0,NULL, 10,0,0,5,0,0,NULL,autohelper302,0},
  {pat303,21,8, "CB248",0,-1,3,4,0x0,2,3,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00110008, 0x00100010, 0x00100000, 0x02100000, 0x00100000, 0x00110000, 0x00100210, 0x00100080}
   , 20,70,2,assist_params303, 0,0,0,5,0,0,NULL,NULL,0},
  {pat877,11,4, "CD68",0,-2,3,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f03, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcff},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200402, 0x00204000, 0x40200000, 0x04200000, 0x00200402}
   , 60,70,1,assist_params877, 10,0,0,0,0,0,NULL,autohelper877,3},
  {pat330,15,8, "CB275",0,-1,3,3,0x0,2,2,
    { 0x003fff3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3f0000, 0x0c3f3f3f, 0x00f0fcf0},
    { 0x00180610, 0x00106080, 0x40900000, 0x24110000, 0x60100000, 0x06180000, 0x00112408, 0x00904010}
   , 45,70,1,assist_params330, 0,10,0,5,0,0,NULL,NULL,0},
  {pat350,19,8, "CB295",-1,-4,3,0,0x0,0,-2,
    { 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f00, 0x00f0ffff, 0x003cfcfc, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f},
    { 0x00200040, 0x00200000, 0x00200000, 0x00200101, 0x00200000, 0x00200000, 0x01200000, 0x00200005}
   , 55,70,1,assist_params350, 0,0,0,5,0,0,NULL,NULL,3},
  {pat353,15,8, "CB298",0,-1,4,2,0x0,3,1,
    { 0x003f3fff, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0fc},
    { 0x00101080, 0x00500000, 0x10100000, 0x00140200, 0x00500000, 0x10100000, 0x02140000, 0x00101008}
   , 45,70,2,assist_params353, 0,0,0,5,0,0,knight_helper,NULL,0},
  {pat348,14,8, "CB293",-2,0,1,3,0x0,-1,2,
    { 0x3f3f0f00, 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc, 0xf0f0c000},
    { 0x00160800, 0x00109020, 0x80500000, 0x18100000, 0x90100000, 0x08160000, 0x00101820, 0x00508000}
   , 55,70,1,assist_params348, 0,0,0,5,0,0,NULL,NULL,0},
  {pat991,36,4, "F16",-2,-2,3,3,0x9,1,1,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 68,68,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat997,36,8, "F106",-2,-2,3,3,0x6,-1,1,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100040, 0x00100000, 0x00100000, 0x00100100}
   , 68,68,1,assist_params997, 0,0,0,0,0,0,NULL,NULL,0},
  {pat354,20,8, "CB299",0,0,4,4,0x0,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00250908, 0x00209050, 0x80600000, 0x1a200000, 0x90200000, 0x09250000, 0x00201a14, 0x00608080}
   , 40,65,1,assist_params354, 0,0,0,5,0,0,NULL,NULL,3},
  {pat577,14,8, "CC53",0,0,3,3,0x0,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00202410, 0x00a04000, 0x60200000, 0x04290000, 0x40a00000, 0x24200000, 0x00290400, 0x00206010}
   , 45,65,1,assist_params577, 0,5,5,0,0,0,NULL,NULL,3},
  {pat342,18,4, "CB287",-1,0,1,6,0x0,0,4,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00220000, 0x00200020, 0x00200000, 0x00200000, 0x00200000, 0x00220000, 0x00200020, 0x00200000}
   , 25,65,1,assist_params342, 0,0,20,10,0,0,NULL,autohelper342,3},
  {pat768,13,8, "ED78",0,-2,3,1,0x6,2,-1,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f02, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfe},
    { 0x00109000, 0x80500000, 0x18100000, 0x00140800, 0x00508000, 0x90100000, 0x08140000, 0x00101800}
   , 50,65,0,NULL, 10,15,0,0,0,0,NULL,NULL,0},
  {pat335,14,8, "CB280",-1,0,2,4,0x0,0,3,
    { 0x0f3f2f0f, 0x00b0fcfc, 0xe0f0c000, 0xff380000, 0xfcb00000, 0x2f3f0f00, 0x0038ffff, 0xc0f0e0c0},
    { 0x0010040a, 0x00104000, 0x40100000, 0x06100000, 0x40100000, 0x04100000, 0x00100602, 0x00104080}
   , 50,65,1,assist_params335, 0,0,0,5,0,0,NULL,NULL,0},
  {pat52,25,8, "EB317",-1,0,3,4,0x2,1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00202000, 0x00a00000, 0x20200000, 0x00280000, 0x00a00000, 0x20200000, 0x00280000, 0x00202000}
   , 30,65,0,NULL, 0,0,30,5,0,0,NULL,NULL,3},
  {pat198,10,8, "EB1303",-1,-1,3,1,0x4,0,1,
    { 0x083cfcfc, 0xc0f0f800, 0xfcf08000, 0xbf3f0f00, 0xf8f0c000, 0xfc3c0800, 0x0f3fbf00, 0x80f0fcfc},
    { 0x0010a408, 0x80904000, 0x68100000, 0x06180800, 0x40908000, 0xa4100000, 0x08180600, 0x00106880}
   , 50,65,0,NULL, 8,5,5,5,0,0,NULL,autohelper198,0},
  {pat973,25,8, "CM3",0,-3,4,1,0x0,2,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 15,65,0,NULL, 0,50,0,0,0,0,NULL,autohelper973,0},
  {pat203,32,8, "EB1502",-1,-1,2,6,0x2,1,0,
    { 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 35,65,1,assist_params203, 0,10,0,5,0,0,NULL,NULL,3},
  {pat271,15,8, "CB216",-1,-1,2,4,0x0,0,3,
    { 0x01ffff0f, 0xf0f0f0f4, 0xfcfc0000, 0x3f3c3c00, 0xf0f0f000, 0xffff0100, 0x3c3c3f7f, 0x00fcfcc0},
    { 0x00250a00, 0x00209090, 0x80600000, 0x18200000, 0x90200000, 0x0a250000, 0x00201818, 0x00608000}
   , 50,65,2,assist_params271, 0,0,0,5,0,0,NULL,autohelper271,3},
  {pat56,15,8, "EB404",0,-1,2,3,0x2,1,2,
    { 0x00bfffff, 0xe0f0f0f0, 0xfcf80000, 0x3f3f2f00, 0xf0f0e000, 0xffbf0000, 0x2f3f3f3f, 0x00f8fcfc},
    { 0x00104000, 0x40100000, 0x04100000, 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x00100400}
   , 25,65,2,assist_params56, 2,25,0,5,0,0,jump_out_helper,NULL,0},
  {pat47,24,8, "EB312",-1,0,3,4,0x2,1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 40,65,1,assist_params47, 0,5,5,5,0,0,NULL,NULL,0},
  {pat996,30,8, "F105",-1,0,3,5,0x6,-1,3,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 65,65,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat275,9,8, "CB220",-1,0,1,2,0x0,1,1,
    { 0x2a3f3f00, 0x00f8f8f8, 0xf0f0a000, 0xbcbc0000, 0xf8f80000, 0x3f3f2a00, 0x00bcbcbc, 0xa0f0f000},
    { 0x00110200, 0x00100090, 0x00100000, 0x00100000, 0x00100000, 0x02110000, 0x00100018, 0x00100000}
   , 40,65,0,NULL, 12,20,0,5,0,0,NULL,autohelper275,0},
  {pat289,15,8, "CB234",0,-2,3,1,0x0,2,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200040, 0x00200000, 0x00200000, 0x00200100}
   , 15,65,2,assist_params289, 0,0,0,5,0,0,NULL,NULL,3},
  {pat272,14,8, "CB217",0,-4,3,1,0x0,2,0,
    { 0x0030fcf0, 0xc0f0c000, 0xff300000, 0x0c3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0c00, 0x0030ff3f},
    { 0x00104080, 0x40100000, 0x05100000, 0x00100606, 0x00104040, 0x40100000, 0x06100000, 0x0010050a}
   , 50,65,2,assist_params272, 32,0,0,5,0,0,NULL,NULL,0},
  {pat301,12,8, "CB246",-1,0,1,4,0x0,0,4,
    { 0x0f3f0f00, 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc, 0xc0f0c000},
    { 0x001a0500, 0x00106060, 0x40900000, 0x24100000, 0x60100000, 0x051a0000, 0x00102424, 0x00904000}
   , 60,65,0,NULL, 2,0,0,5,0,0,NULL,NULL,0},
  {pat197,10,8, "EB1302",-1,-1,3,1,0x4,1,1,
    { 0x0838fcfc, 0xc0f0e800, 0xfcb08000, 0xaf3f0f00, 0xe8f0c000, 0xfc380800, 0x0f3faf00, 0x80b0fcfc},
    { 0x0010a000, 0x80900000, 0x28100000, 0x00180800, 0x00908000, 0xa0100000, 0x08180000, 0x00102800}
   , 50,65,0,NULL, 10,5,5,5,0,0,sente_hane_helper,NULL,0},
  {pat296,7,8, "CB241",-1,0,1,2,0x0,0,1,
    { 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 60,65,0,NULL, 10,0,5,0,0,0,NULL,autohelper296,0},
  {pat287,15,8, "CB232",0,-2,3,1,0x0,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200040, 0x00200000, 0x00200000, 0x00200100}
   , 15,65,2,assist_params287, 0,0,0,5,0,0,NULL,autohelper287,3},
  {pat181,9,8, "EB1001",-1,0,1,3,0x2,1,1,
    { 0x043f3f00, 0x00f0f4f0, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0400, 0x003c7c3c, 0x40f0f000},
    { 0x00181000, 0x00502000, 0x10900000, 0x20140000, 0x20500000, 0x10180000, 0x00142000, 0x00901000}
   , 60,65,0,NULL, 10,0,5,0,0,0,NULL,autohelper181,0},
  {pat250,16,8, "CB101",0,0,3,6,0x0,1,4,
    { 0x003f0f0f, 0x0030f0f0, 0xc0f00000, 0x3f300000, 0xf0300000, 0x0f3f0000, 0x00303f3f, 0x00f0c0c0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 20,65,2,assist_params250, 0,0,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat248,14,8, "CB9",0,-2,4,3,0x0,2,0,
    { 0x003f3fff, 0x00f0f0f0, 0xf0f00000, 0x3f3f0300, 0xf0f00000, 0x3f3f0000, 0x033f3f3f, 0x00f0f0fc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 20,65,2,assist_params248, 0,10,0,5,0,0,jump_out_helper,NULL,0},
  {pat253,13,4, "CB104",0,-2,5,2,0x0,3,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,65,2,assist_params253, 0,0,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat455,14,8, "EC58",0,0,3,3,0x2,1,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00241218, 0x00601080, 0x10600000, 0x12250000, 0x10600000, 0x12240000, 0x00251208, 0x00601090}
   , 40,60,1,assist_params455, 10,10,0,0,0,0,NULL,NULL,3},
  {pat606,12,8, "CC82",0,-1,3,2,0x0,2,1,
    { 0x00fcfcff, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f03, 0x00fcfcfc},
    { 0x00200442, 0x00204000, 0x40200000, 0x04200100, 0x40200000, 0x04200000, 0x01200402, 0x00204004}
   , 40,60,1,assist_params606, 10,5,5,0,0,0,NULL,NULL,3},
  {pat845,13,8, "CD36",0,-1,3,2,0x0,1,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00241142, 0x00601040, 0x10600000, 0x10240100, 0x10600000, 0x11240000, 0x01241006, 0x00601004}
   , 60,60,0,NULL, 64,0,0,0,0,0,NULL,NULL,3},
  {pat570,6,8, "CC46",0,-1,2,1,0x0,2,0,
    { 0x0030f0fc, 0xc0f00000, 0x3c300000, 0x033f0f00, 0x00f0c000, 0xf0300000, 0x0f3f0300, 0x00303cfc},
    { 0x00109008, 0x80500000, 0x18100000, 0x02140800, 0x00508000, 0x90100000, 0x08140200, 0x00101880}
   , 50,60,0,NULL, 266,5,5,0,0,0,NULL,NULL,0},
  {pat329,14,8, "CB274",0,0,4,3,0x0,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100012, 0x00100000, 0x00100000, 0x00110000, 0x00100000, 0x00100000, 0x00110002, 0x00100010}
   , 35,60,1,assist_params329, 0,10,0,5,0,0,NULL,NULL,0},
  {pat357,10,8, "CB302",0,0,2,3,0x0,1,1,
    { 0x003a3f3c, 0x00f0e0e0, 0xf0b00000, 0x2f3f0000, 0xe0f00000, 0x3f3a0000, 0x003f2f2c, 0x00b0f0f0},
    { 0x00100018, 0x00100000, 0x00100000, 0x02110000, 0x00100000, 0x00100000, 0x00110200, 0x00100090}
   , 40,60,2,assist_params357, 8,0,0,5,0,0,NULL,autohelper357,0},
  {pat328,12,8, "CB273",0,0,3,3,0x0,1,2,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x00100008, 0x00100000, 0x00100000, 0x02100000, 0x00100000, 0x00100000, 0x00100200, 0x00100080}
   , 45,60,1,assist_params328, 0,0,0,5,0,0,NULL,NULL,0},
  {pat131,5,8, "EB708",0,0,2,1,0x2,2,0,
    { 0x00303c3c, 0x00f0c000, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3c300000, 0x003f0f00, 0x0030f0f0},
    { 0x00100408, 0x00104000, 0x40100000, 0x06100000, 0x40100000, 0x04100000, 0x00100600, 0x00104080}
   , 45,60,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat321,12,8, "CB266",-1,-1,1,2,0x0,-1,0,
    { 0xffffff00, 0xfcfcfcfc, 0xfcfcfc00, 0xfcfcfc00, 0xfcfcfc00, 0xffffff00, 0xfcfcfcfc, 0xfcfcfc00},
    { 0x00250900, 0x00209050, 0x80600000, 0x18200000, 0x90200000, 0x09250000, 0x00201814, 0x00608000}
   , 45,60,1,assist_params321, 0,0,0,5,0,0,NULL,NULL,3},
  {pat61,15,8, "EB409",-1,0,1,4,0x2,0,3,
    { 0x2f3f3f00, 0x00f8fcfc, 0xf0f0e000, 0xfcbc0000, 0xfcf80000, 0x3f3f2f00, 0x00bcfcfc, 0xe0f0f000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,60,0,NULL, 2,25,0,5,0,0,jump_out_helper,autohelper61,0},
  {pat579,12,8, "CC55",0,-2,3,1,0x0,2,-1,
    { 0x003cfcfc, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f00, 0x00f0ffff},
    { 0x00100400, 0x00104000, 0x42100000, 0x04100008, 0x40100080, 0x04100000, 0x00100400, 0x00104200}
   , 30,60,1,assist_params579, 0,5,5,0,0,0,NULL,NULL,0},
  {pat1023,32,8, "F410",-1,-3,5,1,0x8,3,-1,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 50,60,1,assist_params1023, 0,0,0,0,0,0,NULL,NULL,0},
  {pat149,13,8, "EB814",0,-2,3,1,0x2,1,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f03, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcff},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200401, 0x00204000, 0x40200000, 0x04200000, 0x00200401}
   , 45,60,0,NULL, 8,5,5,5,0,0,NULL,NULL,3},
  {pat419,17,8, "EC23",0,-1,4,2,0x8,2,0,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x0018040a, 0x00106000, 0x40900000, 0x26100000, 0x60100000, 0x04180000, 0x00102602, 0x00904080}
   , 50,60,0,NULL, 32,5,5,0,0,0,NULL,NULL,0},
  {pat620,16,8, "CC96",0,-1,3,2,0x0,1,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0x00fcfcfc},
    { 0x00200100, 0x00200040, 0x00200000, 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200000}
   , 30,60,1,assist_params620, 2,20,0,0,0,0,NULL,NULL,3},
  {pat124,9,8, "EB701",0,-1,2,1,0xa,2,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00181800, 0x0050a000, 0x90900000, 0x28140000, 0xa0500000, 0x18180000, 0x00142800, 0x00909000}
   , 40,60,0,NULL, 10,20,0,0,0,0,NULL,NULL,0},
  {pat117,18,8, "EB630",0,-2,2,3,0x1,1,-1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00220111, 0x00200060, 0x00200000, 0x00210000, 0x00200000, 0x01220000, 0x00210025, 0x00200010}
   , 45,60,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat113,16,8, "EB626",0,0,3,4,0x2,2,3,
    { 0x00333f3f, 0x00f0c0f0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f330000, 0x003f0f3f, 0x0030f0f0},
    { 0x00212102, 0x00a00050, 0x20200000, 0x00280000, 0x00a00000, 0x21210000, 0x00280016, 0x00202000}
   , 45,60,0,NULL, 2,5,5,5,0,0,NULL,NULL,3},
  {pat252,13,8, "CB103",0,0,3,5,0x0,1,3,
    { 0x003f0f0f, 0x0030f0f0, 0xc0f00000, 0x3f300000, 0xf0300000, 0x0f3f0000, 0x00303f3f, 0x00f0c0c0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 25,60,2,assist_params252, 0,0,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat254,10,8, "CB105",0,0,3,4,0x0,1,2,
    { 0x003f0f0f, 0x0030f0f0, 0xc0f00000, 0x3f300000, 0xf0300000, 0x0f3f0000, 0x00303f3f, 0x00f0c0c0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 25,60,2,assist_params254, 0,0,0,5,0,0,jump_out_far_helper,NULL,0},
  {pat132,9,8, "EB709",0,0,2,2,0x6,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00102400, 0x00904000, 0x60100000, 0x04180000, 0x40900000, 0x24100000, 0x00180400, 0x00106000}
   , 42,57,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat703,5,4, "ED13",-1,0,1,2,0x1,0,1,
    { 0x0c3f0c00, 0x0030fc30, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0c3f0c00, 0x0030fc30, 0xc0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 26,56,0,NULL, 8,30,0,0,0,0,NULL,NULL,0},
  {pat308,9,8, "CB253",0,-3,3,0,0x0,2,-2,
    { 0x00f0c0c0, 0xf0300000, 0x0f3c0000, 0x00303f0f, 0x0030f0c0, 0xc0f00000, 0x3f300000, 0x003c0f0f},
    { 0x00100080, 0x00100000, 0x01100000, 0x00100204, 0x00100040, 0x00100000, 0x02100000, 0x00100108}
   , 50,55,0,NULL, 0,0,0,5,0,0,NULL,autohelper308,0},
  {pat165,12,8, "EB910",0,0,2,3,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 25,55,1,assist_params165, 10,10,5,5,0,0,NULL,NULL,3},
  {pat304,15,8, "CB249",0,-1,3,2,0x0,2,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00109020, 0x80500000, 0x18100000, 0x00160800, 0x00508000, 0x90100000, 0x08160000, 0x00101820}
   , 50,55,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat306,10,8, "CB251",0,-1,2,2,0x0,2,0,
    { 0x00fffcfc, 0xf0f0f030, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcff0000, 0x3f3f3f30, 0x00fcfcfc},
    { 0x00249000, 0x80601000, 0x18600000, 0x10240800, 0x10608000, 0x90240000, 0x08241000, 0x00601800}
   , 50,55,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat143,14,8, "EB808",-1,-1,1,4,0x2,1,3,
    { 0x15bfff00, 0xe0f4f4f4, 0xfcf85000, 0x7c7c2c00, 0xf4f4e000, 0xffbf1500, 0x2c7c7c7c, 0x50f8fc00},
    { 0x00184400, 0x40106000, 0x44900000, 0x24100400, 0x60104000, 0x44180000, 0x04102400, 0x00904400}
   , 30,55,1,assist_params143, 10,0,0,5,0,0,NULL,NULL,0},
  {pat310,9,8, "CB255",-1,0,1,2,0x0,0,1,
    { 0x3f3f3e00, 0x00fcfcbc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3e3f3f00, 0x00fcfcf8, 0xf0f0f000},
    { 0x00101800, 0x00508000, 0x90100000, 0x08140000, 0x80500000, 0x18100000, 0x00140800, 0x00109000}
   , 40,55,1,assist_params310, 10,0,0,5,0,0,NULL,NULL,0},
  {pat322,11,8, "CB267",-1,-3,2,0,0x0,0,-2,
    { 0xc0f0f000, 0xfcf00000, 0x3f3f0d00, 0x003cfc7f, 0x00f0fcf4, 0xf0f0c000, 0xfc3c0000, 0x0d3f3f03},
    { 0x00101000, 0x00500000, 0x10100000, 0x00140002, 0x00500000, 0x10100000, 0x00140000, 0x00101002}
   , 25,55,1,assist_params322, 0,0,5,5,0,0,NULL,NULL,0},
  {pat324,14,8, "CB269",0,0,3,4,0x0,2,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00100200, 0x00100080, 0x00100000, 0x00100000, 0x00100000, 0x02100000, 0x00100008, 0x00100000}
   , 30,55,1,assist_params324, 0,10,0,5,0,0,NULL,NULL,0},
  {pat41,13,8, "EB306",-1,0,2,3,0x2,0,1,
    { 0x033f3f3f, 0x00f0f0fc, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0300, 0x003f3fff, 0x00f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 40,55,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat42,13,8, "EB307",0,-2,3,1,0x2,1,-1,
    { 0x0030fcfc, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0x0030ffff},
    { 0x00100400, 0x00104000, 0x42100000, 0x04100008, 0x40100080, 0x04100000, 0x00100400, 0x00104200}
   , 40,55,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat331,20,8, "CB276",0,-2,4,1,0x0,3,-1,
    { 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 50,55,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat128,9,8, "EB705",0,-1,1,3,0x2,1,0,
    { 0x003fff00, 0xc0f0f0f0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3f0000, 0x0c3c3c3c, 0x00f0fc00},
    { 0x00108000, 0x80100000, 0x08100000, 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x00100800}
   , 50,55,0,NULL, 10,5,0,0,0,0,NULL,autohelper128,0},
  {pat163,12,8, "EB908",-1,-1,2,1,0x8,1,0,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xfcfcfc00, 0xffffff00, 0xfcfcfc00, 0xfcfcfc00, 0xffffff00, 0xfcfcfcfc},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 30,55,1,assist_params163, 10,5,5,5,0,0,NULL,NULL,0},
  {pat332,10,8, "CB277",0,-2,4,1,0x0,3,0,
    { 0x0030f0fc, 0xc0f00000, 0x3c300000, 0x033f0f03, 0x00f0c000, 0xf0300000, 0x0f3f0300, 0x00303cff},
    { 0x00109000, 0x80500000, 0x18100000, 0x00140802, 0x00508000, 0x90100000, 0x08140000, 0x00101802}
   , 50,55,0,NULL, 0,0,0,5,0,0,NULL,NULL,0},
  {pat651,6,8, "CC127",0,0,1,2,0x0,1,1,
    { 0x003d3f00, 0x00f0f0d0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3d0000, 0x003c3c1c, 0x00f0f000},
    { 0x00100100, 0x00100040, 0x00100000, 0x00100000, 0x00100000, 0x01100000, 0x00100004, 0x00100000}
   , 55,55,0,NULL, 64,0,0,0,0,0,NULL,autohelper651,0},
  {pat262,7,8, "CB207",0,-2,2,0,0x0,1,-1,
    { 0x0030f0f0, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0x00303f3f},
    { 0x00100090, 0x00100000, 0x01100000, 0x00110204, 0x00100040, 0x00100000, 0x02110000, 0x00100118}
   , 50,55,0,NULL, 138,0,0,5,0,0,NULL,autohelper262,0},
  {pat291,9,8, "CB236",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00281002, 0x00602000, 0x10a00000, 0x20240000, 0x20600000, 0x10280000, 0x00242002, 0x00a01000}
   , 50,55,0,NULL, 42,0,0,5,0,0,NULL,NULL,3},
  {pat566,11,8, "CC42",0,0,2,3,0x0,2,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00212000, 0x00a00010, 0x20200000, 0x00280000, 0x00a00000, 0x20210000, 0x00280010, 0x00202000}
   , 45,55,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat196,10,8, "EB1301",-1,0,2,2,0x6,1,2,
    { 0x023f3f3f, 0x00f0f0f8, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0200, 0x003f3fbf, 0x00f0f0f0},
    { 0x00142800, 0x00909000, 0xa0500000, 0x18180000, 0x90900000, 0x28140000, 0x00181800, 0x0050a000}
   , 40,55,0,NULL, 16,5,5,5,0,0,NULL,NULL,0},
  {pat562,9,8, "CC38",0,-1,2,2,0x0,1,1,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00200149, 0x00200040, 0x00200000, 0x02200100, 0x00200000, 0x01200000, 0x01200205, 0x00200084}
   , 45,55,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat334,14,8, "CB279",0,-2,5,0,0x0,3,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f03, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3f},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210001, 0x00200000, 0x00200000, 0x00210000, 0x00200011}
   , 40,55,1,assist_params334, 8,0,0,5,0,0,NULL,NULL,3},
  {pat205,18,8, "EB1504",-2,0,2,4,0x2,1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 40,55,0,NULL, 0,10,-5,5,0,0,NULL,NULL,0},
  {pat652,5,4, "CC128",-1,0,1,2,0x0,0,1,
    { 0x013f0100, 0x00303074, 0x00f00000, 0x30300000, 0x30300000, 0x013f0100, 0x00303074, 0x00f00000},
    { 0x00110000, 0x00100010, 0x00100000, 0x00100000, 0x00100000, 0x00110000, 0x00100010, 0x00100000}
   , 55,55,0,NULL, 192,0,0,0,0,0,straight_connect_helper,NULL,0},
  {pat327,17,8, "CB272",0,0,3,4,0x0,1,3,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 38,53,1,assist_params327, 64,0,0,5,0,0,jump_out_helper,NULL,0},
  {pat300,6,8, "CB245",-2,0,0,1,0x0,-1,0,
    { 0x3c3c0000, 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000, 0xf0f00000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 8,53,2,assist_params300, 10,0,0,5,0,0,NULL,autohelper300,0},
  {pat75,15,8, "EB513",0,-1,3,2,0x2,1,1,
    { 0x00fcffff, 0xf0f0f0c0, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfffc0000, 0x3f3f3f0f, 0x00fcfcfc},
    { 0x00104200, 0x40100080, 0x04100000, 0x00100400, 0x00104000, 0x42100000, 0x04100008, 0x00100400}
   , 35,50,0,NULL, 10,5,5,5,0,0,NULL,NULL,0},
  {pat193,12,8, "EB1210",0,-1,2,2,0x2,1,0,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00250000, 0x00201010, 0x00600000, 0x10200000, 0x10200000, 0x00250000, 0x00201010, 0x00600000}
   , 30,50,0,NULL, 10,10,10,0,0,0,NULL,NULL,3},
  {pat340,10,8, "CB285",-2,0,2,2,0x0,-1,1,
    { 0x3f3c3c3c, 0x00fcff0c, 0xf0f0f0c0, 0xffff0000, 0xfffc0000, 0x3c3c3f0c, 0x00ffffc0, 0xf0f0f0f0},
    { 0x00242024, 0x00a01000, 0x20600000, 0x112a0000, 0x10a00000, 0x20240000, 0x002a1100, 0x00602060}
   , 45,50,0,NULL, 34,0,0,5,0,0,NULL,NULL,3},
  {pat972,16,8, "CM2",0,-2,4,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f03, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcff},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 35,50,1,assist_params972, 0,0,0,5,0,0,NULL,NULL,3},
  {pat126,7,8, "EB703",0,-1,2,1,0x2,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00104480, 0x40104000, 0x44100000, 0x04100600, 0x40104000, 0x44100000, 0x06100400, 0x00104408}
   , 20,50,1,assist_params126, 8,10,0,0,0,0,NULL,NULL,0},
  {pat189,10,8, "EB1206",-1,-3,1,0,0x1,0,-2,
    { 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc, 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00},
    { 0x00104000, 0x40100000, 0x06100000, 0x00100408, 0x00104080, 0x40100000, 0x04100000, 0x00100600}
   , 15,50,1,assist_params189, 0,5,5,5,0,0,NULL,NULL,0},
  {pat326,12,8, "CB271",0,0,2,3,0x0,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00192420, 0x00906010, 0x60900000, 0x241a0000, 0x60900000, 0x24190000, 0x001a2410, 0x00906020}
   , 35,50,1,assist_params326, 2,0,0,5,0,0,NULL,NULL,0},
  {pat1070,36,8, "EJ12",0,-2,5,3,0x8,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 50,50,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat169,10,8, "EB914",0,0,2,3,0x2,1,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 25,50,1,assist_params169, 10,10,0,5,0,0,NULL,NULL,3},
  {pat168,10,8, "EB913",0,0,2,3,0x2,1,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 25,50,1,assist_params168, 10,10,0,5,0,0,NULL,NULL,3},
  {pat600,7,8, "CC76",0,-1,2,2,0x0,1,0,
    { 0x003cff0c, 0xc0f0f0c0, 0xfcf00000, 0x3f3c0c00, 0xf0f0c000, 0xff3c0000, 0x0c3c3f0c, 0x00f0fcc0},
    { 0x00244100, 0x40201040, 0x04600000, 0x10200400, 0x10204000, 0x41240000, 0x04201004, 0x00600400}
   , 30,50,1,assist_params600, 42,10,0,0,0,0,NULL,NULL,3},
  {pat8,19,8, "EB9",0,-1,3,3,0x2,2,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00285000, 0x40602000, 0x14a00000, 0x20240400, 0x20604000, 0x50280000, 0x04242000, 0x00a01400}
   , 30,45,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat707,11,8, "ED17",0,0,2,3,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00241800, 0x00609000, 0x90600000, 0x18240000, 0x90600000, 0x18240000, 0x00241800, 0x00609000}
   , 45,45,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat40,20,8, "EB305",0,0,3,4,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 30,45,0,NULL, 0,5,5,5,0,0,NULL,NULL,3},
  {pat818,17,8, "CD9",0,-1,3,3,0x0,2,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00110642, 0x00104090, 0x40100000, 0x04100100, 0x40100000, 0x06110000, 0x0110041a, 0x00104004}
   , 45,45,0,NULL, 0,0,0,0,0,0,NULL,NULL,0},
  {pat311,9,8, "CB256",-1,0,1,2,0x0,0,1,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00101a00, 0x00508080, 0x90100000, 0x08140000, 0x80500000, 0x1a100000, 0x00140808, 0x00109000}
   , 30,45,1,assist_params311, 10,0,0,5,0,0,NULL,NULL,0},
  {pat39,20,8, "EB304",0,0,3,4,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,45,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat1069,30,8, "EJ11",0,-2,4,3,0x8,2,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 45,45,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat164,9,8, "EB909",0,0,2,2,0x2,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00181000, 0x00502000, 0x10900000, 0x20140000, 0x20500000, 0x10180000, 0x00142000, 0x00901000}
   , 30,45,0,NULL, 8,5,5,5,0,0,NULL,NULL,0},
  {pat356,10,8, "CB301",0,0,2,3,0x0,1,1,
    { 0x003a3f3c, 0x00f0e0e0, 0xf0b00000, 0x2f3f0000, 0xe0f00000, 0x3f3a0000, 0x003f2f2c, 0x00b0f0f0},
    { 0x00100018, 0x00100000, 0x00100000, 0x02110000, 0x00100000, 0x00100000, 0x00110200, 0x00100090}
   , 25,45,2,assist_params356, 8,0,0,5,0,0,NULL,NULL,0},
  {pat82,12,8, "EB520",-2,0,1,2,0x2,-1,1,
    { 0x1f3f3f00, 0x00f6fffe, 0xf0f0d0e0, 0xfc7c0000, 0xfff60000, 0x3f3f1f2e, 0x007cfcfc, 0xd0f0f000},
    { 0x00242000, 0x00a01000, 0x20600000, 0x10280000, 0x10a00000, 0x20240000, 0x00281000, 0x00602000}
   , 25,45,0,NULL, 10,10,5,5,0,0,NULL,NULL,3},
  {pat754,17,8, "ED64",0,-3,2,2,0x2,1,0,
    { 0x00beffff, 0xe0f0f0e0, 0xfffa0000, 0x3f3f2f2f, 0xf0f0e0e0, 0xffbe0000, 0x2f3f3f2f, 0x00faffff},
    { 0x00140020, 0x00101000, 0x00500000, 0x10120000, 0x10100000, 0x00140000, 0x00121000, 0x00500020}
   , 45,45,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat360,9,8, "CB305",-1,0,1,2,0x0,0,1,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00101a00, 0x00508080, 0x90100000, 0x08140000, 0x80500000, 0x1a100000, 0x00140808, 0x00109000}
   , 30,44,1,assist_params360, 10,0,0,5,0,0,NULL,NULL,0},
  {pat1106,15,8, "S4b",0,0,2,4,0xa,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00150108, 0x00101050, 0x00500000, 0x12100000, 0x10100000, 0x01150000, 0x00101214, 0x00500080}
   , 40,40,0,NULL, 2,0,0,0,0,0,NULL,autohelper1106,0},
  {pat414,8,8, "EC18",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00212000, 0x00a00010, 0x20200000, 0x00280000, 0x00a00000, 0x20210000, 0x00280010, 0x00202000}
   , 30,40,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat861,4,8, "CD52",0,0,2,1,0x0,1,0,
    { 0x00303c30, 0x00f0c000, 0xf0300000, 0x0c3f0000, 0xc0f00000, 0x3c300000, 0x003f0c00, 0x0030f030},
    { 0x00100810, 0x00108000, 0x80100000, 0x08110000, 0x80100000, 0x08100000, 0x00110800, 0x00108010}
   , 40,40,0,NULL, 2,0,0,0,0,0,NULL,autohelper861,0},
  {pat214,8,8, "EB1604",-1,0,1,3,0x2,-1,1,
    { 0x0f3f3f00, 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc, 0xc0f0f000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 15,40,1,assist_params214, 138,5,5,5,0,0,NULL,NULL,3},
  {pat1105,15,8, "S4",0,0,2,4,0xa,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00150000, 0x00101010, 0x00500000, 0x10100000, 0x10100000, 0x00150000, 0x00101010, 0x00500000}
   , 40,40,0,NULL, 2,0,0,0,0,0,NULL,autohelper1105,0},
  {pat1104,15,8, "S3",0,0,2,4,0xa,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x002a0000, 0x00202020, 0x00a00000, 0x20200000, 0x20200000, 0x002a0000, 0x00202020, 0x00a00000}
   , 40,40,0,NULL, 9,0,0,0,0,0,NULL,autohelper1104,3},
  {pat580,11,8, "CC56",-1,-2,1,1,0x0,0,-1,
    { 0xfcf0fc00, 0xfcfccc00, 0xff3fff00, 0xccfcfcfc, 0xccfcfcfc, 0xfcf0fc00, 0xfcfccc00, 0xff3fff00},
    { 0x00106800, 0x40908000, 0xa4100000, 0x08180400, 0x80904000, 0x68100000, 0x04180800, 0x0010a400}
   , 20,40,1,assist_params580, 138,5,5,0,0,0,NULL,NULL,0},
  {pat840,10,8, "CD31",0,-2,3,1,0x0,1,-1,
    { 0x00f0fcf0, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0f, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0x003cff3f},
    { 0x00200820, 0x00208000, 0x80200000, 0x08220002, 0x80200000, 0x08200000, 0x00220800, 0x00208022}
   , 40,40,0,NULL, 16,0,0,0,0,0,NULL,NULL,3},
  {pat463,9,8, "EC66",0,-1,1,3,0x2,0,2,
    { 0x003fbf00, 0x80f0f0f0, 0xf8f00000, 0x3c3c0800, 0xf0f08000, 0xbf3f0000, 0x083c3c3c, 0x00f0f800},
    { 0x00180400, 0x00106000, 0x40900000, 0x24100000, 0x60100000, 0x04180000, 0x00102400, 0x00904000}
   , 25,40,1,assist_params463, 64,5,5,0,0,0,NULL,NULL,0},
  {pat982,22,4, "F7",-1,-3,3,1,0xa,1,-1,
    { 0xc0f0fcfc, 0xfcf0c000, 0xff3f0f00, 0x0f3fffff, 0xc0f0fcfc, 0xfcf0c000, 0xff3f0f00, 0x0f3fffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 30,40,1,assist_params982, 0,0,0,0,0,0,NULL,NULL,3},
  {pat349,11,8, "CB294",0,-2,2,1,0x0,1,-1,
    { 0x00fcfcf0, 0xf0f0f000, 0xffff0000, 0x3c3f3f3f, 0xf0f0f0f0, 0xfcfc0000, 0x3f3f3c00, 0x00ffff3f},
    { 0x00100480, 0x00104000, 0x40100000, 0x04100200, 0x40100000, 0x04100000, 0x02100400, 0x00104008}
   , 25,40,1,assist_params349, 10,0,0,5,0,0,NULL,NULL,0},
  {pat571,6,8, "CC47",0,-1,2,1,0x0,2,0,
    { 0x0030f0fc, 0xc0f00000, 0x3c300000, 0x033f0f00, 0x00f0c000, 0xf0300000, 0x0f3f0300, 0x00303cfc},
    { 0x00109008, 0x80500000, 0x18100000, 0x02140800, 0x00508000, 0x90100000, 0x08140200, 0x00101880}
   , 30,40,0,NULL, 10,5,5,0,0,0,NULL,NULL,0},
  {pat615,10,8, "CC91",0,-1,2,2,0x0,2,0,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00140280, 0x00101080, 0x00500000, 0x10100200, 0x10100000, 0x02140000, 0x02101008, 0x00500008}
   , 20,40,1,assist_params615, 10,5,5,0,0,0,NULL,NULL,0},
  {pat1111,35,2, "HH1",-2,0,2,6,0x0,0,3,
    { 0x3f3f3f3f, 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0xffff0000, 0x3f3f3f3f, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 40,40,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat1112,42,4, "HH2",-3,0,2,6,0x0,-1,3,
    { 0x3f3f3f3f, 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0xffff0000, 0x3f3f3f3f, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 40,40,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat742,10,8, "ED52",0,0,3,2,0x8,2,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00251104, 0x00601050, 0x10600000, 0x11240000, 0x10600000, 0x11250000, 0x00241114, 0x00601040}
   , 7,37,0,NULL, 136,30,0,0,0,0,NULL,NULL,3},
  {pat279,11,8, "CB224",0,-1,2,2,0x0,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x0014a000, 0x80901000, 0x28500000, 0x10180800, 0x10908000, 0xa0140000, 0x08181000, 0x00502800}
   , 30,35,0,NULL, 10,0,0,5,0,0,NULL,NULL,0},
  {pat142,12,8, "EB807",0,-3,2,1,0x2,2,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfff00000, 0x3f3f0f0f, 0xf0f0c0c0, 0xfc3c0000, 0x0f3f3f00, 0x00f0ffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 25,35,1,assist_params142, 10,0,0,5,0,0,NULL,NULL,3},
  {pat137,13,8, "EB802",0,-2,2,2,0x2,2,1,
    { 0x0035ffff, 0xc0f0d0d0, 0xff700000, 0x1f3f0f0f, 0xd0f0c0c0, 0xff350000, 0x0f3f1f1f, 0x0070ffff},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200040, 0x00200000, 0x00200000, 0x00200100}
   , 25,35,1,assist_params137, 10,0,5,0,0,0,NULL,NULL,3},
  {pat483,5,8, "EC86",0,-1,1,1,0x2,1,0,
    { 0x003cf400, 0xc0f07000, 0x7cf00000, 0x343c0c00, 0x70f0c000, 0xf43c0000, 0x0c3c3400, 0x00f07c00},
    { 0x00188000, 0x80102000, 0x08900000, 0x20100800, 0x20108000, 0x80180000, 0x08102000, 0x00900800}
   , 25,35,0,NULL, 256,5,5,0,0,0,NULL,NULL,0},
  {pat482,8,8, "EC85",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00212000, 0x00a00010, 0x20200000, 0x00280000, 0x00a00000, 0x20210000, 0x00280010, 0x00202000}
   , 25,35,0,NULL, 256,5,5,0,0,0,NULL,NULL,3},
  {pat162,9,8, "EB907",0,-1,2,1,0x8,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 20,35,0,NULL, 8,5,5,5,0,0,NULL,NULL,0},
  {pat480,8,8, "EC83",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00212000, 0x00a00010, 0x20200000, 0x00280000, 0x00a00000, 0x20210000, 0x00280010, 0x00202000}
   , 25,35,0,NULL, 256,5,5,0,0,0,NULL,NULL,3},
  {pat485,6,4, "EC88",0,0,1,2,0x2,1,1,
    { 0x003f1d00, 0x0070f070, 0xd0f00000, 0x3c340000, 0xf0700000, 0x1d3f0000, 0x00343c34, 0x00f0d000},
    { 0x00260000, 0x00201020, 0x00600000, 0x10200000, 0x10200000, 0x00260000, 0x00201020, 0x00600000}
   , 25,35,0,NULL, 256,5,5,0,0,0,NULL,autohelper485,3},
  {pat273,10,8, "CB218",-1,0,2,2,0x0,1,1,
    { 0x2a3f3f08, 0x00f8f8f8, 0xf0f0a000, 0xbebc0000, 0xf8f80000, 0x3f3f2a00, 0x00bcbebc, 0xa0f0f080},
    { 0x00110200, 0x00100090, 0x00100000, 0x00100000, 0x00100000, 0x02110000, 0x00100018, 0x00100000}
   , 20,35,0,NULL, 160,10,0,5,0,0,NULL,autohelper273,0},
  {pat696,13,8, "ED6",0,-1,3,2,0x2,1,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00204540, 0x40204040, 0x44200000, 0x04200500, 0x40204000, 0x45200000, 0x05200404, 0x00204404}
   , 35,35,0,NULL, 8,0,0,0,0,0,NULL,NULL,3},
  {pat563,9,8, "CC39",0,-1,2,2,0x0,2,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00202549, 0x00a04040, 0x60200000, 0x06280100, 0x40a00000, 0x25200000, 0x01280605, 0x00206084}
   , 25,35,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat925,12,8, "EE402",0,-2,2,1,0xa,2,-1,
    { 0x007cfcfc, 0xd0f0f000, 0xfff50000, 0x3f3f1f1f, 0xf0f0d0d0, 0xfc7c0000, 0x1f3f3f00, 0x00f5ffff},
    { 0x00249000, 0x80601000, 0x18600000, 0x10240800, 0x10608000, 0x90240000, 0x08241000, 0x00601800}
   , 15,35,0,NULL, 10,20,0,0,0,0,NULL,NULL,3},
  {pat564,9,8, "CC40",0,-1,2,2,0x0,1,0,
    { 0x0030ffff, 0xc0f0c0c0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xff300000, 0x0f3f0f0f, 0x0030fcfc},
    { 0x00200569, 0x00204040, 0x40200000, 0x06220100, 0x40200000, 0x05200000, 0x01220605, 0x002040a4}
   , 25,35,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat487,4,8, "EC90",0,-1,1,1,0x2,1,0,
    { 0x0030fc00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0xc0f0c000, 0xfc300000, 0x0c3c0c00, 0x0030fc00},
    { 0x00108800, 0x80108000, 0x88100000, 0x08100800, 0x80108000, 0x88100000, 0x08100800, 0x00108800}
   , 25,35,0,NULL, 256,5,5,0,0,0,NULL,NULL,0},
  {pat182,9,8, "EB1002",-1,0,1,3,0x2,1,1,
    { 0x043f3f00, 0x00f0f4f0, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0400, 0x003c7c3c, 0x40f0f000},
    { 0x00181000, 0x00502000, 0x10900000, 0x20140000, 0x20500000, 0x10180000, 0x00142000, 0x00901000}
   , 30,35,0,NULL, 10,0,5,0,0,0,NULL,autohelper182,0},
  {pat280,11,8, "CB225",0,-1,2,2,0x0,1,1,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00285000, 0x40602000, 0x14a00000, 0x20240400, 0x20604000, 0x50280000, 0x04242000, 0x00a01400}
   , 30,35,0,NULL, 0,0,0,5,0,0,NULL,NULL,3},
  {pat309,15,8, "CB254",0,-2,3,1,0x0,1,-1,
    { 0x00f0fcfc, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0x003fffff},
    { 0x00100008, 0x00100000, 0x00100000, 0x02100000, 0x00100000, 0x00100000, 0x00100200, 0x00100080}
   , 20,35,1,assist_params309, 0,0,0,5,0,0,NULL,NULL,0},
  {pat749,11,8, "ED59",0,-1,2,2,0x2,1,2,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00296410, 0x40a06010, 0x64a00000, 0x24290400, 0x60a04000, 0x64290000, 0x04292410, 0x00a06410}
   , 35,35,0,NULL, 128,0,0,0,0,0,NULL,autohelper749,3},
  {pat1113,30,4, "HH3",-3,-3,2,3,0x2,-1,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,30,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat560,7,8, "CC36",-1,0,1,2,0x0,0,1,
    { 0x043f3f00, 0x00f0f4f0, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0400, 0x003c7c3c, 0x40f0f000},
    { 0x00102100, 0x00900040, 0x20100000, 0x00180000, 0x00900000, 0x21100000, 0x00180004, 0x00102000}
   , 10,30,1,assist_params560, 138,5,5,0,0,0,NULL,autohelper560,0},
  {pat1115,30,4, "HH5",-3,-2,2,2,0x2,-2,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,30,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat476,6,8, "EC79",0,0,1,2,0x1,1,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00102100, 0x00900040, 0x20100000, 0x00180000, 0x00900000, 0x21100000, 0x00180004, 0x00102000}
   , 10,30,1,assist_params476, 10,5,5,0,0,0,NULL,NULL,0},
  {pat561,7,8, "CC37",-1,0,1,2,0x0,1,1,
    { 0x043f3f00, 0x00f0f4f0, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0400, 0x003c7c3c, 0x40f0f000},
    { 0x00102100, 0x00900040, 0x20100000, 0x00180000, 0x00900000, 0x21100000, 0x00180004, 0x00102000}
   , 10,30,1,assist_params561, 138,5,5,0,0,0,NULL,autohelper561,0},
  {pat460,8,4, "EC63",0,-1,1,3,0x2,1,1,
    { 0x003fbf00, 0x80f0f0f0, 0xf8f00000, 0x3c3c0800, 0xf0f08000, 0xbf3f0000, 0x083c3c3c, 0x00f0f800},
    { 0x00190000, 0x00102010, 0x00900000, 0x20100000, 0x20100000, 0x00190000, 0x00102010, 0x00900000}
   , 20,30,0,NULL, 96,5,5,0,0,0,NULL,autohelper460,0},
  {pat93,11,8, "EB606",0,-1,2,2,0x2,1,0,
    { 0x003fffff, 0xc0f0f0f0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3f0000, 0x0f3f3f3f, 0x00f0fcfc},
    { 0x00158000, 0x80101010, 0x08500000, 0x10100800, 0x10108000, 0x80150000, 0x08101010, 0x00500800}
   , 15,30,0,NULL, 0,5,5,5,0,0,NULL,NULL,0},
  {pat409,8,8, "EC13",0,0,3,1,0x8,1,0,
    { 0x003c383c, 0x00f0b000, 0xb0f00000, 0x3b3f0000, 0xb0f00000, 0x383c0000, 0x003f3b00, 0x00f0b0f0},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 20,30,0,NULL, 0,5,5,0,0,0,NULL,NULL,3},
  {pat940,6,8, "EE504",-1,-2,0,0,0x2,0,-2,
    { 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f0f0, 0x003c3c3c, 0x00f0f000, 0xf0f00000, 0x3f3f0000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 0,30,2,assist_params940, 2,0,0,0,0,0,NULL,NULL,0},
  {pat1114,30,4, "HH4",-2,-2,3,2,0x2,1,0,
    { 0xffffffff, 0xfffeffff, 0xffffffef, 0xffffffff, 0xfffeffff, 0xffffffef, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,30,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat1116,30,8, "HH6",-2,-2,2,3,0xa,0,2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 30,30,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat660,8,8, "CC136",0,-2,3,1,0x0,2,0,
    { 0x0030fcf0, 0xc0f0c000, 0xff300000, 0x0c3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0c00, 0x0030ff3f},
    { 0x00201800, 0x00608000, 0x91200000, 0x08240005, 0x80600040, 0x18200000, 0x00240800, 0x00209101}
   , 30,30,0,NULL, 168,0,0,0,0,0,NULL,autohelper660,3},
  {pat924,8,8, "EE401",0,-1,2,1,0xa,2,0,
    { 0x00f0fcf4, 0xf0f0c000, 0xfc3c0000, 0x0d3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0d00, 0x003cfc7c},
    { 0x00101800, 0x00508000, 0x90100000, 0x08140000, 0x80500000, 0x18100000, 0x00140800, 0x00109000}
   , 5,27,0,NULL, 8,20,0,0,0,2,NULL,NULL,0},
  {pat297,6,8, "CB242",-2,0,0,1,0x0,-1,1,
    { 0x3c3c0000, 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000, 0xf0f00000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 10,25,1,assist_params297, 10,0,0,5,0,0,NULL,autohelper297,0},
  {pat298,6,8, "CB243",-2,0,0,1,0x0,-1,1,
    { 0x3c3c0000, 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000, 0xf0f00000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 10,25,1,assist_params298, 10,0,0,5,0,0,NULL,autohelper298,0},
  {pat755,14,8, "ED65",0,-3,2,1,0x2,1,0,
    { 0x00bcfcfc, 0xe0f0f000, 0xfffa0000, 0x3f3f2f2f, 0xf0f0e0e0, 0xfcbc0000, 0x2f3f3f00, 0x00faffff},
    { 0x00100020, 0x00100000, 0x00100000, 0x00120000, 0x00100000, 0x00100000, 0x00120000, 0x00100020}
   , 25,25,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat299,6,8, "CB244",-2,0,0,1,0x0,-1,0,
    { 0x3c3c0000, 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000, 0xf0f00000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 8,23,1,assist_params299, 10,0,0,5,0,0,NULL,NULL,0},
  {pat1107,14,8, "S5",0,0,3,3,0xa,2,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00280a00, 0x0020a080, 0x80a00000, 0x28200000, 0xa0200000, 0x0a280000, 0x00202808, 0x00a08000}
   , 20,20,0,NULL, 9,0,0,0,0,0,NULL,autohelper1107,3},
  {pat462,8,8, "EC65",0,-1,1,3,0x2,1,1,
    { 0x003fbf00, 0x80f0f0f0, 0xf8f00000, 0x3c3c0800, 0xf0f08000, 0xbf3f0000, 0x083c3c3c, 0x00f0f800},
    { 0x00190000, 0x00102010, 0x00900000, 0x20100000, 0x20100000, 0x00190000, 0x00102010, 0x00900000}
   , 20,20,0,NULL, 10,0,0,0,0,0,connect_under_helper,autohelper462,0},
  {pat705,9,8, "ED15",0,-1,2,2,0x5,0,1,
    { 0x00ffff30, 0xf0f0f0f0, 0xfcfc0000, 0x3c3f3c00, 0xf0f0f000, 0xffff0000, 0x3c3f3c3c, 0x00fcfc30},
    { 0x00209a10, 0x80608080, 0x98200000, 0x08250800, 0x80608000, 0x9a200000, 0x08250808, 0x00209810}
   , 20,20,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat920,8,8, "EE203",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x001a0400, 0x00106020, 0x40900000, 0x24100000, 0x60100000, 0x041a0000, 0x00102420, 0x00904000}
   , 20,20,0,NULL, 10,0,0,0,0,0,NULL,autohelper920,0},
  {pat1108,14,8, "S6",0,0,3,3,0xa,2,1,
    { 0x003c3f3f, 0x00f0f0c0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3f0f, 0x00f0f0f0},
    { 0x00140500, 0x00105040, 0x40500000, 0x14100000, 0x50100000, 0x05140000, 0x00101404, 0x00504000}
   , 20,20,0,NULL, 2,0,0,0,0,0,NULL,autohelper1108,0},
  {pat1117,30,8, "HH7",-5,-2,0,2,0x0,-3,0,
    { 0xffba0000, 0x2f3f2f2f, 0x00baffff, 0xe0f0e0e0, 0x2f3f2f2f, 0x00baffff, 0xe0f0e0e0, 0xffba0000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 20,20,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat290,8,8, "CB235",0,0,2,3,0x0,0,2,
    { 0x003f0f03, 0x0030f0f0, 0xc0f00000, 0x3c300000, 0xf0300000, 0x0f3f0000, 0x00303c3f, 0x00f0c000},
    { 0x00280401, 0x00206000, 0x40a00000, 0x24200000, 0x60200000, 0x04280000, 0x00202401, 0x00a04000}
   , 3,18,1,assist_params290, 0,0,0,5,0,0,NULL,NULL,3},
  {pat416,7,8, "EC20",0,0,1,3,0x2,1,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00262000, 0x00a01020, 0x20600000, 0x10280000, 0x10a00000, 0x20260000, 0x00281020, 0x00602000}
   , 6,16,0,NULL, 10,5,5,0,0,0,NULL,NULL,3},
  {pat295,6,8, "CB240",-1,0,1,2,0x0,0,1,
    { 0x3c3e0c00, 0x003cfc20, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0c3e3c00, 0x00f0fc20, 0xf0f0c000},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 10,15,0,NULL, 10,0,0,5,0,0,NULL,NULL,0},
  {pat975,13,8, "CM5",0,-1,4,2,0x0,3,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 0,15,0,NULL, 32,15,0,0,0,0,NULL,NULL,3},
  {pat285,9,8, "CB230",-1,0,1,2,0x0,0,2,
    { 0x2a3f3f00, 0x00f8f8f8, 0xf0f0a000, 0xbcbc0000, 0xf8f80000, 0x3f3f2a00, 0x00bcbcbc, 0xa0f0f000},
    { 0x00100600, 0x00104080, 0x40100000, 0x04100000, 0x40100000, 0x06100000, 0x00100408, 0x00104000}
   , 10,15,0,NULL, 10,0,0,5,0,0,NULL,NULL,0},
  {pat294,8,8, "CB239",0,0,2,3,0x0,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 10,15,0,NULL, 10,0,0,5,0,0,NULL,NULL,0},
  {pat816,7,4, "CD7",0,-1,2,1,0x0,2,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00208800, 0x80208000, 0x88200000, 0x08200800, 0x80208000, 0x88200000, 0x08200800, 0x00208800}
   , 10,15,1,assist_params816, 16,0,0,0,0,0,NULL,NULL,3},
  {pat817,6,4, "CD8",0,0,1,2,0x0,1,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00190000, 0x00102010, 0x00900000, 0x20100000, 0x20100000, 0x00190000, 0x00102010, 0x00900000}
   , 15,15,0,NULL, 20,0,0,0,0,0,NULL,autohelper817,0},
  {pat750,9,8, "ED60",0,-1,3,1,0x2,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00204444, 0x40204000, 0x44200000, 0x05200500, 0x40204000, 0x44200000, 0x05200500, 0x00204444}
   , 5,15,0,NULL, 10,10,0,0,0,0,NULL,NULL,3},
  {pat1102,13,4, "S1",0,0,3,3,0xa,2,1,
    { 0x003c3f2f, 0x00f0f0c0, 0xf0f00000, 0x3f3e0000, 0xf0f00000, 0x3f3c0000, 0x003e3f0f, 0x00f0f0e0},
    { 0x00280a02, 0x0020a080, 0x80a00000, 0x28200000, 0xa0200000, 0x0a280000, 0x0020280a, 0x00a08000}
   , 15,15,0,NULL, 9,0,0,0,0,0,NULL,autohelper1102,3},
  {pat1103,13,8, "S2",0,0,3,3,0xa,2,0,
    { 0x003c3f37, 0x00f0f0c0, 0xf0f00000, 0x3d3f0000, 0xf0f00000, 0x3f3c0000, 0x003f3d0f, 0x00f0f070},
    { 0x00140501, 0x00105040, 0x40500000, 0x14100000, 0x50100000, 0x05140000, 0x00101405, 0x00504000}
   , 15,15,0,NULL, 2,0,0,0,0,0,NULL,autohelper1103,0},
  {pat915,10,8, "EE102",0,-3,2,1,0x2,2,-2,
    { 0x0030fcf0, 0xc0f0c000, 0xff300000, 0x0c3f0f0f, 0xc0f0c0c0, 0xfc300000, 0x0f3f0c00, 0x0030ff3f},
    { 0x00208000, 0x80200000, 0x0a200000, 0x00200808, 0x00208080, 0x80200000, 0x08200000, 0x00200a00}
   , 10,12,0,NULL, 10,0,0,0,0,2,NULL,autohelper915,3},
  {pat923,4,8, "EE302",0,0,1,1,0x2,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00102000, 0x00900000, 0x20100000, 0x00180000, 0x00900000, 0x20100000, 0x00180000, 0x00102000}
   , 10,10,0,NULL, 10,0,0,0,0,0,NULL,autohelper923,0},
  {pat760,8,8, "ED70",0,-1,1,2,0x2,1,1,
    { 0x007f7f00, 0x50f0f0f0, 0xf4f40000, 0x3c3c1400, 0xf0f05000, 0x7f7f0000, 0x143c3c3c, 0x00f4f400},
    { 0x00290200, 0x00202090, 0x00a00000, 0x20200000, 0x20200000, 0x02290000, 0x00202018, 0x00a00000}
   , 10,10,0,NULL, 11,0,0,0,0,0,NULL,autohelper760,3},
  {pat1118,25,8, "HH8",-1,0,3,4,0x2,1,2,
    { 0x3f3f2f3f, 0x00bcfcfc, 0xe0f0f000, 0xfffb0000, 0xfcbc0000, 0x2f3f3f00, 0x00fbffff, 0xf0f0e0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 10,10,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat1119,30,8, "HH9",-3,0,2,4,0x2,-1,2,
    { 0x2f3f3f3f, 0x00fbffff, 0xf0f0e0f0, 0xffbf0000, 0xfffb0000, 0x3f3f2f3f, 0x00bfffff, 0xe0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 10,10,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat699,18,8, "ED9",-1,0,2,5,0x1,0,4,
    { 0x3f3f0f03, 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcff, 0xf0f0c000},
    { 0x00250902, 0x00209050, 0x80600000, 0x18200000, 0x90200000, 0x09250000, 0x00201816, 0x00608000}
   , 9,9,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat948,11,8, "EE1001",-1,0,1,3,0x1,1,2,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00281400, 0x00606000, 0x50a00000, 0x24240000, 0x60600000, 0x14280000, 0x00242400, 0x00a05000}
   , 5,7,0,NULL, 10,0,0,0,0,2,NULL,NULL,3},
  {pat947,7,8, "EE902",-1,0,1,2,0x2,0,1,
    { 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000, 0xfc3c0000, 0xfcf00000, 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000},
    { 0x00112200, 0x00900090, 0x20100000, 0x00180000, 0x00900000, 0x22110000, 0x00180018, 0x00102000}
   , 5,7,0,NULL, 10,0,0,0,0,2,NULL,autohelper947,0},
  {pat949,12,8, "EE1002",0,-2,3,1,0x2,1,0,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f03, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcff},
    { 0x00208440, 0x80204000, 0x48200000, 0x04200901, 0x40208000, 0x84200000, 0x09200400, 0x00204805}
   , 5,7,0,NULL, 10,0,0,0,0,2,NULL,autohelper949,3},
  {pat966,6,8, "CE17",0,0,2,1,0x0,1,1,
    { 0x003c3c1c, 0x00f0f000, 0xf0f00000, 0x3f3d0000, 0xf0f00000, 0x3c3c0000, 0x003d3f00, 0x00f0f0d0},
    { 0x00240008, 0x00201000, 0x00600000, 0x12200000, 0x10200000, 0x00240000, 0x00201200, 0x00600080}
   , 5,7,0,NULL, 10,0,0,0,0,2,NULL,autohelper966,3},
  {pat941,8,8, "EE801",0,-1,2,1,0x8,1,0,
    { 0x00f0fcf4, 0xf0f0c000, 0xfc3c0000, 0x0d3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0d00, 0x003cfc7c},
    { 0x00100800, 0x00108000, 0x80100000, 0x08100000, 0x80100000, 0x08100000, 0x00100800, 0x00108000}
   , 6,6,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat943,10,8, "EE803",-1,0,1,3,0x2,0,2,
    { 0x053f3f00, 0x00f0f4f4, 0xf0f04000, 0x7c3c0000, 0xf4f00000, 0x3f3f0500, 0x003c7c7c, 0x40f0f000},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 5,6,0,NULL, 10,0,0,0,0,1,NULL,autohelper943,3},
  {pat965,6,8, "CE16",0,-1,2,1,0x0,1,0,
    { 0x00f0fcc0, 0xf0f0c000, 0xfc3c0000, 0x0c3c3f00, 0xc0f0f000, 0xfcf00000, 0x3f3c0c00, 0x003cfc0c},
    { 0x00200480, 0x00204000, 0x40200000, 0x04200200, 0x40200000, 0x04200000, 0x02200400, 0x00204008}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper965,3},
  {pat954,8,8, "CE5",0,0,2,2,0x0,1,0,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x002a0601, 0x002060a0, 0x40a00000, 0x24200000, 0x60200000, 0x062a0000, 0x00202429, 0x00a04000}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper954,3},
  {pat953,6,8, "CE4",0,-2,2,0,0x0,1,-1,
    { 0x0030f0f0, 0xc0f00000, 0x3f300000, 0x003f0f0c, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0x00303f3c},
    { 0x00200010, 0x00200000, 0x01200000, 0x00210004, 0x00200040, 0x00200000, 0x00210000, 0x00200110}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper953,3},
  {pat910,11,8, "EE2",0,0,2,3,0x2,2,0,
    { 0x003f0f3f, 0x0030f0f0, 0xc0f00000, 0x3f330000, 0xf0300000, 0x0f3f0000, 0x00333f3f, 0x00f0c0f0},
    { 0x001a0500, 0x00106060, 0x40900000, 0x24100000, 0x60100000, 0x051a0000, 0x00102424, 0x00904000}
   , 4,5,0,NULL, 10,0,0,0,0,1,NULL,autohelper910,0},
  {pat946,7,8, "EE901",-1,0,1,2,0x2,0,1,
    { 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000, 0xfc3c0000, 0xfcf00000, 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000},
    { 0x00221100, 0x00600060, 0x10200000, 0x00240000, 0x00600000, 0x11220000, 0x00240024, 0x00201000}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper946,3},
  {pat1121,20,8, "HH11",-1,0,3,4,0x0,1,2,
    { 0x3f3f3f3f, 0x00fcfcfc, 0xf0f0f000, 0xffff0000, 0xfcfc0000, 0x3f3f3f00, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 5,5,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat912,8,8, "EE4",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00250800, 0x00209010, 0x80600000, 0x18200000, 0x90200000, 0x08250000, 0x00201810, 0x00608000}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper912,3},
  {pat942,6,8, "EE802",0,-1,2,0,0x8,1,0,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c},
    { 0x00200010, 0x00200000, 0x00200000, 0x00210000, 0x00200000, 0x00200000, 0x00210000, 0x00200010}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper942,3},
  {pat909,7,8, "EE1",0,-1,1,2,0x2,1,1,
    { 0x003dfd00, 0xc0f0f050, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xfd3d0000, 0x0c3c3c14, 0x00f0fc00},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 4,5,0,NULL, 10,0,0,0,0,1,NULL,autohelper909,0},
  {pat969,5,4, "CE20",-1,0,1,2,0x0,0,1,
    { 0x0c3f0c00, 0x0030fc30, 0xc0f0c000, 0xfc300000, 0xfc300000, 0x0c3f0c00, 0x0030fc30, 0xc0f0c000},
    { 0x00110800, 0x00108010, 0x80100000, 0x08100000, 0x80100000, 0x08110000, 0x00100810, 0x00108000}
   , 5,5,0,NULL, 138,0,0,0,0,0,NULL,autohelper969,0},
  {pat914,8,8, "EE101",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00160000, 0x00101020, 0x00500000, 0x10100000, 0x10100000, 0x00160000, 0x00101020, 0x00500000}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper914,0},
  {pat1120,25,4, "HH10",-2,0,2,4,0x0,0,2,
    { 0x3f3f3f3f, 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0xffff0000, 0x3f3f3f3f, 0x00ffffff, 0xf0f0f0f0},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 5,5,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat921,5,8, "EE204",0,-1,1,1,0x2,1,0,
    { 0x003cfc00, 0xc0f0f000, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3c3c00, 0x00f0fc00},
    { 0x00204000, 0x40200000, 0x04200000, 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x00200400}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper921,3},
  {pat963,9,8, "CE14",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00220011, 0x00200020, 0x00200000, 0x00210000, 0x00200000, 0x00220000, 0x00210021, 0x00200010}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper963,3},
  {pat917,6,8, "EE104",0,-1,1,2,0x2,1,1,
    { 0x003cff00, 0xc0f0f0c0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3c0000, 0x0c3c3c0c, 0x00f0fc00},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper917,0},
  {pat964,8,8, "CE15",0,-1,2,1,0x0,1,0,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00200084, 0x00200000, 0x00200000, 0x01200200, 0x00200000, 0x00200000, 0x02200100, 0x00200048}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper964,3},
  {pat919,8,8, "EE202",0,0,1,3,0x2,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x001a0400, 0x00106020, 0x40900000, 0x24100000, 0x60100000, 0x041a0000, 0x00102420, 0x00904000}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper919,0},
  {pat967,6,8, "CE18",0,0,2,1,0x0,1,1,
    { 0x003c3c2c, 0x00f0f000, 0xf0f00000, 0x3f3e0000, 0xf0f00000, 0x3c3c0000, 0x003e3f00, 0x00f0f0e0},
    { 0x00180004, 0x00102000, 0x00900000, 0x21100000, 0x20100000, 0x00180000, 0x00102100, 0x00900040}
   , 5,5,0,NULL, 10,0,0,0,0,0,NULL,autohelper967,0},
  {pat911,6,8, "EE3",0,0,1,2,0x2,1,1,
    { 0x003d3d00, 0x00f0f050, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3d3d0000, 0x003c3c14, 0x00f0f000},
    { 0x00140000, 0x00101000, 0x00500000, 0x10100000, 0x10100000, 0x00140000, 0x00101000, 0x00500000}
   , 3,4,0,NULL, 10,0,0,0,0,1,NULL,autohelper911,0},
  {pat960,7,8, "CE11",0,0,2,2,0x0,0,1,
    { 0x003f0f0f, 0x0030f0f0, 0xc0f00000, 0x3f300000, 0xf0300000, 0x0f3f0000, 0x00303f3f, 0x00f0c0c0},
    { 0x00210409, 0x00204010, 0x40200000, 0x06200000, 0x40200000, 0x04210000, 0x00200611, 0x00204080}
   , 3,4,0,NULL, 10,0,0,0,0,1,NULL,autohelper960,3},
  {pat916,5,8, "EE103",0,-1,1,2,0x2,1,1,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 3,4,0,NULL, 10,0,0,0,0,1,NULL,autohelper916,0},
  {pat918,5,8, "EE201",0,-1,2,0,0x8,1,-1,
    { 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0x003c3f00, 0x00f0f000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c},
    { 0x00202040, 0x00a00000, 0x20200000, 0x00280100, 0x00a00000, 0x20200000, 0x01280000, 0x00202004}
   , 3,4,0,NULL, 10,0,0,0,0,1,NULL,autohelper918,3},
  {pat952,9,8, "CE3",-1,0,1,2,0x0,0,1,
    { 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc, 0xf0f0f000},
    { 0x00120000, 0x00100020, 0x00100000, 0x00100000, 0x00100000, 0x00120000, 0x00100020, 0x00100000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat922,4,8, "EE301",0,0,1,1,0x2,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00102000, 0x00900000, 0x20100000, 0x00180000, 0x00900000, 0x20100000, 0x00180000, 0x00102000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper922,0},
  {pat959,4,8, "CE10",0,0,1,1,0x0,1,0,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00280400, 0x00206000, 0x40a00000, 0x24200000, 0x60200000, 0x04280000, 0x00202400, 0x00a04000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper959,3},
  {pat958,4,8, "CE9",0,-1,1,0,0x0,1,-1,
    { 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0x003c3c00},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper958,3},
  {pat968,7,4, "CE19",-1,0,1,2,0x0,0,1,
    { 0x0c3f3f00, 0x00f0fcf0, 0xf0f0c000, 0xfc3c0000, 0xfcf00000, 0x3f3f0c00, 0x003cfc3c, 0xc0f0f000},
    { 0x00221100, 0x00600060, 0x10200000, 0x00240000, 0x00600000, 0x11220000, 0x00240024, 0x00201000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper968,3},
  {pat956,3,8, "CE7",0,0,1,1,0x0,1,0,
    { 0x00303c00, 0x00f0c000, 0xf0300000, 0x0c3c0000, 0xc0f00000, 0x3c300000, 0x003c0c00, 0x0030f000},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper956,3},
  {pat944,6,8, "EE804",0,0,1,2,0x2,0,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00120200, 0x001000a0, 0x00100000, 0x00100000, 0x00100000, 0x02120000, 0x00100028, 0x00100000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper944,0},
  {pat928,4,8, "EE405",0,0,1,1,0xa,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper928,3},
  {pat926,4,8, "EE403",0,0,1,1,0xa,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper926,0},
  {pat962,9,8, "CE13",0,0,2,2,0x0,1,1,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00220011, 0x00200020, 0x00200000, 0x00210000, 0x00200000, 0x00220000, 0x00210021, 0x00200010}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,autohelper962,3},
  {pat939,6,8, "EE503",0,0,1,2,0x1,1,1,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00181200, 0x00502080, 0x10900000, 0x20140000, 0x20500000, 0x12180000, 0x00142008, 0x00901000}
   , 3,3,0,NULL, 0,0,0,0,0,0,NULL,autohelper939,0},
  {pat970,9,8, "CE21",0,-2,3,0,0x0,1,-1,
    { 0x00b0f040, 0xe0f00000, 0x3f3a0000, 0x003c2d2d, 0x00f0e0e0, 0xf0b00000, 0x2d3c0000, 0x003a3f05},
    { 0x00200000, 0x00200000, 0x01200000, 0x00200004, 0x00200040, 0x00200000, 0x00200000, 0x00200100}
   , 3,3,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat1123,25,8, "HH13",-2,-1,2,3,0x0,0,1,
    { 0xffffffaf, 0xfeffffff, 0xfcfcfcf8, 0xfffefe00, 0xfffffe00, 0xffffffbf, 0xfefeffff, 0xfcfcfce8},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 3,3,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat950,8,4, "CE1",0,-1,2,2,0x0,1,0,
    { 0x003cff3c, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0c, 0x00f0fcf0},
    { 0x00184618, 0x40106080, 0x44900000, 0x26110400, 0x60104000, 0x46180000, 0x04112608, 0x00904490}
   , 2,2,0,NULL, 8,0,0,0,0,0,NULL,autohelper950,0},
  {pat1122,25,4, "HH12",-2,-1,2,3,0x0,0,1,
    { 0xffffffbf, 0xfeffffff, 0xfcfcfcf8, 0xfffffe00, 0xfffffe00, 0xffffffbf, 0xfeffffff, 0xfcfcfcf8},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 2,2,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat927,5,8, "EE404",0,0,1,2,0xa,1,1,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 2,2,0,NULL, 11,0,0,0,0,0,NULL,autohelper927,0},
  {pat938,6,8, "EE502",0,-1,1,2,0x2,1,1,
    { 0x003cff00, 0xc0f0f0c0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3c0000, 0x0c3c3c0c, 0x00f0fc00},
    { 0x00186200, 0x40902080, 0x24900000, 0x20180400, 0x20904000, 0x62180000, 0x04182008, 0x00902400}
   , 2,2,0,NULL, 2,0,0,0,0,0,NULL,autohelper938,0},
  {pat937,6,8, "EE501",0,-1,1,2,0x2,1,0,
    { 0x003cff00, 0xc0f0f0c0, 0xfcf00000, 0x3c3c0c00, 0xf0f0c000, 0xff3c0000, 0x0c3c3c0c, 0x00f0fc00},
    { 0x00184600, 0x40106080, 0x44900000, 0x24100400, 0x60104000, 0x46180000, 0x04102408, 0x00904400}
   , 2,2,0,NULL, 8,0,0,0,0,0,NULL,autohelper937,0},
  {pat951,8,4, "CE2",0,-1,2,2,0x0,1,1,
    { 0x003cff3c, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xff3c0000, 0x0c3f3f0c, 0x00f0fcf0},
    { 0x00186218, 0x40902080, 0x24900000, 0x22190400, 0x20904000, 0x62180000, 0x04192208, 0x00902490}
   , 2,2,0,NULL, 2,0,0,0,0,0,NULL,autohelper951,0},
  {pat931,5,8, "EE408",0,0,1,2,0xa,1,1,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00241100, 0x00601040, 0x10600000, 0x10240000, 0x10600000, 0x11240000, 0x00241004, 0x00601000}
   , 2,2,0,NULL, 8,0,0,0,0,0,NULL,autohelper931,3},
  {pat930,5,8, "EE407",0,0,1,2,0xa,1,0,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00180600, 0x00106080, 0x40900000, 0x24100000, 0x60100000, 0x06180000, 0x00102408, 0x00904000}
   , 2,2,0,NULL, 8,0,0,0,0,0,NULL,autohelper930,0},
  {pat933,5,8, "EE410",0,0,1,2,0xa,1,0,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00240900, 0x00209040, 0x80600000, 0x18200000, 0x90200000, 0x09240000, 0x00201804, 0x00608000}
   , 2,2,0,NULL, 2,0,0,0,0,0,NULL,autohelper933,3},
  {pat932,5,8, "EE409",0,0,1,2,0xa,1,1,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00182200, 0x00902080, 0x20900000, 0x20180000, 0x20900000, 0x22180000, 0x00182008, 0x00902000}
   , 2,2,0,NULL, 2,0,0,0,0,0,NULL,autohelper932,0},
  {pat935,6,8, "EE412",0,-1,2,0,0xa,2,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c},
    { 0x00206010, 0x40a00000, 0x24200000, 0x00290400, 0x00a04000, 0x60200000, 0x04290000, 0x00202410}
   , 2,2,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat936,8,8, "EE413",0,-1,2,1,0xa,2,1,
    { 0x00f0fcfc, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0x003cfcfc},
    { 0x00206410, 0x40a04000, 0x64200000, 0x04290400, 0x40a04000, 0x64200000, 0x04290400, 0x00206410}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat961,3,4, "CE12",0,0,0,2,0x0,0,1,
    { 0x003f0000, 0x00303030, 0x00f00000, 0x30300000, 0x30300000, 0x003f0000, 0x00303030, 0x00f00000},
    { 0x00210000, 0x00200010, 0x00200000, 0x00200000, 0x00200000, 0x00210000, 0x00200010, 0x00200000}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat934,6,8, "EE411",0,-1,2,0,0xa,0,-1,
    { 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0x003f3f00, 0x00f0f000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c},
    { 0x00109020, 0x80500000, 0x18100000, 0x00160800, 0x00508000, 0x90100000, 0x08160000, 0x00101820}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,0},
  {pat955,3,8, "CE6",0,0,1,1,0x0,1,0,
    { 0x00303c00, 0x00f0c000, 0xf0300000, 0x0c3c0000, 0xc0f00000, 0x3c300000, 0x003c0c00, 0x0030f000},
    { 0x00200400, 0x00204000, 0x40200000, 0x04200000, 0x40200000, 0x04200000, 0x00200400, 0x00204000}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat957,4,8, "CE8",0,-1,1,0,0x0,1,-1,
    { 0x0070f000, 0xd0f00000, 0x3c340000, 0x003c1c00, 0x00f0d000, 0xf0700000, 0x1c3c0000, 0x00343c00},
    { 0x00201000, 0x00600000, 0x10200000, 0x00240000, 0x00600000, 0x10200000, 0x00240000, 0x00201000}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat945,9,8, "EE805",0,0,2,2,0x2,1,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00281400, 0x00606000, 0x50a00000, 0x24240000, 0x60600000, 0x14280000, 0x00242400, 0x00a05000}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat1151,66,8, "SH3",0,-5,5,5,0xa,3,0,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 1,1,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat929,4,8, "EE406",0,0,1,1,0xa,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat1127,25,8, "HH17",-1,-3,3,1,0xa,1,-1,
    { 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfcfcfc00, 0xffffff00, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 1,1,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat913,4,8, "EE5",0,0,1,2,0x2,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 1,1,0,NULL, 10,0,0,0,0,0,NULL,NULL,3},
  {pat1149,45,8, "SH1",0,-4,4,4,0xa,2,0,
    { 0x00fdffff, 0xf0f0f0d0, 0xfffd0000, 0x3f3f3f1f, 0xf0f0f0d0, 0xfffd0000, 0x3f3f3f1f, 0x00fdffff},
    { 0x00200002, 0x00200000, 0x00200000, 0x00200002, 0x00200000, 0x00200000, 0x00200002, 0x00200002}
   , 1,1,0,NULL, 0,0,0,0,0,0,NULL,NULL,3},
  {pat1126,25,8, "HH16",-2,-2,2,2,0xa,1,0,
    { 0xfefeffff, 0xfffefeea, 0xffffffaf, 0xffffffff, 0xfefeffff, 0xfffefeea, 0xffffffaf, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 1,1,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat1150,81,8, "SH2",-2,-2,6,6,0xa,5,0,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00220022, 0x00200020, 0x00200000, 0x00220000, 0x00200000, 0x00220000, 0x00220022, 0x00200020}
   , 1,1,0,NULL, 1,0,0,0,0,0,NULL,NULL,3},
  {pat1125,30,8, "HH15",-1,-2,3,3,0xa,1,0,
    { 0xfefefeff, 0xfcfcfca8, 0xffffff00, 0xffffffff, 0xfcfcfcfc, 0xfefefe00, 0xffffffab, 0xffffffff},
    { 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000, 0x00100000}
   , 1,1,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat1124,30,8, "HH14",0,-2,4,3,0xa,2,1,
    { 0x00ffffff, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0xf0f0f0f0, 0xffff0000, 0x3f3f3f3f, 0x00ffffff},
    { 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x40100000, 0x04100000, 0x00100400, 0x00104000}
   , 1,1,0,NULL, 0,0,0,0,0,0,high_handicap_helper,NULL,0},
  {pat1152,121,8, "SH4",-2,-2,8,8,0xa,5,2,
    { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff},
    { 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000, 0x00200000}
   , 1,1,0,NULL, 1,0,0,0,0,0,NULL,NULL,3},
  {pat552,4,4, "CC28",0,0,2,2,0x0,1,1,
    { 0x003c3c00, 0x00f0f000, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3c3c0000, 0x003c3c00, 0x00f0f000},
    { 0x00182000, 0x00902000, 0x20900000, 0x20180000, 0x20900000, 0x20180000, 0x00182000, 0x00902000}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,autohelper552,0},
  {pat633,5,8, "CC109",0,0,1,2,0x0,1,1,
    { 0x003c3f00, 0x00f0f0c0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3c0000, 0x003c3c0c, 0x00f0f000},
    { 0x00240200, 0x00201080, 0x00600000, 0x10200000, 0x10200000, 0x02240000, 0x00201008, 0x00600000}
   , 0,0,0,NULL, 32,0,0,0,0,0,try_to_rescue_helper,NULL,3},
  {pat853,16,8, "CD44",-1,0,3,4,0x0,0,2,
    { 0x2f3f0f0f, 0x0038fcfc, 0xc0f0e000, 0xffb00000, 0xfc380000, 0x0f3f2f00, 0x00b0ffff, 0xe0f0c0c0},
    { 0x00100808, 0x00108000, 0x80100000, 0x0a100000, 0x80100000, 0x08100000, 0x00100a00, 0x00108080}
   , 0,0,0,NULL, 32,0,0,0,0,0,cap3_helper,NULL,0},
  {pat854,16,8, "CD45",-1,0,3,4,0x0,0,2,
    { 0x1f3f0f0f, 0x0034fcfc, 0xc0f0d000, 0xff700000, 0xfc340000, 0x0f3f1f00, 0x0070ffff, 0xd0f0c0c0},
    { 0x00200404, 0x00204000, 0x40200000, 0x05200000, 0x40200000, 0x04200000, 0x00200500, 0x00204040}
   , 0,0,0,NULL, 512,0,0,0,0,0,cap3_helper,NULL,3},
  {pat867,6,8, "CD58",0,0,1,3,0x0,1,2,
    { 0x003f3f00, 0x00f0f0f0, 0xf0f00000, 0x3c3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3c3c, 0x00f0f000},
    { 0x00111000, 0x00500010, 0x10100000, 0x00140000, 0x00500000, 0x10110000, 0x00140010, 0x00101000}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,NULL,0},
  {pat895,5,4, "CD86",0,-1,2,1,0x0,1,1,
    { 0x0030dc30, 0xc070c000, 0xdc300000, 0x0c370c00, 0xc070c000, 0xdc300000, 0x0c370c00, 0x0030dc30},
    { 0x00104010, 0x40100000, 0x04100000, 0x00110400, 0x00104000, 0x40100000, 0x04110000, 0x00100410}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,autohelper895,0},
  {pat791,12,8, "ED101",0,0,2,3,0x2,0,2,
    { 0x003f3f3f, 0x00f0f0f0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3f0000, 0x003f3f3f, 0x00f0f0f0},
    { 0x00202600, 0x00a04080, 0x60200000, 0x04280000, 0x40a00000, 0x26200000, 0x00280408, 0x00206000}
   , 0,0,0,NULL, 544,0,0,0,0,0,NULL,autohelper791,3},
  {pat790,13,8, "ED100",0,-1,3,2,0x8,3,1,
    { 0x003cffff, 0xc0f0f0c0, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xff3c0000, 0x0f3f3f0f, 0x00f0fcfc},
    { 0x00281602, 0x00606080, 0x50a00000, 0x24240000, 0x60600000, 0x16280000, 0x0024240a, 0x00a05000}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat238,7,8, "EB1902",0,0,3,1,0x4,1,1,
    { 0x003c3c28, 0x00f0f000, 0xf0f00000, 0x3e3e0000, 0xf0f00000, 0x3c3c0000, 0x003e3e00, 0x00f0f0a0},
    { 0x00241000, 0x00601000, 0x10600000, 0x10240000, 0x10600000, 0x10240000, 0x00241000, 0x00601000}
   , 0,0,0,NULL, 32,0,0,0,0,0,not_lunch_helper,NULL,3},
  {pat195,18,8, "EB1212",0,-1,2,4,0x2,1,3,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00259204, 0x80601090, 0x18600000, 0x11240800, 0x10608000, 0x92250000, 0x08241118, 0x00601840}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat871,12,8, "CD62",0,0,3,3,0x0,2,2,
    { 0x00303f3f, 0x00f0c0c0, 0xf0300000, 0x0f3f0000, 0xc0f00000, 0x3f300000, 0x003f0f0f, 0x0030f0f0},
    { 0x00201010, 0x00600000, 0x10200000, 0x00250000, 0x00600000, 0x10200000, 0x00250000, 0x00201010}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,autohelper871,3},
  {pat873,5,8, "CD64",0,-1,1,1,0x0,0,-1,
    { 0x00fc3c00, 0x30f0f000, 0xf0fc0000, 0x3c3c3000, 0xf0f03000, 0x3cfc0000, 0x303c3c00, 0x00fcf000},
    { 0x00182400, 0x00906000, 0x60900000, 0x24180000, 0x60900000, 0x24180000, 0x00182400, 0x00906000}
   , 0,0,0,NULL, 1,0,0,0,0,0,detect_trap_helper,NULL,0},
  {pat667,7,4, "CC143",0,-1,2,1,0x0,1,-1,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00102410, 0x00904000, 0x60100000, 0x04190000, 0x40900000, 0x24100000, 0x00190400, 0x00106010}
   , 0,0,0,NULL, 1024,0,0,0,0,0,revise_value_helper,NULL,0},
  {pat239,7,8, "EB1903",0,0,3,1,0x4,1,1,
    { 0x003c3c14, 0x00f0f000, 0xf0f00000, 0x3d3d0000, 0xf0f00000, 0x3c3c0000, 0x003d3d00, 0x00f0f050},
    { 0x00182000, 0x00902000, 0x20900000, 0x20180000, 0x20900000, 0x20180000, 0x00182000, 0x00902000}
   , 0,0,0,NULL, 32,0,0,0,0,0,not_lunch_helper,NULL,0},
  {pat902,9,4, "CD93",0,-1,2,1,0x0,1,0,
    { 0x00fcfcfc, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3f00, 0x00fcfcfc},
    { 0x00200064, 0x00200000, 0x00200000, 0x01220100, 0x00200000, 0x00200000, 0x01220100, 0x00200064}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,autohelper902,3},
  {pat23,17,8, "EB112",0,-1,3,3,0x2,1,1,
    { 0x0033feff, 0xc0f0c0b0, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfe330000, 0x0f3f0f3b, 0x0030fcfc},
    { 0x00204040, 0x40200000, 0x04200000, 0x00200500, 0x00204000, 0x40200000, 0x05200000, 0x00200404}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat779,9,8, "ED89",0,0,2,2,0x2,1,1,
    { 0x003e3f3f, 0x00f0f0e0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3e0000, 0x003f3f2f, 0x00f0f0f0},
    { 0x00142000, 0x00901000, 0x20500000, 0x10180000, 0x10900000, 0x20140000, 0x00181000, 0x00502000}
   , 0,0,0,NULL, 32,0,0,0,0,0,dont_attack_helper,NULL,0},
  {pat1131,8,8, "LD4",0,0,2,2,0x0,1,2,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x00141005, 0x00501000, 0x10500000, 0x11140000, 0x10500000, 0x10140000, 0x00141101, 0x00501040}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye_helper,NULL,0},
  {pat1132,8,8, "LD5",0,0,2,2,0x0,1,2,
    { 0x003f3f0f, 0x00f0f0f0, 0xf0f00000, 0x3f3c0000, 0xf0f00000, 0x3f3f0000, 0x003c3f3f, 0x00f0f0c0},
    { 0x0028200a, 0x00a02000, 0x20a00000, 0x22280000, 0x20a00000, 0x20280000, 0x00282202, 0x00a02080}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye_helper,NULL,3},
  {pat1133,9,8, "LD6",0,-1,2,1,0x0,1,-1,
    { 0x00fcfcf8, 0xf0f0f000, 0xfcfc0000, 0x3e3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3e00, 0x00fcfcbc},
    { 0x00180410, 0x00106000, 0x40900000, 0x24110000, 0x60100000, 0x04180000, 0x00112400, 0x00904010}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye1_helper,NULL,0},
  {pat1134,9,8, "LD7",0,-1,2,1,0x0,1,-1,
    { 0x00fcfcf4, 0xf0f0f000, 0xfcfc0000, 0x3d3f3f00, 0xf0f0f000, 0xfcfc0000, 0x3f3f3d00, 0x00fcfc7c},
    { 0x00240820, 0x00209000, 0x80600000, 0x18220000, 0x90200000, 0x08240000, 0x00221800, 0x00608020}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye1_helper,NULL,3},
  {pat1135,11,8, "LD8",0,-1,2,2,0x2,2,1,
    { 0x00b8ffff, 0xe0f0e0c0, 0xfcb80000, 0x2f3f2f00, 0xe0f0e000, 0xffb80000, 0x2f3f2f0f, 0x00b8fcfc},
    { 0x00104620, 0x40104080, 0x44100000, 0x04120400, 0x40104000, 0x46100000, 0x04120408, 0x00104420}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye2_helper,NULL,0},
  {pat1136,11,8, "LD9",0,-1,2,2,0x2,2,1,
    { 0x0074ffff, 0xd0f0d0c0, 0xfc740000, 0x1f3f1f00, 0xd0f0d000, 0xff740000, 0x1f3f1f0f, 0x0074fcfc},
    { 0x00208910, 0x80208040, 0x88200000, 0x08210800, 0x80208000, 0x89200000, 0x08210804, 0x00208810}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye2_helper,NULL,3},
  {pat1137,13,8, "LD10",0,-1,1,5,0x2,0,1,
    { 0x00beff00, 0xe0f0f0e0, 0xfcf80000, 0x3c3c2c00, 0xf0f0e000, 0xffbe0000, 0x2c3c3c2c, 0x00f8fc00},
    { 0x00104000, 0x40100000, 0x04100000, 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x00100400}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye3_helper,NULL,0},
  {pat1138,13,8, "LD11",0,-1,1,5,0x2,0,1,
    { 0x007dff00, 0xd0f0f0d0, 0xfcf40000, 0x3c3c1c00, 0xf0f0d000, 0xff7d0000, 0x1c3c3c1c, 0x00f4fc00},
    { 0x00208000, 0x80200000, 0x08200000, 0x00200800, 0x00208000, 0x80200000, 0x08200000, 0x00200800}
   , 0,0,0,NULL, 1024,0,0,0,0,0,make_eye3_helper,NULL,3},
  {pat1139,12,8, "LD12",0,-1,2,2,0x2,1,0,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00240000, 0x00201000, 0x00600000, 0x10200000, 0x10200000, 0x00240000, 0x00201000, 0x00600000}
   , 0,0,0,NULL, 1024,0,0,0,0,0,expand_eyespace_helper,NULL,3},
  {pat1140,12,8, "LD13",0,-1,2,2,0x2,1,0,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00180000, 0x00102000, 0x00900000, 0x20100000, 0x20100000, 0x00180000, 0x00102000, 0x00900000}
   , 0,0,0,NULL, 1024,0,0,0,0,0,expand_eyespace_helper,NULL,0},
  {pat1141,7,4, "LD14",0,-1,2,1,0x0,1,0,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00108410, 0x80104000, 0x48100000, 0x04110800, 0x40108000, 0x84100000, 0x08110400, 0x00104810}
   , 0,0,0,NULL, 1024,0,0,0,0,0,chimera_helper,NULL,0},
  {pat1142,7,4, "LD15",0,-1,2,1,0x0,1,0,
    { 0x003cfc3c, 0xc0f0f000, 0xfcf00000, 0x3f3f0c00, 0xf0f0c000, 0xfc3c0000, 0x0c3f3f00, 0x00f0fcf0},
    { 0x00204820, 0x40208000, 0x84200000, 0x08220400, 0x80204000, 0x48200000, 0x04220800, 0x00208420}
   , 0,0,0,NULL, 1024,0,0,0,0,0,chimera_helper,NULL,3},
  {pat1143,5,8, "LD16",-1,0,1,1,0x5,-1,0,
    { 0x3c3c0c00, 0x003cfc00, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0c3c3c00, 0x00f0fc00, 0xf0f0c000},
    { 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x40100000, 0x04100000, 0x00100400, 0x00104000}
   , 0,0,0,NULL, 1024,0,0,0,0,0,semimarginal_helper,NULL,0},
  {pat1144,5,8, "LD17",-1,0,1,1,0x5,-1,0,
    { 0x3c3c0c00, 0x003cfc00, 0xc0f0f000, 0xfcf00000, 0xfc3c0000, 0x0c3c3c00, 0x00f0fc00, 0xf0f0c000},
    { 0x00200800, 0x00208000, 0x80200000, 0x08200000, 0x80200000, 0x08200000, 0x00200800, 0x00208000}
   , 0,0,0,NULL, 1024,0,0,0,0,0,semimarginal_helper,NULL,3},
  {pat1145,8,8, "LD18",0,-1,1,2,0x2,1,2,
    { 0x00ffff00, 0xf0f0f0f0, 0xfcfc0000, 0x3c3c3c00, 0xf0f0f000, 0xffff0000, 0x3c3c3c3c, 0x00fcfc00},
    { 0x00228400, 0x80204020, 0x48200000, 0x04200800, 0x40208000, 0x84220000, 0x08200420, 0x00204800}
   , 0,0,0,NULL, 1024,0,0,0,0,0,eye_on_edge_helper,NULL,3},
  {pat1146,8,8, "LD19",0,-1,1,2,0x2,1,2,
    { 0x00ffff00, 0xf0f0f0f0, 0xfcfc0000, 0x3c3c3c00, 0xf0f0f000, 0xffff0000, 0x3c3c3c3c, 0x00fcfc00},
    { 0x00114800, 0x40108010, 0x84100000, 0x08100400, 0x80104000, 0x48110000, 0x04100810, 0x00108400}
   , 0,0,0,NULL, 1024,0,0,0,0,0,eye_on_edge_helper,NULL,0},
  {pat1147,7,8, "LD20",0,-1,2,1,0x2,1,-1,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00100400, 0x00104000, 0x40100000, 0x04100000, 0x40100000, 0x04100000, 0x00100400, 0x00104000}
   , 0,0,0,NULL, 1024,0,0,0,0,0,move_half_eye_helper,NULL,0},
  {pat1148,7,8, "LD21",0,-1,2,1,0x2,1,-1,
    { 0x0030fcfc, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0xc0f0c000, 0xfc300000, 0x0f3f0f00, 0x0030fcfc},
    { 0x00200800, 0x00208000, 0x80200000, 0x08200000, 0x80200000, 0x08200000, 0x00200800, 0x00208000}
   , 0,0,0,NULL, 1024,0,0,0,0,0,move_half_eye_helper,NULL,3},
  {pat778,8,8, "ED88",0,-1,2,1,0x2,2,0,
    { 0x003cfcfc, 0xc0f0f000, 0xfcf00000, 0x3f3f0f00, 0xf0f0c000, 0xfc3c0000, 0x0f3f3f00, 0x00f0fcfc},
    { 0x00144400, 0x40105000, 0x44500000, 0x14100400, 0x50104000, 0x44140000, 0x04101400, 0x00504400}
   , 0,0,0,NULL, 32,0,0,0,0,0,indirect_helper,NULL,0},
  {pat745,12,8, "ED55",0,-1,3,2,0x2,1,1,
    { 0x00b8fcfc, 0xe0f0e000, 0xfcb80000, 0x2f3f2f00, 0xe0f0e000, 0xfcb80000, 0x2f3f2f00, 0x00b8fcfc},
    { 0x00104090, 0x40100000, 0x04100000, 0x00110600, 0x00104000, 0x40100000, 0x06110000, 0x00100418}
   , 0,0,0,NULL, 42,0,0,0,0,0,NULL,NULL,0},
  {pat194,12,8, "EB1211",0,-1,2,2,0x2,2,1,
    { 0x007fffff, 0xd0f0f0f0, 0xfcf40000, 0x3f3f1f00, 0xf0f0d000, 0xff7f0000, 0x1f3f3f3f, 0x00f4fcfc},
    { 0x00259000, 0x80601010, 0x18600000, 0x10240800, 0x10608000, 0x90250000, 0x08241010, 0x00601800}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,NULL,3},
  {pat752,9,8, "ED62",0,0,2,2,0x2,1,2,
    { 0x003e3f3f, 0x00f0f0e0, 0xf0f00000, 0x3f3f0000, 0xf0f00000, 0x3f3e0000, 0x003f3f2f, 0x00f0f0f0},
    { 0x00141024, 0x00501000, 0x10500000, 0x11160000, 0x10500000, 0x10140000, 0x00161100, 0x00501060}
   , 0,0,0,NULL, 32,0,0,0,0,0,NULL,NULL,0},
  {NULL, 0,0,NULL,0,0,0,0,0,0,0,{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},0,0,0,NULL,0,0,0,0,0,0,NULL,NULL,0}
};

#define PATNO 1153

